{"version":3,"sources":["ng://ngx-openmrs-formentry/form-entry/services/debug-mode.service.ts","ng://ngx-openmrs-formentry/form-entry/services/form-errors.service.ts","null","ng://ngx-openmrs-formentry/change-tracking/control-relation.ts","ng://ngx-openmrs-formentry/change-tracking/control-relations.ts","ng://ngx-openmrs-formentry/form-entry/control-hiders-disablers/hider-helpers.ts","ng://ngx-openmrs-formentry/form-entry/control-alerts/alert-helpers.ts","ng://ngx-openmrs-formentry/form-entry/control-hiders-disablers/disabler-helper.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form-node.ts","ng://ngx-openmrs-formentry/form-entry/question-models/validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/js-expression-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/conditional-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/control-relations.factory.ts","ng://ngx-openmrs-formentry/form-entry/expression-runner/expression-runner.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-form-control.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-form-group.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-form-array.ts","ng://ngx-openmrs-formentry/form-entry/question-models/question-base.ts","ng://ngx-openmrs-formentry/form-entry/validators/conditional-required.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/conditional-answered.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/required.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/date.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/min.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/max.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/min-date.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/max-date.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/future-date-restriction.validator.ts","ng://ngx-openmrs-formentry/form-entry/helpers/js-expression-helper.ts","ng://ngx-openmrs-formentry/form-entry/validators/validations.ts","ng://ngx-openmrs-formentry/form-entry/validators/js-expression.validator.ts","ng://ngx-openmrs-formentry/form-entry/utils/messages.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/validation.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/hiders-disablers.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/show-messages.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form-control.service.ts","ng://ngx-openmrs-formentry/form-entry/form-renderer/form-renderer.component.css.ts","ng://ngx-openmrs-formentry/form-entry/data-sources/data-sources.ts","ng://ngx-openmrs-formentry/form-entry/form-renderer/form-renderer.component.ts","ng://ngx-openmrs-formentry/form-entry/error-renderer/error-renderer.component.ts","ng://ngx-openmrs-formentry/form-entry/helpers/historical-field-helper-service.ts","ng://ngx-openmrs-formentry/form-entry/directives/historical-value-directive.ts","ng://ngx-openmrs-formentry/components/select/select.component.style.ts","ng://ngx-openmrs-formentry/components/select/option.ts","ng://ngx-openmrs-formentry/components/select/diacritics.ts","ng://ngx-openmrs-formentry/components/select/option-list.ts","ng://ngx-openmrs-formentry/components/select/select.component.ts","ng://ngx-openmrs-formentry/components/select/select-dropdown.component.style.ts","ng://ngx-openmrs-formentry/components/select/select-dropdown.component.ts","ng://ngx-openmrs-formentry/components/select/select.module.ts","ng://ngx-openmrs-formentry/components/file-upload/secure.pipe.ts","ng://ngx-openmrs-formentry/shared.module.ts","ng://ngx-openmrs-formentry/components/file-upload/file-upload.component.ts","ng://ngx-openmrs-formentry/components/file-upload/file-upload.module.ts","ng://ngx-openmrs-formentry/components/date-time-picker/date-picker/date-picker.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/time-picker/time-picker.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/picker-modal/modal.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/pipes/moment.pipe.ts","ng://ngx-openmrs-formentry/components/date-time-picker/date-time-picker.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/date-time-picker.module.ts","ng://ngx-openmrs-formentry/components/ngx-date-time-picker/ngx-date-time-picker.component.ts","ng://ngx-openmrs-formentry/components/ngx-date-time-picker/ngx-date-time-picker.module.ts","ng://ngx-openmrs-formentry/form-entry/question-models/select-option.ts","ng://ngx-openmrs-formentry/components/afe-ng-select.component.ts","ng://ngx-openmrs-formentry/form-entry/services/form-schema-compiler.service.ts","ng://ngx-openmrs-formentry/form-entry/question-models/text-input-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/text-area-input-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/select-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/ui-select-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/date-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/multi-select-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/interfaces/nested-questions.ts","ng://ngx-openmrs-formentry/form-entry/question-models/group-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/repeating-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/checkbox.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/file-upload-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/test-order-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/date-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/max-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/min-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/data-sources/dummy-data-source.ts","ng://ngx-openmrs-formentry/form-entry/services/historical-encounter-data.service.ts","ng://ngx-openmrs-formentry/form-entry/helpers/historical-expression-helper-service.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/question.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form.factory.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/obs-adapter-helper.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/obs.adapter.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/order.adapter.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/encounter.adapter.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/person-attribute.adapter.ts","ng://ngx-openmrs-formentry/components/remote-select/remote-select.component.ts","ng://ngx-openmrs-formentry/components/remote-select/remote-select.module.ts","ng://ngx-openmrs-formentry/components/appointments-overview/appointments-overview.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-viewer.service.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-view/encounter-viewer.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-container/encounter-container.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/display-controls/question-control.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/display-controls/file-preview.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/display-controls/remote-answer.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-viewer.module.ts","ng://ngx-openmrs-formentry/components/check-box/checkbox.component.ts","ng://ngx-openmrs-formentry/components/check-box/checkbox.module.ts","ng://ngx-openmrs-formentry/form-entry/form-entry.module.ts","ng://ngx-openmrs-formentry/form-entry/question-models/pair.model.ts"],"names":["DebugModeService","prototype","debugEnabled","Injectable","FormErrorsService","Subject","this","announceErrorFieldSource","asObservable","announceErrorField","error","next","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","constructor","create","__values","o","m","Symbol","iterator","i","call","length","value","done","ControlRelation","control","relatedTo","_control","_relatedTo","_registerForChangesFromRelatedControl","defineProperty","_lastUpdateValue","updateControlBasedOnRelation","newValue","updateCalculatedValue","updateValueAndValidity","updateHiddenState","updateDisabledState","updateAlert","valueChanges","subscribe","_this","ControlRelations","relationFor","_relationFor","_relations","addRelatedControls","_otherRelations","AbstractControl","relations","push","HiderHelper","hideControl","hidden","disable","showControl","setHiderForControl","hider","hiders","clearHidersForControl","splice","evaluateControlHiders","hiddenValue","forEach","reEvaluateHidingExpression","toHide","setUpReEvaluationWhenValueChanges","val","AlertHelper","hideAlert","shown","showAlert","setAlertsForControl","alert","alerts","clearAlertsForControl","evaluateControlAlerts","messageValue","message","reEvaluateAlertExpression","alertMessage","DisablerHelper","setDisablerForControl","disabler","disablers","clearDisablersForControl","evaluateControlDisablers","toDisable","reEvaluateDisablingExpression","enable","NodeBase","question","form","parentPath","_questionModel","_form","_path","key","removeAt","index","createChildNode","removeChildNode","LeafNode","_super","parentControl","tslib_1.__extends","GroupNode","_children","setChild","node","children","ArrayNode","formFactory","childNodeCreatedEvents","createChildFunc","g","fireChildNodeCreatedListener","removeChildFunc","addChildNodeCreatedListener","func","ValidationModel","validations","type","JsExpressionValidationModel","failsWhenExpression","ConditionalValidationModel","referenceQuestionId","referenceQuestionAnswers","ControlRelationsFactory","buildRelations","rootNode","controlsStore","mapControlIds","nodeBase","setRelations","buildArrayNodeRelations","rootControlsStore","arrayControlStore","child","questionBase","id","createRelationsToArrayControls","rChild","parentNodePath","path","substring","lastIndexOf","indexOf","aChild","aChildId","this_1","hasRelation","nodes","searchNodeByPath","an","rootControl_1","controlRelations","otherRelations","addValueChangeListener","getRelationsForControl","nodeBaseArray","searchNodeByQuestionId","controlList","addRelationToControl","required","validators","element","hide","field","calculateExpression","related","moment","moment_","ExpressionRunner","getRunnable","expression","helper","dataDependencies","runner","runnable","run","scope","uuid","window","getControlRelationValueString","getHelperMethods","getDataDependencies","dataSourcesContainer","dataSources","paramList","argList","funcDeclarationCode","funcCallCode","keys","console","warn","eval","e","relation","relatedAsControl","isArray","arrayNode","uuid_1","controlRelationsFactory_1","relationsForControl_1","concat","setControlArrayValues","relationsForControl","_getFormControlKeys","values","_getValuesForKey","array","obj","AfeFormControl","formState","validator","asyncValidator","_controlRelations","_previousValue","fireValueChangeListener","param","setValue","hiderHelper","show","setHidingFn","newHider","setCalculatorFn","newCalculator","calculator","_val","clearHidingFns","setDisablingFn","newDisabler","disablerHelper","clearDisablingFns","setAlertFn","clearMessageFns","_valueChangeListener","FormControl","AfeFormGroup","controls","FormGroup","AfeFormArray","_uuid","FormArray","QuestionBase","options","defaultValue","originalValue","extras","renderingType","label","historicalDataValue","setHistoricalValue","v","enableHistoricalValue","showHistoricalEncounterDate","showHistoricalValueDate","undefined","ConditionalRequiredValidator","validate","model","isRequired","relationValue","conditional_required","ConditionalAnsweredValidator","successCondition","conditional_answered","RequiredValidator","DateValidator","test","Date","toString","date","MinValidator","min","requiredValue","actualValue","MaxValidator","max","MinDateValidator","mindate","requiredDate","newDate","getTime","actualDate","MaxDateValidator","maxdate","FutureDateRestrictionValidator","now","futureDateRestriction","JsExpressionHelper","calcBMI","height","weight","r","toFixed","parseFloat","calcBMIForAgeZscore","bmiForAgeRef","bmi","formattedSDValue","refSectionObject","_.first","refObjectValues","map","x","refObjectKeys","minimumValue","minReferencePoint_1","_.forEach","lastReferenceValue_1","_.last","_.findIndex","replace","includes","calcWeightForHeightZscore","weightForHeightRef","refSection","_.filter","refObject","minReferencePoint_2","lastReferenceValue_2","calcHeightForAgeZscore","heightForAgeRef","minReferencePoint_3","lastReferenceValue_3","isEmpty","arrayContains","members","contains","extractRepeatingGroupValues","item","formatDate","format","offset","Error","arrayContainsAny","Validations","JsExpressionValidator","JSExpressionValidatorsEnabled","helperFunctions","js_expression","ValidationFactory","getValidators","list","dateValidator","allowFutureDates","futureDateRestrictionValidator","jsExpressionValidator","getMaxValueValidator","getMinValueValidator","conditionalRequiredValidator","conditionalAnsweredValidator","requiredValidator","Validators","minLength","maxLength","errors","messages","property","Messages","REQUIRED_FIELD_MSG","INVALID_DATE_MSG","FUTURE_DATE_RESTRICTION_MSG","MIN_LENGTH_MSG","minlength","requiredLength","maxlength","MAX_DATE_MSG","MIN_DATE_MSG","MAX_MSG","MIN_MSG","HidersDisablersFactory","expressionRunner","expressionHelper","_debugModeService","getJsExpressionDisabler","disableWhenExpression","result","getJsExpressionHider","convertHideObjectToString","hideWhenExpression","join","AlertsFactory","getJsExpressionshowAlert","alertWhenExpression","FormControlService","validationFactory","hidersDisablersFactory","alertsFactory","generateControlModel","questionModel","generateChildren","controlType","AfeControlType","generateFormArray","generateFormGroupModel","generateFormControl","formGroup","wireHidersDisablers","wireAlerts","setControl","asGroup","questions","_generateFormGroupChildrenModel","generated","addControl","formArray","wireCalculator","alert_1","dataSource","DEFAULT_STYLES","DataSources","_dataSources","registerDataSource","unWrap","log","clearDataSource","FormRendererComponent","formErrorsService","document","activeTab","ngOnInit","setUpRemoteSelect","setUpFileUpload","tab","valueProcessingInfo","lastFormTab","announceErrorField$","scrollToControl","isCollapsed","isExpanded","parentComponent","addChildComponent","childComponents","dataSourceOptions","clickTab","tabNumber","loadPreviousTab","isCurrentTabFirst","body","scrollTop","isCurrentTabLast","loadNextTab","tabSelected","$event","setPreviousTab","hasErrors","touched","valid","getErrors","split","elSelector","tabComponent","setTimeout","section","getElementById","focus","scrollIntoView","onDateChanged","upload","event","toggleInformation","infoId","style","display","Component","args","selector","template","styles","Inject","DOCUMENT","Input","ErrorRendererComponent","showErrors","markInvalidControls","getControlError","errorNode","pageIndex","getPageIndex","HistoricalFieldHelperService","getDisplayTextFromOptions","valueProperty","displayProperty","displayText","historicalValue","_.isArray","valueConverted_1","_.each","option","HistoricalValueDirective","historicalFieldHelper","EventEmitter","target","name","_node","compareString","stopPropagation","_nodeChange","emit","a","_.isUndefined","text","_date","valueDate","Directive","Output","HostListener","STYLE","Option","disabled","highlighted","selected","undecoratedCopy","Diacritics","strip","DIACRITICS","Ⓐ","Ａ","À","Á","Â","Ầ","Ấ","Ẫ","Ẩ","Ã","Ā","Ă","Ằ","Ắ","Ẵ","Ẳ","Ȧ","Ǡ","Ä","Ǟ","Ả","Å","Ǻ","Ǎ","Ȁ","Ȃ","Ạ","Ậ","Ặ","Ḁ","Ą","Ⱥ","Ɐ","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ⓑ","Ｂ","Ḃ","Ḅ","Ḇ","Ƀ","Ƃ","Ɓ","Ⓒ","Ｃ","Ć","Ĉ","Ċ","Č","Ç","Ḉ","Ƈ","Ȼ","Ꜿ","Ⓓ","Ｄ","Ḋ","Ď","Ḍ","Ḑ","Ḓ","Ḏ","Đ","Ƌ","Ɗ","Ɖ","Ꝺ","Ǳ","Ǆ","ǲ","ǅ","Ⓔ","Ｅ","È","É","Ê","Ề","Ế","Ễ","Ể","Ẽ","Ē","Ḕ","Ḗ","Ĕ","Ė","Ë","Ẻ","Ě","Ȅ","Ȇ","Ẹ","Ệ","Ȩ","Ḝ","Ę","Ḙ","Ḛ","Ɛ","Ǝ","Ⓕ","Ｆ","Ḟ","Ƒ","Ꝼ","Ⓖ","Ｇ","Ǵ","Ĝ","Ḡ","Ğ","Ġ","Ǧ","Ģ","Ǥ","Ɠ","Ꞡ","Ᵹ","Ꝿ","Ⓗ","Ｈ","Ĥ","Ḣ","Ḧ","Ȟ","Ḥ","Ḩ","Ḫ","Ħ","Ⱨ","Ⱶ","Ɥ","Ⓘ","Ｉ","Ì","Í","Î","Ĩ","Ī","Ĭ","İ","Ï","Ḯ","Ỉ","Ǐ","Ȉ","Ȋ","Ị","Į","Ḭ","Ɨ","Ⓙ","Ｊ","Ĵ","Ɉ","Ⓚ","Ｋ","Ḱ","Ǩ","Ḳ","Ķ","Ḵ","Ƙ","Ⱪ","Ꝁ","Ꝃ","Ꝅ","Ꞣ","Ⓛ","Ｌ","Ŀ","Ĺ","Ľ","Ḷ","Ḹ","Ļ","Ḽ","Ḻ","Ł","Ƚ","Ɫ","Ⱡ","Ꝉ","Ꝇ","Ꞁ","Ǉ","ǈ","Ⓜ","Ｍ","Ḿ","Ṁ","Ṃ","Ɱ","Ɯ","Ⓝ","Ｎ","Ǹ","Ń","Ñ","Ṅ","Ň","Ṇ","Ņ","Ṋ","Ṉ","Ƞ","Ɲ","Ꞑ","Ꞥ","Ǌ","ǋ","Ⓞ","Ｏ","Ò","Ó","Ô","Ồ","Ố","Ỗ","Ổ","Õ","Ṍ","Ȭ","Ṏ","Ō","Ṑ","Ṓ","Ŏ","Ȯ","Ȱ","Ö","Ȫ","Ỏ","Ő","Ǒ","Ȍ","Ȏ","Ơ","Ờ","Ớ","Ỡ","Ở","Ợ","Ọ","Ộ","Ǫ","Ǭ","Ø","Ǿ","Ɔ","Ɵ","Ꝋ","Ꝍ","Ƣ","Ꝏ","Ȣ","Ⓟ","Ｐ","Ṕ","Ṗ","Ƥ","Ᵽ","Ꝑ","Ꝓ","Ꝕ","Ⓠ","Ｑ","Ꝗ","Ꝙ","Ɋ","Ⓡ","Ｒ","Ŕ","Ṙ","Ř","Ȑ","Ȓ","Ṛ","Ṝ","Ŗ","Ṟ","Ɍ","Ɽ","Ꝛ","Ꞧ","Ꞃ","Ⓢ","Ｓ","ẞ","Ś","Ṥ","Ŝ","Ṡ","Š","Ṧ","Ṣ","Ṩ","Ș","Ş","Ȿ","Ꞩ","Ꞅ","Ⓣ","Ｔ","Ṫ","Ť","Ṭ","Ț","Ţ","Ṱ","Ṯ","Ŧ","Ƭ","Ʈ","Ⱦ","Ꞇ","Ꜩ","Ⓤ","Ｕ","Ù","Ú","Û","Ũ","Ṹ","Ū","Ṻ","Ŭ","Ü","Ǜ","Ǘ","Ǖ","Ǚ","Ủ","Ů","Ű","Ǔ","Ȕ","Ȗ","Ư","Ừ","Ứ","Ữ","Ử","Ự","Ụ","Ṳ","Ų","Ṷ","Ṵ","Ʉ","Ⓥ","Ｖ","Ṽ","Ṿ","Ʋ","Ꝟ","Ʌ","Ꝡ","Ⓦ","Ｗ","Ẁ","Ẃ","Ŵ","Ẇ","Ẅ","Ẉ","Ⱳ","Ⓧ","Ｘ","Ẋ","Ẍ","Ⓨ","Ｙ","Ỳ","Ý","Ŷ","Ỹ","Ȳ","Ẏ","Ÿ","Ỷ","Ỵ","Ƴ","Ɏ","Ỿ","Ⓩ","Ｚ","Ź","Ẑ","Ż","Ž","Ẓ","Ẕ","Ƶ","Ȥ","Ɀ","Ⱬ","Ꝣ","ⓐ","ａ","ẚ","à","á","â","ầ","ấ","ẫ","ẩ","ã","ā","ă","ằ","ắ","ẵ","ẳ","ȧ","ǡ","ä","ǟ","ả","å","ǻ","ǎ","ȁ","ȃ","ạ","ậ","ặ","ḁ","ą","ⱥ","ɐ","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ⓑ","ｂ","ḃ","ḅ","ḇ","ƀ","ƃ","ɓ","ⓒ","ｃ","ć","ĉ","ċ","č","ç","ḉ","ƈ","ȼ","ꜿ","ↄ","ⓓ","ｄ","ḋ","ď","ḍ","ḑ","ḓ","ḏ","đ","ƌ","ɖ","ɗ","ꝺ","ǳ","ǆ","ⓔ","ｅ","è","é","ê","ề","ế","ễ","ể","ẽ","ē","ḕ","ḗ","ĕ","ė","ë","ẻ","ě","ȅ","ȇ","ẹ","ệ","ȩ","ḝ","ę","ḙ","ḛ","ɇ","ɛ","ǝ","ⓕ","ｆ","ḟ","ƒ","ꝼ","ⓖ","ｇ","ǵ","ĝ","ḡ","ğ","ġ","ǧ","ģ","ǥ","ɠ","ꞡ","ᵹ","ꝿ","ⓗ","ｈ","ĥ","ḣ","ḧ","ȟ","ḥ","ḩ","ḫ","ẖ","ħ","ⱨ","ⱶ","ɥ","ƕ","ⓘ","ｉ","ì","í","î","ĩ","ī","ĭ","ï","ḯ","ỉ","ǐ","ȉ","ȋ","ị","į","ḭ","ɨ","ı","ⓙ","ｊ","ĵ","ǰ","ɉ","ⓚ","ｋ","ḱ","ǩ","ḳ","ķ","ḵ","ƙ","ⱪ","ꝁ","ꝃ","ꝅ","ꞣ","ⓛ","ｌ","ŀ","ĺ","ľ","ḷ","ḹ","ļ","ḽ","ḻ","ſ","ł","ƚ","ɫ","ⱡ","ꝉ","ꞁ","ꝇ","ǉ","ⓜ","ｍ","ḿ","ṁ","ṃ","ɱ","ɯ","ⓝ","ｎ","ǹ","ń","ñ","ṅ","ň","ṇ","ņ","ṋ","ṉ","ƞ","ɲ","ŉ","ꞑ","ꞥ","ǌ","ⓞ","ｏ","ò","ó","ô","ồ","ố","ỗ","ổ","õ","ṍ","ȭ","ṏ","ō","ṑ","ṓ","ŏ","ȯ","ȱ","ö","ȫ","ỏ","ő","ǒ","ȍ","ȏ","ơ","ờ","ớ","ỡ","ở","ợ","ọ","ộ","ǫ","ǭ","ø","ǿ","ɔ","ꝋ","ꝍ","ɵ","ƣ","ȣ","ꝏ","ⓟ","ｐ","ṕ","ṗ","ƥ","ᵽ","ꝑ","ꝓ","ꝕ","ⓠ","ｑ","ɋ","ꝗ","ꝙ","ⓡ","ｒ","ŕ","ṙ","ř","ȑ","ȓ","ṛ","ṝ","ŗ","ṟ","ɍ","ɽ","ꝛ","ꞧ","ꞃ","ⓢ","ｓ","ß","ś","ṥ","ŝ","ṡ","š","ṧ","ṣ","ṩ","ș","ş","ȿ","ꞩ","ꞅ","ẛ","ⓣ","ｔ","ṫ","ẗ","ť","ṭ","ț","ţ","ṱ","ṯ","ŧ","ƭ","ʈ","ⱦ","ꞇ","ꜩ","ⓤ","ｕ","ù","ú","û","ũ","ṹ","ū","ṻ","ŭ","ü","ǜ","ǘ","ǖ","ǚ","ủ","ů","ű","ǔ","ȕ","ȗ","ư","ừ","ứ","ữ","ử","ự","ụ","ṳ","ų","ṷ","ṵ","ʉ","ⓥ","ｖ","ṽ","ṿ","ʋ","ꝟ","ʌ","ꝡ","ⓦ","ｗ","ẁ","ẃ","ŵ","ẇ","ẅ","ẘ","ẉ","ⱳ","ⓧ","ｘ","ẋ","ẍ","ⓨ","ｙ","ỳ","ý","ŷ","ỹ","ȳ","ẏ","ÿ","ỷ","ẙ","ỵ","ƴ","ɏ","ỿ","ⓩ","ｚ","ź","ẑ","ż","ž","ẓ","ẕ","ƶ","ȥ","ɀ","ⱬ","ꝣ","Ά","Έ","Ή","Ί","Ϊ","Ό","Ύ","Ϋ","Ώ","ά","έ","ή","ί","ϊ","ΐ","ό","ύ","ϋ","ΰ","ω","ς","OptionList","_options","highlight","equalValues","v0","v1","slice","sort","every","getOptionsByValue","filter","selection","selectedOption","select","multiple","clearSelection","deselect","term","trim","resetFilter","l","toUpperCase","t","_highlightedOption","hasShownSelected","getFirstShownSelected","getFirstShown","highlightOption","clearHighlightedOption","highlightNextOption","shownOptions","filtered","getHighlightedIndexFromList","highlightPreviousOption","highlightedOption","getHighlightedIndex","hasShown","some","hasSelected","_a","tslib_1.__values","_b","SELECT_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","SelectComponent","multi","BACKSPACE","TAB","ENTER","ESC","SPACE","UP","DOWN","_","placeholderView","placeholder","ngAfterViewInit","updateFilterWidth","ngOnChanges","changes","updateOptionsList","isFirstChange","numOptions","optionList","minNumOptions","currentValue","filterEnabled","onWindowClick","selectContainerClicked","closeDropdown","clearClicked","onWindowResize","updateWidth","onSelectContainerClick","toggleDropdown","onSelectContainerFocus","onTouched","onSelectContainerKeydown","handleSelectContainerKeydown","onDropdownOptionClicked","toggleSelectOption","selectOption","onDropdownClose","onSingleFilterClick","onSingleFilterInput","typed","onSingleFilterKeydown","handleSingleFilterKeydown","onMultipleFilterInput","isOpen","openDropdown","onMultipleFilterKeydown","handleMultipleFilterKeydown","onClearSelectionClick","onDeselectOptionClick","deselectOption","open","close","clear","valueChanged","writeValue","registerOnChange","fn","onChange","registerOnTouched","setDisabledState","isDisabled","_value","TypeError","firstTime","updatePosition","filterInput","nativeElement","opened","clearFilterInput","closed","deselected","dropdown","moveHighlightedIntoView","selectHighlightedOption","deselectLast","sel","setMultipleFilterInput","which","KEYS","altKey","preventDefault","hasFocus","selectionSpan","blur","width","offsetWidth","left","offsetLeft","top","offsetTop","offsetHeight","filterInputWidth","providers","encapsulation","ViewEncapsulation","None","ViewChild","SelectDropdownComponent","optionsReset","singleFilterClick","singleFilterInput","singleFilterKeydown","onOptionsWheel","handleOptionsWheel","onOptionMouseover","onOptionClick","optionClicked","getOptionStyle","background-color","highlightColor","color","highlightTextColor","optionsList","listHeight","itemIndex","itemHeight","itemTop","itemBottom","viewTop","div","atTop","atBottom","scrollHeight","deltaY","SelectModule","NgModule","declarations","exports","imports","CommonModule","FormsModule","SecurePipe","_ref","sanitizer","BehaviorSubject","_result","ngOnDestroy","_subscription","_dispose","transform","url","getfile","internalTransform","asyncTrasnform","previousUrl","_internalSubscription","sanitized","bypassSecurityTrustUrl","_obj","_latestValue","_latestReturnedValue","WrappedValue","wrap","_subscribe","_updateLatestValue","unsubscribe","async","markForCheck","Pipe","pure","ChangeDetectorRef","DomSanitizer","SharedModule","RemoteFileUploadComponent","renderer","_dataSource","data","uploading","fileUpload","innerValue","image","propagateChange","clearValue","Renderer2","RemoteFileUploadModule","FileUploaderModule","DatePickerComponent","monthsShort","initValue","fullYearRange","currentYear","calendarDate","clone","startOf","year","displayYearsIndex","displayYearRange","generateCalendar","prev","onDisplayYears","subtract","showMonthSelection","onDisplayMonths","showYearSelection","add","selectDay","day","daysDifference","diff","selectedDay","parseToReturnObjectType","onSelectDate","cancelDatePicker","selectMonth","month","selectYear","selectToday","today","clearPickDate","onDatePickerCancel","generateYears","years","_.chunk","locale","currentMonth","dayNames","weekdaysShort","initDate","returnObject","viewFormat","selectedDate","calendarDays","start","localeData","firstDayOfWeek","end","toDate","toJSON","toArray","toISOString","toObject","TimePickerComponent","use12Hour","hourFormat","time","initTime","increaseHour","decreaseHour","increaseMinute","decreaseMinute","increaseSecond","decreaseSecond","selectTime","onSelectTime","cancelTimePicker","selectNow","clearTime","onTimePickerCancel","ModalComponent","closeModal","onOverlayClick","changeDetection","ChangeDetectionStrategy","OnPush","animations","MomentPipe","Moment","DateTimePickerComponent","weeksSelected","count","nextDate","setDate","getDate","setTime","toggleDatePicker","status","showDatePicker","toggleTimePicker","showTimePicker","modelValue","onDateChange","MY_FORMATS","parse","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NgxDateTimePickerComponent","onTimeSelect","setDateTime","onDateSelect","selectedTime","dateString","setCurrentTime","currentTime","weekSelect","dateToUse","nextWeekDate","nextWeekTime","getWeekPickerCssClass","showTime","getDatePickerCssClass","showWeeks","getTimePickerCssClass","newTime","newDateTime","dateTimeString","MAT_DATE_FORMATS","useValue","DateAdapter","useClass","MomentDateAdapter","ReactiveFormsModule","MatDatepickerModule","MatFormFieldModule","MatNativeDateModule","MatInputModule","AmazingTimePickerModule","MatSelectModule","AfeNgSelectComponent","getChangingText","getData","question_options","resolveSelectedOption","selected_question_option","searchText","subject","searchOptions","mappedOptions","onValueChange","subjectOption","resolveSelectedValue","resetOptions","FormSchemaCompiler","compileFormSchema","formSchema","referencedComponents","refForms","getReferencedForms","_.isEmpty","placeHolders","getAllPlaceholderObjects","replaceAllPlaceholdersWithActualObjects","findSchemaByName","schemaArray","nameOfSchema","foundSchema","schema","getPageInSchemaByLabel","pageLabel","foundPage","pages","page","getSectionInSchemaByPageLabelBySectionLabel","sectionLabel","foundSection","sections","getQuestionByIdInSchema","questionId","isQuestionObjectWithId","isSchemaSubObjectExpandable","toExpand","getQuestionsArrayByQuestionIdInSchema","getQuestionsArrayByQuestionId","parent","object","returnedValue","objectKeys","_.includes","referencedObjects","extractPlaceholderObjects","subSchema","objectsArray","reference","fillPlaceholderObject","placeHolderObject","referenceObject","member","keyValReferencedForms","placeHoldersArray","placeHolder","referencedObject","getReferencedObject","removeExcludedQuestionsFromPlaceholder","removeObjectFromArray","indexOfObject","excludeQuestions","excludedQuestionId","questionsArray","referenceData","formSchemasLookupArray","referencedForms","alias","formName","TextInputQuestion","TextAreaInputQuestion","rows","SelectQuestion","UiSelectQuestion","DateQuestion","MultiSelectQuestion","NestedQuestion","QuestionGroup","RepeatingQuestion","CheckBoxQuestion","FileUploadQuestion","TestOrderQuestion","orderType","selectableOrders","orderSettingUuid","rendering","DateValidationModel","MaxValidationModel","MinValidationModel","DummyDataSource","selectOptions","sampleData","concept","returnErrorOnNext","of","fetchFile","HistoricalEncounterDataService","registerEncounters","encounters","encStore","getValue","pathArray","getFirstValue","getAllObjects","getSingleObject","group_1","encounter","_transformEncounter","_.sortBy","reverse","putObject","getObject","answers","getAllValues","encounterDatetime","_.isNil","newpath","childObject","prevEncounter","location","patient","encounterType","provider","obs","processedObs","_transformObs","_.extend","obsRep","singleObs","_augumentObs","groupMembers","group_2","existing","toAdd","_.has","temp","apply","HistoricalHelperService","evaluate","expr","HD","deps","QuestionFactory","createQuestionModel","toFormQuestionModel","toSelectQuestion","schemaQuestion","questionOptions","addValidators","copyProperties","addDisableOrHideProperty","addAlertProperty","addHistoricalExpressions","addCalculatorProperty","toNumericQuestion","toNumberQuestion","toDateQuestion","toEncounterDatetimeQuestion","showWeeksAdder","weeksList","toCheckBoxQuestion","toMultiCheckboxQuestion","renderType","toTextAreaQuestion","toTextQuestion","toFileUploadQuestion","toDrugQuestion","toProblemQuestion","toConceptAnswerSelect","toRepeatingQuestion","getChildrenQuestionModels","testOrder","toTestOrderQuestion","orders","toGroupQuestion","toPageQuestion","toSectionQuestion","getSchemaQuestions","toPersonAttributeQuestion","searchFunction","resolveFunction","toEncounterProviderQuestion","toFieldSetQuestion","toReturn","toEncounterLocationQuestion","listQuestions","getQuestions","foundArray","toModel","generateId","showDate","convertOldVersionComplexObsQuestionToNewVersion","converted","mainField","JSON","stringify","shownDateOptions","obsField","dateField","dateOptions","assign","mappings","source","destination","historicalExpression","origValue","historicalHelperService","historicalPrepopulate","calculate","s","Math","random","floor","String","fromCharCode","Form","questionFactory","_dataSourcesContainer","found","aChildNode","questionType","searchNodeByQuestionType","findNodesByQuestionId","nodeAsGroup","results","_showErrors","invalidControlNodes","c","markAsTouched","groupNode","updateHiddenDisabledStateForAllControls","_updateHiddenDisabledStateForAllControls","updateAlertsForAllControls","_updateAlertsForAllControls","FormFactory","controlService","questionFactroy","controlRelationsFactory","createForm","createNode","parentNode","createArrayNode","createGroupNode","createLeafNode","controlModel","createNodeChildren","createArrayNodeChild","removeArrayNodeChild","factory","groupQuestion","group","nodeControl","nodeToRemove","controlIndexToRemove","ObsAdapterHelper","findObsAnswerToQuestion","obsArray","isObsNode","childQuestionsUuids","getChildQuestionsConceptUuids","isSubsetOf","getGroupMembersConceptUuids","obsWithGroupMembers","supersetArray","subsetArray","setSimpleObsNodeValue","obsToUse","initialValue","setNodeFormControlValue","setMultiselectObsNodeValue","obsUuids","obs_1","obs_1_1","setComplexObsNodeValue","valueField","setNodeValue","obsDatetime","setGroupObsNodeValue","setRepeatingGroupObsNodeValue","createdNode","getObsNodeType","answeringObs","multiselectObs","complexObs","groupObs","repeatingGroupObs","getSimpleObsPayload","voided","simpleNodeValueChanged","toOpenMrsDateTimeString","getComplexObsPayload","valuePayload","getObsNodePayload","areDatesEqual","payload","getMultiselectObsPayload","existingUuids","getGroupPayload","childrenPayload","groupPayload","getRepeatingGroupPayload","nodeAsArray","groupsUuidsAfterEditting","voidedGroup","groupNodePayoad","arrayNodePayload","simpleObs","groupedObs","repeatingGroupedObs","date1","date2","isSame","datetime","ObsValueAdapter","generateFormPayload","populateForm","setValues","forcegroup","setObsValue","_.find","setComplexObsValue","setRepeatingGroupValues","nodes_1","nodes_1_1","obsUuid","multiObs","getMultiselectValues","multiObs_1","multiObs_1_1","groupRepeatingObs","intersect","schemaQuestions","_.intersection","groups","getQuestionNodes","arrays","pages_1","pages_1_1","repeatingGroup","nodes_2","nodes_2_1","traverse","processGroup","obsPayload","getObsPayload","mappedMembers","Boolean","mapInitialGroup","current","mapModelGroup","processRepeatingGroups","initialValues","repeatingModel","_d","_e","deleted","leftOuterJoinArrays","newObs","groupConcept","newObsPayload","deletedObs","createGroupDeletedObs","deletedObs_1","deletedObs_1_1","createGroupNewObs","newObsPayload_1","newObsPayload_1_1","first","second","obj2","_.isEqual","newPayload","payload_1","payload_1_1","payload_2","payload_2_1","getExactTime","processObs","obsValue","multis","processMultiSelect","mappedInitial","mappedCurrent","processDeletedMultiSelectObs","processNewMultiSelectObs","updateOrVoidObs","processComplexObs","createdPayload","values_1","values_1_1","values_2","values_2_1","qs","rep","multiSelectObs","values_3","values_3_1","isObs","nodes_3","nodes_3_1","OrderValueAdapter","formOrderNodes","_setOrderProvider","_findTestOrderQuestionNodes","_createOrdersPayload","existingOrders","_getExistingOrders","_setOrderValues","providerUuid","orderNodes","deletedOrders","selectedOrders","orderNode","orderNodeValues","order","orderValue","payloadOrder","_createPayloadOrder","orderNumber","orderNodes_1","orderNodes_1_1","_getDeletedOrders","_addDeletedOrdersToPayload","orderUuid","dateVoided","auditInfo","orderNodes_2","orderNodes_2_1","_setOrderNodeValues","orderConcept","quesitonExtras","orderer","careSetting","deleteOrders","existingOrderConcept","orders_1","orders_1_1","childNode","formNode","EncounterAdapter","ordersAdapter","obsAdapter","populateNode","getEncounterNodes","firstProvider","generateNodePayload","setNonFilledPayloadMembers","dateValue","utcOffset","encounterRole","_getEncounterNodes","patientUuid","setPayloadPatientUuid","visitUuid","setPayloadVisitUuid","encounterTypeUuid","setPayloadEncounterTypeUuid","formUuid","setPayloadFormUuid","encounterUuid","setPayloadEncounterUuid","_isEncounterNode","PersonAttribuAdapter","getPersonAttributeNodes","isSimpleValue","attributeType","hydratedObject","_getPersonAttributesNodes","RemoteSelectComponent","change","dataFromSourceChanged","subscribeToDataSourceDataChanges","items","notFoundMsg","restoreSelectedValue","selectC","search","_.map","_.clone","_.uniqBy","canSearch","loading","removed","RemoteSelectModule","AppointmentsOverviewComponent","resetProperties","showAppointments","loadingAppointments","monthlyScheduleResourceService","locationUuid","userLocation","startDate","endDate","endOf","_data_1","urlParams","encodeURI","programType","getMonthlySchedule","limit","locationUuids","programVisitEncounter","appointmentsLoaded","appointment","scheduled","appointments","errorLoadingAppointments","EncounterViewerService","resolveSelectedValueFromSchema","answerUuid","answer","hasAnswer","answered","questionsAnswered","$answered","ans","isDate","convertTime","unixTimestamp","getFullYear","getMonth","hour","getHours","getMinutes","getSeconds","EncounterViewerComponent","encounterViewerService","_schema","enc","fileDataSource","remoteDataSource","customDataSource","questionAnswered","checkForColon","questionLabel","EncounterContainerComponent","encAdapter","$form","$enc","QuestionControlComponent","isUuid","arrayElement","arr_1","el","str","_.isNumber","noop","FilePreviewComponent","encounterService","onChangeCallback","onTouchedCallback","onBlur","RemoteAnswerComponent","EncounterViewerModule","HttpModule","CheckboxControlComponent","selectOpt","checked","CheckboxModule","FormEntryModule","CollapseModule","DateTimePickerModule","MatIconModule","MatTabsModule","MatCardModule","NgxDateTimePickerModule","FormBuilder","Pair"],"mappings":"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","sourcesContent":["/*\nThis service checks if the debug mode on ng2-amrs\nhas been enabled by checking cookies.\nIf the debug mode has been enabled then\nit returns true and all fields are displayed\nfor use by testers\n*/\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\n\nexport class DebugModeService {\n\n    public cookieKey = 'formDebug';\n\n    constructor() {\n    }\n   public debugEnabled(): boolean {\n\n             // check if the hidefield\n            return false;\n     }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { AbstractControl } from '@angular/forms';\nimport { AfeFormControl } from '../../public_api';\nimport { AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension';\n\n@Injectable()\nexport class FormErrorsService {\n\n  // Observable string sources\n  public static control: AfeFormControl | AfeFormArray | AfeFormGroup  = null;\n  public static tab: number = null;\n  public announceErrorFieldSource = new Subject<string>();\n  public announceErrorField$: Observable<any> = this.announceErrorFieldSource.asObservable();\n  public announceErrorField(error: string) {\n    this.announceErrorFieldSource.next(error);\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { AbstractControl } from '@angular/forms';\n\n// import { CanHide } from '../form-entry/control-hiders-disablers/can-hide';\n// import { CanDisable } from '../form-entry/control-hiders-disablers/can-disable';\n\nexport class ControlRelation {\n    private _control: AbstractControl;\n    private _relatedTo: AbstractControl;\n    private _lastUpdateValue: any;\n\n    constructor(control: AbstractControl, relatedTo: AbstractControl) {\n        this._control = control;\n        this._relatedTo = relatedTo;\n        this._registerForChangesFromRelatedControl();\n    }\n\n    get control(): AbstractControl {\n        return this._control;\n    }\n\n    get relatedTo(): AbstractControl {\n        return this._relatedTo;\n    }\n\n    get lastUpdateValue(): any {\n        return this._lastUpdateValue;\n    }\n\n    updateControlBasedOnRelation(newValue: any): boolean {\n        if (newValue !== this._lastUpdateValue) {\n            this._lastUpdateValue = newValue;\n\n            if ((this._control as any).updateCalculatedValue) {\n              (this._control as any).updateCalculatedValue();\n            }\n\n            this._control.updateValueAndValidity();\n            if ((this._control as any).updateHiddenState) {\n                (this._control as any).updateHiddenState();\n            }\n\n            if ((this._control as any).updateDisabledState) {\n                (this._control as any).updateDisabledState();\n            }\n\n            if ((this._control as any).updateAlert) {\n                (this._control as any).updateAlert();\n            }\n            return true;\n        }\n        return false;\n    }\n\n    private _registerForChangesFromRelatedControl() {\n\n      this._relatedTo.valueChanges.subscribe((value) => {\n        this.updateControlBasedOnRelation(value);\n      });\n    }\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { ControlRelation } from './control-relation';\n\nexport class ControlRelations {\n\n    private _relationFor: AbstractControl;\n    private _relations: ControlRelation[];\n    private _otherRelations: any = [];\n\n    constructor(relationFor: AbstractControl, relatedTo?: AbstractControl | AbstractControl[]) {\n        this._relationFor = relationFor;\n        this._relations = [];\n\n        if (relatedTo) {\n            this.addRelatedControls(relatedTo);\n        }\n    }\n\n    get relationsFor(): AbstractControl {\n        return this._relationFor;\n    }\n\n    get relations(): ControlRelation[] {\n        return this._relations;\n    }\n\n    get otherRelations() {\n      return this._otherRelations;\n    }\n\n    addRelatedControls(relatedTo: AbstractControl | AbstractControl[]) {\n        if (relatedTo instanceof AbstractControl) {\n            this.relations.push(new ControlRelation(this._relationFor, relatedTo));\n        }\n\n        if (relatedTo instanceof Array) {\n            for (let i = 0; i < relatedTo.length; i++) {\n                this.relations.push(new ControlRelation(this._relationFor, relatedTo[i]));\n            }\n        }\n    }\n}\n","import { CanHide, Hider } from './can-hide';\nexport class HiderHelper {\n\n    public hideControl(control: CanHide) {\n        control.hidden = true;\n        if (control.disable) {\n            control.disable();\n        }\n    }\n\n    public showControl(control: CanHide) {\n        control.hidden = false;\n    }\n\n    public setHiderForControl(control: CanHide, hider: Hider) {\n        control.hiders.push(hider);\n    }\n\n    public clearHidersForControl(control: CanHide) {\n        control.hiders.splice(0);\n        control.hidden = false;\n    }\n\n    public evaluateControlHiders(control: CanHide) {\n\n        let hiddenValue = false;\n        control.hiders.forEach(hider => {\n            hider.reEvaluateHidingExpression();\n            if (hider.toHide === true) {\n                hiddenValue = true;\n            }\n        });\n\n        control.hidden = hiddenValue;\n        if (control.hidden && control.disable) {\n            control.disable();\n            // control.setValue(null);\n        }\n    }\n\n    public setUpReEvaluationWhenValueChanges(control: CanHide) {\n        if (control.updateHiddenState) {\n            control.valueChanges.subscribe((val) => {\n                control.updateHiddenState();\n            });\n        }\n    }\n\n}\n","import { CanGenerateAlert, Alert } from './can-generate-alert';\nexport class AlertHelper {\n\n    public hideAlert(control: Alert) {\n        control.shown = false;\n    }\n\n    public showAlert(control: Alert) {\n        control.shown = true;\n    }\n\n    public setAlertsForControl(control: CanGenerateAlert, alert: Alert) {\n        control.alerts.push(alert);\n    }\n\n    public clearAlertsForControl(control: CanGenerateAlert) {\n        control.alerts.splice(0);\n        control.alert = '';\n    }\n\n    public evaluateControlAlerts(control: CanGenerateAlert) {\n        let messageValue = '';\n        control.alerts.forEach(message => {\n            message.reEvaluateAlertExpression();\n            if (message.shown === true) {\n                messageValue = message.alertMessage;\n            } else {\n                messageValue = '';\n            }\n        });\n\n        control.alert = messageValue;\n        // if (control.message && control.disable) {\n        //     control.disable();\n        //     // control.setValue(null);\n        // }\n    }\n\n    public setUpReEvaluationWhenValueChanges(control: CanGenerateAlert) {\n        if (control.updateAlert) {\n            control.valueChanges.subscribe((val) => {\n                control.updateAlert();\n            });\n        }\n    }\n\n}\n","import { CanDisable, Disabler } from './can-disable';\nexport class DisablerHelper {\n\n    public setDisablerForControl(control: CanDisable, disabler: Disabler) {\n        control.disablers.push(disabler);\n    }\n\n    public clearDisablersForControl(control: CanDisable) {\n        control.disablers.splice(0);\n        control.disable();\n    }\n\n    public evaluateControlDisablers(control: CanDisable) {\n        let toDisable = false;\n        control.disablers.forEach(hider => {\n            hider.reEvaluateDisablingExpression();\n            if (hider.toDisable === true) {\n                toDisable = true;\n            }\n        });\n\n        // console.log('Control', control);\n\n        if (toDisable) {\n            control.disable();\n        } else {\n            control.enable();\n        }\n    }\n\n    public setUpReEvaluationWhenValueChanges(control: CanDisable) {\n        if (control.updateDisabledState) {\n            control.valueChanges.subscribe((val) => {\n                control.updateDisabledState();\n            });\n        }\n    }\n\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { FormFactory } from './form.factory';\nimport { Form } from './form';\n\n// import { AfeControlType, AfeFormArray, AfeFormGroup, AfeFormControl } from '../../abstract-controls-extension';\nimport { QuestionBase, RepeatingQuestion } from '../question-models/models';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension';\nexport interface ChildNodeCreatedListener {\n\n    addChildNodeCreatedListener(func: any);\n\n    fireChildNodeCreatedListener(node: GroupNode);\n}\n\nexport type CreateArrayChildNodeFunction = (question: RepeatingQuestion, node: ArrayNode, factory?: FormFactory) => GroupNode;\n\nexport interface RemoveArrayChildNodeFunction {\n    (index: number, node: ArrayNode);\n}\n\nexport class NodeBase {\n    public children?: any;\n    private _control: AfeFormControl | AfeFormArray | AfeFormGroup;\n    private _questionModel: QuestionBase;\n    private _form: Form;\n    private _path: string;\n\n    public initialValue: any;\n\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup, form?: Form, parentPath?: string) {\n        this._control = control;\n        this._questionModel = question;\n        this._form = form;\n        this._path = parentPath ? parentPath + '.' + question.key : question.key;\n    }\n\n    public get question(): QuestionBase {\n        return this._questionModel;\n    }\n\n    public get control(): AfeFormControl | AfeFormArray | AfeFormGroup {\n        return this._control;\n    }\n\n    public get form(): Form {\n        return this._form;\n    }\n\n    public get path(): string {\n        return this._path;\n    }\n    removeAt(index: number) {}\n\n    createChildNode() {}\n    removeChildNode() {}\n\n}\n\nexport class LeafNode extends NodeBase {\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup,\n         parentControl?: AfeFormControl | AfeFormArray | AfeFormGroup, form?: Form, parentPath?: string) {\n        super(question, control, form, parentPath);\n    }\n}\n\nexport class GroupNode extends NodeBase {\n    private _children: any;\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup,\n        parentControl?: AfeFormControl | AfeFormArray | AfeFormGroup, form?: Form, parentPath?: string) {\n        super(question, control, form, parentPath);\n        this._children = {};\n    }\n\n    public get children(): any {\n        return this._children;\n    }\n\n    public setChild(key: string, node: NodeBase) {\n        this.children[key] = node;\n    }\n\n}\n\nexport class ArrayNode extends NodeBase implements ChildNodeCreatedListener {\n\n    private childNodeCreatedEvents: any[] = [];\n    private _children: GroupNode[];\n    public createChildFunc: CreateArrayChildNodeFunction;\n    public removeChildFunc: RemoveArrayChildNodeFunction;\n\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup,\n        parentControl?: AfeFormControl | AfeFormArray | AfeFormGroup, private formFactory?: FormFactory,\n        form?: Form, parentPath?: string) {\n        super(question, control, form, parentPath);\n        this._children = [];\n        this.childNodeCreatedEvents = [];\n    }\n\n    public get children(): GroupNode[] {\n        return this._children;\n    }\n\n    public createChildNode(): GroupNode {\n        if (this.createChildFunc) {\n            const g: GroupNode = this.createChildFunc(this.question as RepeatingQuestion, this, this.formFactory);\n            this.fireChildNodeCreatedListener(g);\n            return g;\n        }\n        return null;\n    }\n\n    public removeAt(index: number) {\n        if (this.removeChildFunc) {\n            this.removeChildFunc(index, this);\n        }\n    }\n\n    addChildNodeCreatedListener(func: any) {\n        this.childNodeCreatedEvents.push(func);\n    }\n\n    fireChildNodeCreatedListener(node: GroupNode) {\n        for (let i = 0; i < this.childNodeCreatedEvents.length; i++) {\n\n            const func: any = this.childNodeCreatedEvents[i];\n            func(node);\n        }\n    }\n}\n\n\n","\nexport class ValidationModel {\n\n  type: string;\n\n  message: string;\n\n  constructor(validations: any) {\n\n    this.type = validations.type;\n    this.message = validations.message || null;\n  }\n}\n","\nimport { ValidationModel } from './validation.model';\n\nexport class JsExpressionValidationModel extends ValidationModel {\n\n  failsWhenExpression: string;\n\n  constructor(validations: any) {\n    super(validations);\n    this.failsWhenExpression = validations.failsWhenExpression;\n  }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class ConditionalValidationModel extends ValidationModel {\n\n  referenceQuestionId: string;\n  referenceQuestionAnswers: any;\n\n  constructor(validations: any) {\n    super(validations);\n    this.referenceQuestionId = validations.referenceQuestionId;\n    this.referenceQuestionAnswers = validations.referenceQuestionAnswers;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n// import { ControlRelation } from  '../../change-tracking/control-relation';\nimport { QuestionBase } from '../question-models/question-base';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\nimport { NodeBase, GroupNode, LeafNode, ArrayNode } from './form-node';\nimport { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { AfeFormArray } from '../../abstract-controls-extension/afe-form-array';\nimport { Form } from './form';\n\n@Injectable()\nexport class ControlRelationsFactory {\n\n  constructor() { }\n\n  buildRelations(rootNode: GroupNode) {\n\n    const controlsStore: any = this.mapControlIds(rootNode, {});\n\n    for (const key in controlsStore) {\n      if (controlsStore.hasOwnProperty(key)) {\n        const nodeBase: NodeBase = controlsStore[key];\n\n        this.setRelations(controlsStore, nodeBase);\n      }\n    }\n  }\n\n  buildArrayNodeRelations(node: GroupNode) {\n\n    const form: Form = node.form;\n\n    if (!form) {\n      return;\n    }\n    const rootNode: GroupNode = form.rootNode;\n\n    // build relations for controls in the same array\n    this.buildRelations(node);\n\n    // build relations for control outside the array\n    const rootControlsStore: any = this.mapControlIds(rootNode, {});\n    const arrayControlStore: any = this.mapControlIds(node, {});\n\n    for (const key in rootControlsStore) {\n\n      if (rootControlsStore.hasOwnProperty(key)) {\n\n        const child: NodeBase = rootControlsStore[key];\n\n        if (child instanceof LeafNode) {\n\n          const questionBase: QuestionBase = (child as LeafNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n            this.setRelations(arrayControlStore, child);\n          }\n        }\n      }\n    }\n\n    // define relations for controls outside the group to controls in this group\n    this.createRelationsToArrayControls(node);\n\n    // fire relations\n    for (const id in arrayControlStore) {\n      if (arrayControlStore.hasOwnProperty(id)) {\n\n        const child: NodeBase = arrayControlStore[id];\n        const control: AfeFormControl | AfeFormArray = child.control as AfeFormControl | AfeFormArray;\n        control.updateHiddenState();\n        control.updateAlert();\n      }\n    }\n  }\n\n  createRelationsToArrayControls(node: GroupNode) {\n\n    const form: Form = node.form;\n\n    const rootNode: GroupNode = form.rootNode;\n\n    // build relations for control outside the array\n    const rootControlsStore: any = this.mapControlIds(rootNode, {});\n    const arrayControlStore: any = this.mapControlIds(node, {});\n\n    // loop through form controls\n    for (const key in rootControlsStore) {\n      if (rootControlsStore.hasOwnProperty(key)) {\n\n        const rChild: NodeBase = rootControlsStore[key];\n\n        const parentNodePath = node.path.substring(0, node.path.lastIndexOf('.'));\n\n        if (rChild.path.indexOf(parentNodePath + '.') === -1) {\n\n          // loop through controls in the array group\n          for (const id in arrayControlStore) {\n            if (arrayControlStore.hasOwnProperty(id)) {\n\n              const aChild: NodeBase = arrayControlStore[id];\n              const aChildId = aChild.question.key;\n              if (this.hasRelation(aChildId, rChild.question)) {\n\n                const nodes: Array<NodeBase> = node.form.searchNodeByPath(rootNode, parentNodePath, []);\n                if (nodes.length > 0) {\n                  const an = nodes[0] as ArrayNode;\n                  const rootControl = (rChild.control as AfeFormControl | AfeFormArray);\n\n                  if (rootControl.controlRelations.otherRelations.indexOf(an) === -1) {\n                    rootControl.controlRelations.otherRelations.push(an);\n                  }\n\n                  (aChild.control as AfeFormControl | AfeFormArray).addValueChangeListener((value) => {\n\n                    if ((rootControl as any).updateCalculatedValue) {\n                      (rootControl as any).updateCalculatedValue();\n                    }\n\n                    rootControl.updateValueAndValidity();\n                    if ((rootControl as any).updateHiddenState) {\n                      (rootControl as any).updateHiddenState();\n                    }\n\n                    if ((rootControl as any).updateAlert) {\n                      (rootControl as any).updateAlert();\n                    }\n\n                    if ((rootControl as any).updateDisabledState) {\n                      (rootControl as any).updateDisabledState();\n                    }\n                  });\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  getRelationsForControl(id, node: GroupNode): Array<AfeFormControl | AfeFormArray> {\n\n    const relations: Array<AfeFormControl | AfeFormArray> = new Array<AfeFormControl | AfeFormArray>();\n\n    const nodeBaseArray: Array<NodeBase> = node.form.searchNodeByQuestionId(id);\n\n    if (nodeBaseArray.length > 0) {\n\n      const nodeBase: NodeBase = nodeBaseArray[0];\n\n      const controlList: any = this.mapControlIds(node, {});\n\n      for (const key in controlList) {\n        if (controlList.hasOwnProperty(key)) {\n\n          if (this.hasRelation(controlList[key].question.key, nodeBase.question)) {\n            relations.push(controlList[key].control);\n          }\n        }\n      }\n    }\n    return relations;\n  }\n\n  mapControlIds(node: GroupNode, controlsStore: any) {\n\n    const children: NodeBase = node.children;\n\n    for (const key in children) {\n\n      if (children.hasOwnProperty(key)) {\n\n        const child: NodeBase = children[key];\n\n        if (child instanceof GroupNode) {\n\n          this.mapControlIds(child, controlsStore);\n        } else if (child instanceof LeafNode) {\n\n          const questionBase: QuestionBase = (child as LeafNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n            controlsStore[questionBase.key] = child;\n          }\n        } else if (child instanceof ArrayNode) {\n\n          const questionBase: QuestionBase = (child as ArrayNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n            controlsStore[questionBase.key] = child;\n          }\n        }\n      }\n    }\n\n    return controlsStore;\n  }\n\n  setRelations(controlsStore: any, nodeBase: NodeBase) {\n\n    const questionBase: QuestionBase = nodeBase.question;\n\n    const id = questionBase.key;\n\n    for (const key in controlsStore) {\n      if (controlsStore.hasOwnProperty(key) && key !== id) {\n\n        const node: NodeBase = controlsStore[key];\n        const question: QuestionBase = node.question;\n\n        if (this.hasRelation(id, question, nodeBase)) {\n          this.addRelationToControl(node.control as AfeFormControl | AfeFormArray, nodeBase.control as AfeFormControl | AfeFormArray);\n        }\n\n        // add conditional required and conditional answered relations\n        if (typeof question.required === 'object') {\n\n          const required: any = question.required;\n\n          if (required.type === 'conditionalRequired') {\n\n            if (required.referenceQuestionId === id) {\n              this.addRelationToControl(node.control as AfeFormControl | AfeFormArray,\n                nodeBase.control as AfeFormControl | AfeFormArray);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  hasRelation(id: string, questionBase: QuestionBase, nodeBase?: NodeBase) {\n\n    let hasRelation = false;\n\n    if (questionBase.validators && questionBase.validators.length > 0) {\n\n      questionBase.validators.forEach(element => {\n\n        if (element instanceof JsExpressionValidationModel) {\n\n          const model: JsExpressionValidationModel = element as JsExpressionValidationModel;\n\n          const failsWhenExpression: string = model.failsWhenExpression;\n          if (failsWhenExpression && failsWhenExpression.indexOf(id) !== -1) {\n            hasRelation = true;\n          }\n        } else if (element instanceof ConditionalValidationModel && element.type === 'conditionalAnswered'\n          && element.referenceQuestionId === id) {\n          hasRelation = true;\n        }\n      });\n    }\n\n    // add hiders and disablers relations\n    if (!hasRelation) {\n\n      if (typeof questionBase.hide === 'string') {\n\n        const hide: string = questionBase.hide as string;\n\n        if (hide.length > 0 && hide.indexOf(id) !== -1) {\n          hasRelation = true;\n        }\n      } else if (typeof questionBase.hide === 'object') {\n\n        const hideObj: any = questionBase.hide;\n\n        if (hideObj.field === id) {\n          hasRelation = true;\n        }\n      }\n\n     if ( questionBase.alert && typeof questionBase.alert === 'object') {\n        hasRelation = true;\n      }\n\n      if (typeof questionBase.disable === 'string') {\n\n        const disable: string = questionBase.disable as string;\n\n        if (disable.length > 0 && disable.indexOf(id) !== -1) {\n          hasRelation = true;\n        }\n      }\n    }\n\n    // add calculate expressions relations\n    if (!hasRelation && questionBase.calculateExpression && questionBase.calculateExpression.length > 0\n      && questionBase.calculateExpression.indexOf(id) !== -1) {\n      hasRelation = true;\n    }\n\n    return hasRelation;\n  }\n\n  addRelationToControl(control: AfeFormControl | AfeFormArray, related: AfeFormControl | AfeFormArray) {\n\n    //  let relations = control.controlRelations.relations;\n    //\n    //  let hasRelation = false;\n    //\n    //   relations.forEach(element => {\n    //\n    //     let controlRelation: ControlRelation = element as ControlRelation;\n    //\n    //     let relation: AfeFormControl | AfeFormArray = controlRelation.control as AfeFormControl | AfeFormArray;\n    //\n    //     if ( control.uuid !== undefined && control.uuid === relation.uuid ) {\n    //       hasRelation = true;\n    //     }\n    //   });\n\n    // if ( !hasRelation ) {\n    control.controlRelations.addRelatedControls(related);\n    // }\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension/control-extensions';\nimport { ArrayNode } from '../form-factory/form-node';\nimport { ControlRelationsFactory } from '../form-factory/control-relations.factory';\nimport { Form } from '../form-factory/form';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\nexport class ExpressionRunner {\n    getRunnable(expression: string, control: AfeFormArray | AfeFormGroup | AfeFormControl,\n        helper: any, dataDependencies: any, form?: Form):\n        Runnable {\n        const runner = this;\n        const runnable: Runnable = {\n            run: () => {\n\n                /* tslint:disable */\n                let scope: any = {};\n                if (control.uuid) {\n                    scope[control.uuid] = control.value;\n                }\n                window['moment'] = moment;\n                // scope.moment = moment;\n                scope['myValue'] = control.value;\n                runner.getControlRelationValueString(control, scope);\n                runner.getHelperMethods(helper, scope);\n                runner.getDataDependencies(dataDependencies, scope);\n\n                if (form) {\n                    // console.error('Form defined', form);\n                    runner.getDataDependencies(form.dataSourcesContainer.dataSources, scope);\n                }\n\n                let paramList = '';\n                let argList = '';\n                for (let o in scope) {\n                    paramList = paramList === \"\" ? paramList + o : paramList + ',' + o;\n                    argList = argList === \"\" ? argList + \"scope['\" + o + \"']\" : argList + \",scope['\" + o + \"']\";\n                }\n\n                // prevent more than one return statements\n                if (expression.indexOf('return') === -1) {\n                    expression = '\"return ' + expression + '\"';\n                }\n\n                let funcDeclarationCode = 'var afeDynamicFunc = new Function(\"' + paramList + '\", ' + expression + ');';\n                let funcCallCode = 'afeDynamicFunc.call(this ' + (argList === '' ? '' : ',' + argList) + ');';\n\n                try {\n\n                    if (Object.keys(scope).indexOf('undefined') >= 0) {\n                        console.warn('Missing reference found', expression, scope);\n                        return false;\n                    }\n                    //console.info('results: ', expression, eval(funcDeclarationCode + funcCallCode));\n                    return eval(funcDeclarationCode + funcCallCode);\n                } catch (e) {\n                    // if (window['error_count']) {\n                    //     window['error_count'] = window['error_count'] + 1;\n                    // } else {\n                    //     window['error_count'] = 1;\n                    // }\n                    // console.error(window['error_count'] + ' Error running expression:' + expression + '. ',\n                    //     e, control, 'Effective Expression', (funcDeclarationCode + funcCallCode));\n                    // console.error('Error running expression:' + expression + '. ',\n                    //     e, control, 'Effective Expression', (funcDeclarationCode + funcCallCode));\n\n                    // Uncomment the line above during debugging\n                    // console.error('Error running expression:' + expression, scope);\n\n                    return false;\n                }\n                /* tslint:enable */\n            }\n        };\n        return runnable;\n    }\n\n    private getControlRelationValueString(control: AfeFormArray | AfeFormGroup | AfeFormControl, scope: any) {\n        if (control && control.controlRelations && control.controlRelations.relations) {\n            control.controlRelations.relations.forEach(relation => {\n                if (relation.relatedTo) {\n                    const related = relation.relatedTo as any;\n                    const relatedAsControl = relation.relatedTo as AbstractControl;\n                    if (relatedAsControl && Array.isArray(relatedAsControl.value)) {\n                        scope[related.uuid] = relation.relatedTo.value;\n                    } else {\n                        scope[related.uuid] = relation.relatedTo.value && relation.relatedTo.value.value ?\n                            relation.relatedTo.value.value : relation.relatedTo.value;\n                    }\n                }\n            });\n        }\n\n        if (control && control.controlRelations && control.controlRelations.otherRelations\n            && control.controlRelations.otherRelations.length > 0) {\n\n            control.controlRelations.otherRelations.forEach(node => {\n                if (node instanceof ArrayNode) {\n                    const arrayNode: ArrayNode = node as ArrayNode;\n                    const uuid = control.uuid;\n\n                    const controlRelationsFactory: ControlRelationsFactory = new ControlRelationsFactory();\n                    let relationsForControl: Array<AfeFormControl | AfeFormArray> = [];\n                    // get all related controls\n                    arrayNode.children.forEach(child => {\n                        relationsForControl = relationsForControl.concat(controlRelationsFactory.getRelationsForControl(uuid, child));\n\n                    });\n\n                    this.setControlArrayValues(control as AfeFormControl | AfeFormArray, relationsForControl, scope);\n                }\n            });\n        }\n    }\n\n    private setControlArrayValues(control: AfeFormControl | AfeFormArray,\n        relationsForControl: Array<AfeFormControl | AfeFormArray>, scope: any) {\n        const keys: Array<string> = this._getFormControlKeys(relationsForControl);\n\n        keys.forEach(key => {\n            const values: any = this._getValuesForKey(key, relationsForControl);\n            scope[key] = values;\n        });\n    }\n\n    private _getFormControlKeys(array: Array<AfeFormControl | AfeFormArray>): Array<string> {\n\n        const keys: Array<string> = [];\n        array.forEach(control => {\n\n            if (keys.indexOf(control.uuid) === -1) {\n                keys.push(control.uuid);\n            }\n        });\n\n        return keys;\n    }\n\n    private _getValuesForKey(key: string, array: Array<AfeFormControl | AfeFormArray>): any {\n        const values: any = [];\n\n        array.forEach(control => {\n\n            if (control.uuid === key) {\n                values.push(control.value);\n            }\n        });\n\n        return values;\n    }\n\n    private getHelperMethods(obj: any, scope?: any) {\n        for (const key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                scope[key] = obj[key];\n            }\n        }\n    }\n\n    private getDataDependencies(obj: any, scope?: any) {\n        for (const key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                scope[key] = obj[key];\n            }\n        }\n    }\n}\n\nexport interface Runnable {\n    run();\n}\n","import { FormControl, ValidatorFn, AsyncValidatorFn, AbstractControlOptions } from '@angular/forms';\n\nimport { ControlRelations } from '../change-tracking/control-relations';\nimport { ValueChangeListener } from './value-change.listener';\nimport { CanHide, Hider } from '../form-entry/control-hiders-disablers/can-hide';\nimport { CanDisable, Disabler } from '../form-entry/control-hiders-disablers/can-disable';\nimport { CanGenerateAlert, Alert } from '../form-entry/control-alerts/can-generate-alert';\nimport { HiderHelper } from '../form-entry/control-hiders-disablers/hider-helpers';\nimport { AlertHelper } from '../form-entry/control-alerts/alert-helpers';\nimport { DisablerHelper } from '../form-entry/control-hiders-disablers/disabler-helper';\nimport { CanCalculate } from '../form-entry/control-calculators/can-calculate';\nimport { ExpressionRunner } from '../form-entry/expression-runner/expression-runner';\n\nclass AfeFormControl extends FormControl implements CanHide, CanDisable, CanCalculate, CanGenerateAlert, ValueChangeListener {\n    private _controlRelations: ControlRelations;\n    private _valueChangeListener: any;\n    private _previousValue;\n    public uuid: string;\n    public pathFromRoot: string;\n\n    hidden = false;\n    hiders: Hider[];\n    alert: string;\n    alerts: Alert[];\n    calculator: Function;\n    disablers: Disabler[];\n\n    private hiderHelper: HiderHelper = new HiderHelper();\n    private disablerHelper: DisablerHelper = new DisablerHelper();\n    private AlertHelper: AlertHelper = new AlertHelper();\n    constructor(formState?: any, validator?: ValidatorFn | ValidatorFn[] | AbstractControlOptions | null,\n        asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[] | null) {\n        super(formState, validator, asyncValidator);\n        this._controlRelations = new ControlRelations(this);\n        this.hiders = [];\n        this.disablers = [];\n        this.alerts = [];\n\n        this.valueChanges.subscribe((value) => {\n            if (this._previousValue !== value) {\n                this.fireValueChangeListener(value);\n                this._previousValue = value;\n            }\n        });\n    }\n\n    get controlRelations(): ControlRelations {\n        return this._controlRelations;\n    }\n\n    disable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\n        super.disable(param);\n        super.setValue('');\n    }\n\n    hide() {\n        this.hiderHelper.hideControl(this);\n    }\n\n    show() {\n        this.hiderHelper.showControl(this);\n    }\n\n    setHidingFn(newHider: Hider) {\n        this.hiderHelper.setHiderForControl(this, newHider);\n    }\n\n    setCalculatorFn(newCalculator: Function) {\n        this.calculator = newCalculator;\n    }\n\n    updateCalculatedValue() {\n        if (this.calculator) {\n            const _val = this.calculator.call(ExpressionRunner, {});\n            this.setValue(_val);\n        }\n    }\n\n    clearHidingFns() {\n        this.hiderHelper.clearHidersForControl(this);\n    }\n\n    updateHiddenState() {\n        this.hiderHelper.evaluateControlHiders(this);\n    }\n\n    setDisablingFn(newDisabler: Disabler) {\n        this.disablerHelper.setDisablerForControl(this, newDisabler);\n    }\n\n    clearDisablingFns() {\n        this.disablerHelper.clearDisablersForControl(this);\n    }\n\n    updateDisabledState() {\n        this.disablerHelper.evaluateControlDisablers(this);\n    }\n\n    setAlertFn(newHider: Alert) {\n        this.AlertHelper.setAlertsForControl(this, newHider);\n    }\n\n    clearMessageFns() {\n        this.AlertHelper.clearAlertsForControl(this);\n    }\n\n    updateAlert() {\n        this.AlertHelper.evaluateControlAlerts(this);\n    }\n\n    addValueChangeListener(func: any) {\n        this._valueChangeListener = func;\n    }\n\n    fireValueChangeListener(value: any) {\n        if (this._valueChangeListener && typeof this._valueChangeListener === 'function') {\n            this._valueChangeListener(value);\n        }\n    }\n\n    setValue(value: any) {\n        super.setValue(value);\n    }\n}\nexport { AfeFormControl };\n","import { FormGroup, ValidatorFn, AsyncValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { ControlRelations } from '../change-tracking/control-relations';\n\nimport { CanHide, Hider } from '../form-entry/control-hiders-disablers/can-hide';\nimport { CanDisable, Disabler } from '../form-entry/control-hiders-disablers/can-disable';\nimport { CanGenerateAlert, Alert } from '../form-entry/control-alerts/can-generate-alert';\nimport { HiderHelper } from '../form-entry/control-hiders-disablers/hider-helpers';\nimport { DisablerHelper } from '../form-entry/control-hiders-disablers/disabler-helper';\nimport { AlertHelper } from '../form-entry/control-alerts/alert-helpers';\n\nexport class AfeFormGroup extends FormGroup implements CanHide, CanDisable , CanGenerateAlert {\n    private _controlRelations: ControlRelations;\n\n    public uuid: string;\n    public pathFromRoot: string;\n\n    hidden: false;\n    hiders: Hider[];\n    alert: string;\n    alerts: Alert[];\n\n    disablers: Disabler[];\n\n    private hiderHelper: HiderHelper = new HiderHelper();\n    private disablerHelper: DisablerHelper = new DisablerHelper();\n    private AlertHelper: AlertHelper = new AlertHelper();\n\n    constructor(controls: { [key: string]: AbstractControl }, validator?: ValidatorFn, asyncValidator?: AsyncValidatorFn) {\n        super(controls, validator, asyncValidator);\n        this._controlRelations = new ControlRelations(this);\n        this.hiders = [];\n        this.disablers = [];\n        this.alerts = [];\n    }\n\n    get controlRelations(): ControlRelations {\n        return this._controlRelations;\n    }\n\n    hide() {\n        this.hiderHelper.hideControl(this);\n    }\n\n    show() {\n        this.hiderHelper.showControl(this);\n    }\n\n    disable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\n        super.disable(param);\n        super.setValue({});\n    }\n\n    setHidingFn(newHider: Hider) {\n        this.hiderHelper.setHiderForControl(this, newHider);\n    }\n\n    clearHidingFns() {\n        this.hiderHelper.clearHidersForControl(this);\n    }\n\n    updateHiddenState() {\n        this.hiderHelper.evaluateControlHiders(this);\n    }\n\n    setDisablingFn(newDisabler: Disabler) {\n        this.disablerHelper.setDisablerForControl(this, newDisabler);\n    }\n\n    clearDisablingFns() {\n        this.disablerHelper.clearDisablersForControl(this);\n    }\n\n    updateDisabledState() {\n        this.disablerHelper.evaluateControlDisablers(this);\n    }\n\n    setAlertFn(newHider: Alert) {\n        this.AlertHelper.setAlertsForControl(this, newHider);\n    }\n\n    clearMessageFns() {\n        this.AlertHelper.clearAlertsForControl(this);\n    }\n\n     updateAlert() {\n        this.AlertHelper.evaluateControlAlerts(this);\n    }\n    setValue(value: any) {\n        super.setValue(value);\n    }\n\n}\n","import { FormArray, ValidatorFn, AsyncValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { ControlRelations } from '../change-tracking/control-relations';\nimport { ValueChangeListener } from './value-change.listener';\nimport { CanHide, Hider } from '../form-entry/control-hiders-disablers/can-hide';\nimport { CanGenerateAlert, Alert } from '../form-entry/control-alerts/can-generate-alert';\nimport { CanDisable, Disabler } from '../form-entry/control-hiders-disablers/can-disable';\nimport { HiderHelper } from '../form-entry/control-hiders-disablers/hider-helpers';\nimport { AlertHelper } from '../form-entry/control-alerts/alert-helpers';\nimport { DisablerHelper } from '../form-entry/control-hiders-disablers/disabler-helper';\n\n\nexport class AfeFormArray extends FormArray implements CanHide, CanDisable, CanGenerateAlert, ValueChangeListener {\n    private _controlRelations: ControlRelations;\n    private _valueChangeListener: any;\n    private _previousValue;\n    private _uuid: string;\n    public pathFromRoot: string;\n\n    hidden: false;\n    hiders: Hider[];\n\n    alert: string;\n    alerts: Alert[];\n\n    disablers: Disabler[];\n\n    private hiderHelper: HiderHelper = new HiderHelper();\n    private AlertHelper: AlertHelper = new AlertHelper();\n    private disablerHelper: DisablerHelper = new DisablerHelper();\n\n    constructor(controls: AbstractControl[], validator?: ValidatorFn, asyncValidator?: AsyncValidatorFn) {\n        super(controls, validator, asyncValidator);\n        this._controlRelations = new ControlRelations(this);\n        this.hiders = [];\n        this.alerts = [];\n        this.disablers = [];\n\n        this.valueChanges.subscribe((value) => {\n          if (this._previousValue !== value) {\n            this.fireValueChangeListener(value);\n            this._previousValue = value;\n          }\n        });\n    }\n\n    get uuid(): string {\n        return this._uuid;\n    }\n    set uuid(val: string) {\n        this._uuid = val;\n    }\n\n    get controlRelations(): ControlRelations {\n        return this._controlRelations;\n    }\n\n    hide() {\n        this.hiderHelper.hideControl(this);\n    }\n\n    show() {\n        this.hiderHelper.showControl(this);\n    }\n\n    disable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\n        super.disable(param);\n        super.setValue([]);\n    }\n\n    setHidingFn(newHider: Hider) {\n        this.hiderHelper.setHiderForControl(this, newHider);\n    }\n\n    clearHidingFns() {\n        this.hiderHelper.clearHidersForControl(this);\n    }\n\n    updateHiddenState() {\n        this.hiderHelper.evaluateControlHiders(this);\n    }\n\n    setDisablingFn(newDisabler: Disabler) {\n        this.disablerHelper.setDisablerForControl(this, newDisabler);\n    }\n\n    clearDisablingFns() {\n        this.disablerHelper.clearDisablersForControl(this);\n    }\n\n    updateDisabledState() {\n        this.disablerHelper.evaluateControlDisablers(this);\n    }\n\n    setAlertFn(newHider: Alert) {\n        this.AlertHelper.setAlertsForControl(this, newHider);\n    }\n\n    clearMessageFns() {\n        this.AlertHelper.clearAlertsForControl(this);\n    }\n\n     updateAlert() {\n        this.AlertHelper.evaluateControlAlerts(this);\n    }\n\n    addValueChangeListener(func: any) {\n      this._valueChangeListener = func;\n    }\n\n    fireValueChangeListener(value: any) {\n      if (this.alerts.length > 0) {\n        this.updateAlert();\n      }\n      if (this._valueChangeListener && typeof this._valueChangeListener === 'function') {\n        this._valueChangeListener(value);\n      }\n    }\n\n    setValue(value: any) {\n        super.setValue(value);\n    }\n\n}\n","import { BaseOptions } from './interfaces/base-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\nimport { ValidationModel } from './validation.model';\n\nexport class QuestionBase implements BaseOptions {\n    type: string;\n    order?: number;\n    questionOptions?: any;\n    questions?: any;\n    placeholder?: any;\n    hidden?: any;\n    showTime?: any;\n    showWeek?: any;\n    historicalDisplay?: any;\n    rows?: any;\n    showWeeksAdder?: any;\n    key: string;    alert?: any;\n\n    label?: string;\n    renderingType: string;\n\n    defaultValue?: any;\n    originalValue?: any;\n    enableHistoricalValue?: boolean;\n    showHistoricalValueDate?: boolean;\n    historicalDataValue?: any;\n    extras?: any;\n    dataSource?: string;\n    dataSourceOptions?: any;\n\n    controlType?: AfeControlType;\n    validators?: Array<ValidationModel>;\n    required?: boolean;\n    hide?: string | boolean;\n    disable?: string | boolean;\n    calculateExpression?: string;\n    options?: any;\n\n    constructor(options: BaseOptions) {\n\n        this.defaultValue = options.defaultValue;\n        this.originalValue = options.originalValue;\n        this.extras = options.extras;\n        this.renderingType = options.type;\n        this.key = options.key || '';\n        this.label = options.label || '';\n        this.validators = options.validators || [];\n        this.required = options.required;\n        this.hide = options.hide;\n        this.disable = options.disable;\n        this.alert = options.alert;\n        this.historicalDataValue = options.historicalDataValue;\n        this.calculateExpression = options.calculateExpression;\n    }\n\n    setHistoricalValue(v: boolean) {\n        this.enableHistoricalValue = v;\n    }\n    showHistoricalEncounterDate(v?: boolean) {\n      this.showHistoricalValueDate = v === undefined ? true : v;\n    }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\n\nexport class ConditionalRequiredValidator {\n\n  constructor() {}\n\n  validate(model: ConditionalValidationModel) {\n\n    // convert helper functions to string\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      const value = control.value;\n      let relationValue = null;\n      const referenceQuestionId: string = model.referenceQuestionId;\n      const referenceQuestionAnswers: any = model.referenceQuestionAnswers;\n      let isRequired: boolean;\n\n      if (control && control.controlRelations && control.controlRelations.relations) {\n          control.controlRelations.relations.forEach(relation => {\n\n            const relatedAsControl = relation.relatedTo as any;\n            if (relatedAsControl.uuid === referenceQuestionId) {\n              if (relatedAsControl && Array.isArray(relatedAsControl.value)) {\n                  relationValue = relation.relatedTo.value;\n              } else {\n                  relationValue = relation.relatedTo.value && relation.relatedTo.value.value ?\n                      relation.relatedTo.value.value : relation.relatedTo.value;\n              }\n            }\n          });\n      }\n\n      if (typeof referenceQuestionAnswers === 'object' && referenceQuestionAnswers.indexOf(relationValue) !== -1) {\n        isRequired = true;\n      }\n\n      if (isRequired && !value) {\n        return { 'conditional_required': { message:  model.message  } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\n\nexport class ConditionalAnsweredValidator {\n\n  constructor() {}\n\n  validate(model: ConditionalValidationModel) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      const value = control.value;\n      let relationValue = null;\n      const referenceQuestionId: string = model.referenceQuestionId;\n      const referenceQuestionAnswers: any = model.referenceQuestionAnswers;\n      let successCondition: any = true;\n\n      if (value) {\n        if (control && control.controlRelations && control.controlRelations.relations) {\n            control.controlRelations.relations.forEach(relation => {\n\n              const relatedAsControl = relation.relatedTo as any;\n              if (relatedAsControl.uuid === referenceQuestionId) {\n                if (Array.isArray(relatedAsControl.value)) {\n                    relationValue = relatedAsControl.value;\n                } else {\n                    relationValue = relatedAsControl.value && typeof relatedAsControl.value === 'object' && relatedAsControl.value.value ?\n                        relatedAsControl.value.value : relatedAsControl.value;\n                }\n              }\n\n              if (!relationValue) {\n                successCondition = false;\n              } else if (typeof referenceQuestionAnswers === 'object' && referenceQuestionAnswers.indexOf(relationValue) === -1) {\n                successCondition = false;\n              }\n            });\n        }\n      }\n\n      if (!successCondition) {\n        return { 'conditional_answered': { message:  model.message  } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\nexport class RequiredValidator {\n\n  validate(control: AfeFormControl) {\n\n    if (control.hidden) {\n      return null;\n    }\n\n    const value: any = control.value;\n    const isEmpty: boolean = value == null || typeof value === 'string' && value.length === 0;\n\n    return isEmpty ? { 'required': true } : null;\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\n\nexport class DateValidator {\n\n  constructor() { }\n\n  validate(control: AfeFormControl) {\n\n    if (control.hidden) {\n      return null;\n    }\n\n    const value = control.value;\n\n    if (value && value.length !== 0) {\n\n      // YYYY-MM-DD or DD-MM-YYYY\n      const test: boolean = !/Invalid|NaN/.test(new Date(value).toString());\n\n      return test ? null : { 'date': true };\n    } else {\n      return null;\n    }\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\nexport class MinValidator {\n\n\n  validate(min: number) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n      if (control.value && control.value.length !== 0) {\n\n        const v: number = control.value;\n        return v >= min ? null : { 'min': { requiredValue: min, actualValue: v } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\nexport class MaxValidator {\n\n  validate(max: number) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n\n      if (control.value && control.value.length !== 0) {\n\n        const v: number = control.value;\n        return v <= max ? null : { 'max': { requiredValue: max, actualValue: v } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { DateValidator } from './date.validator';\n\nexport class MinDateValidator {\n\n  validate(min: Date) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n\n      if (control.value && control.value.length !== 0) {\n\n        if (!new DateValidator().validate(control.value)) {\n\n          const newDate: Date = new Date(control.value);\n\n          return newDate.getTime() < min.getTime() ? { 'mindate': { 'requiredDate': min, actualDate: newDate } } : null;\n        } else {\n\n          return { 'mindate': { 'requiredDate': min } };\n        }\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { DateValidator } from './date.validator';\n\nexport class MaxDateValidator {\n\n  validate(max: Date) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n\n      if (control.value && control.value.length !== 0) {\n\n        if (!new DateValidator().validate(control.value)) {\n\n          const newDate: Date = new Date(control.value);\n\n          return newDate.getTime() > max.getTime() ? { 'maxdate': { 'requiredDate': max, actualDate: newDate } } : null;\n        } else {\n\n          return { 'maxdate': { 'requiredDate': max } };\n        }\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { DateValidator } from './date.validator';\n\nexport class FutureDateRestrictionValidator {\n\n  constructor() { }\n\n  validate(control: AfeFormControl) {\n\n    if (control.hidden) {\n      return null;\n    }\n\n    const value = control.value;\n    const now: Date = new Date();\n\n    if (value && value.length !== 0) {\n\n      if (!new DateValidator().validate(value)) {\n\n        const d: Date = new Date(value);\n\n        return d.getTime() > now.getTime() ? { 'futureDateRestriction': true } : null;\n      }\n    }\n\n    return null;\n  }\n}\n","\nimport * as _ from 'lodash';\nexport class JsExpressionHelper {\n\n  calcBMI(height, weight) {\n\n    let r;\n    if (height && weight) {\n      r = (weight / (height / 100 * height / 100)).toFixed(1);\n    }\n    return height && weight ? parseFloat(r) : null;\n  }\n\n  calcBMIForAgeZscore(bmiForAgeRef, height, weight) {\n   let bmi;\n   const maxAgeInDays = 1856;\n    if (height && weight) {\n      bmi = (weight / (height / 100 * height / 100)).toFixed(1);\n    }\n    const refSectionObject = _.first(bmiForAgeRef);\n    let formattedSDValue;\n    if (refSectionObject) {\n      const refObjectValues = Object.keys(refSectionObject).map(\n        (key) => refSectionObject[key]).map( (x) => x);\n        const refObjectKeys = Object.keys(refSectionObject);\n        const minimumValue = refObjectValues[1];\n        const minReferencePoint = [];\n        if (bmi < minimumValue) {\n          minReferencePoint.push(minimumValue);\n        } else {\n          _.forEach(refObjectValues, (value) => {\n          if (value <= bmi) {\n          minReferencePoint.push(value);\n          }\n          });\n        }\n        const lastReferenceValue = _.last(minReferencePoint);\n        const lastValueIndex = _.findIndex(refObjectValues, (o) => {\n        return o === lastReferenceValue;\n        });\n        const SDValue = refObjectKeys[lastValueIndex];\n        formattedSDValue = SDValue.replace('SD', '');\n        if (formattedSDValue.includes('neg')) {\n          formattedSDValue = formattedSDValue.substring(1, 0);\n          formattedSDValue = '-' + formattedSDValue;\n        }\n\n        if ( formattedSDValue === 'S' || formattedSDValue === 'L' || formattedSDValue === 'M' || formattedSDValue === '-5') {\n          formattedSDValue = '-4';\n        }\n\n    }\n\n    return  bmi && refSectionObject ?  formattedSDValue : null;\n  }\n  calcWeightForHeightZscore(weightForHeightRef, height, weight) {\n    let refSection ;\n    let formattedSDValue;\n    if (height && weight) {\n      height = parseFloat(height).toFixed(1);\n    }\n    const standardHeightMin = 45;\n    const standardMaxHeight = 110;\n    if ( height < standardHeightMin || height > standardMaxHeight) {\n      formattedSDValue = -4;\n    } else {\n        refSection = _.filter(weightForHeightRef, (refObject) => {\n        return parseFloat(refObject['Length']).toFixed(1) === height;\n      });\n    }\n\n    const refSectionObject = _.first(refSection);\n    if (refSectionObject) {\n      const refObjectValues = Object.keys(refSectionObject).map(\n        (key) => refSectionObject[key]).map( (x) => x);\n        const refObjectKeys = Object.keys(refSectionObject);\n        const minimumValue = refObjectValues[1];\n        const minReferencePoint = [];\n        if (weight < minimumValue) {\n          minReferencePoint.push(minimumValue);\n        } else {\n          _.forEach(refObjectValues, (value) => {\n          if (value <= weight) {\n          minReferencePoint.push(value);\n          }\n          });\n\n        }\n        const lastReferenceValue = _.last(minReferencePoint);\n        const lastValueIndex = _.findIndex(refObjectValues, (o) => {\n        return o === lastReferenceValue;\n        });\n        const SDValue = refObjectKeys[lastValueIndex];\n        formattedSDValue = SDValue.replace('SD', '');\n        if (formattedSDValue.includes('neg')) {\n          formattedSDValue = formattedSDValue.substring(1, 0);\n          formattedSDValue = '-' + formattedSDValue;\n        }\n        if ( formattedSDValue === 'S' || formattedSDValue === 'L' || formattedSDValue === 'M'  || formattedSDValue === '-5') {\n          formattedSDValue = '-4';\n        }\n\n    }\n\n    return  height && weight  ?  formattedSDValue : null;\n  }\n\n  calcHeightForAgeZscore(heightForAgeRef, height, weight) {\n\n    const refSectionObject = _.first(heightForAgeRef);\n    let formattedSDValue;\n    if (refSectionObject) {\n      const refObjectValues = Object.keys(refSectionObject).map(\n        (key) => refSectionObject[key]).map( (x) => x);\n        const refObjectKeys = Object.keys(refSectionObject);\n        const minimumValue = refObjectValues[1];\n        const minReferencePoint = [];\n        if (height < minimumValue) {\n          minReferencePoint.push(minimumValue);\n        } else {\n          _.forEach(refObjectValues, (value) => {\n          if (value <= height) {\n          minReferencePoint.push(value);\n          }\n          });\n        }\n        const lastReferenceValue = _.last(minReferencePoint);\n        const lastValueIndex = _.findIndex(refObjectValues, (o) => {\n        return o === lastReferenceValue;\n        });\n        const SDValue = refObjectKeys[lastValueIndex];\n        formattedSDValue = SDValue.replace('SD', '');\n        if (formattedSDValue.includes('neg')) {\n          formattedSDValue = formattedSDValue.substring(1, 0);\n          formattedSDValue = '-' + formattedSDValue;\n        }\n\n        if ( formattedSDValue === 'S' || formattedSDValue === 'L' || formattedSDValue === 'M'  || formattedSDValue === '-5') {\n          formattedSDValue = '-4';\n        }\n\n    }\n\n    return  height && weight && refSectionObject ?  formattedSDValue : null;\n  }\n\n  isEmpty(val) {\n\n    if (val === undefined || val === null || val === '' || val === 'null' || val === 'undefined') {\n      return true;\n    }\n\n    if (Array.isArray(val) && val.length === 0) {\n      return true;\n    }\n    return false;\n  }\n\n  arrayContains(array, members) {\n\n    if (Array.isArray(members)) {\n\n      if (members.length === 0) {\n        return true;\n      }\n\n      let contains = true;\n\n      for (let i = 0; i < members.length; i++) {\n        const val = members[i];\n        if (array.indexOf(val) === -1) {\n          contains = false;\n        }\n      }\n\n      return contains;\n    } else {\n      return array.indexOf(members) !== -1;\n    }\n  }\n  extractRepeatingGroupValues(key, array) {\n    const values = array.map(function(item) {\n    return item[key];\n    });\n  return values;\n  }\n  formatDate(value, format, offset) {\n\n    format = format || 'yyyy-MM-dd';\n    offset = offset || '+0300';\n\n    if (!(value instanceof Date)) {\n\n      value = new Date(value);\n      if (value === null || value === undefined) {\n        throw new Error('DateFormatException: value passed ' +\n          'is not a valid date');\n      }\n    }\n\n    return value; // TODO implement this\n    // return $filter('date')(value, format, offset);\n  }\n\n  arrayContainsAny(array, members) {\n\n    if (Array.isArray(members)) {\n      if (members.length === 0) {\n        return true;\n      }\n      let contains = false;\n\n      for (let i = 0; i < members.length; i++) {\n\n        const val = members[i];\n        if (array.indexOf(val) !== -1) {\n          contains = true;\n        }\n      }\n      return contains;\n    } else {\n      return array.indexOf(members) !== -1;\n    }\n  }\n\n  get helperFunctions() {\n    const helper = this;\n    return {\n      arrayContainsAny: helper.arrayContainsAny,\n      calcBMI: helper.calcBMI,\n      calcBMIForAgeZscore: helper.calcBMIForAgeZscore,\n      calcWeightForHeightZscore: helper.calcWeightForHeightZscore,\n      calcHeightForAgeZscore: helper.calcHeightForAgeZscore,\n      isEmpty: helper.isEmpty,\n      arrayContains: helper.arrayContains,\n      extractRepeatingGroupValues: helper.extractRepeatingGroupValues\n    };\n  }\n}\n","\n\nexport class Validations {\n\n  public static JSExpressionValidatorsEnabled = false;\n\n  constructor() {}\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { ExpressionRunner } from '../expression-runner/expression-runner';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { Validations } from './validations';\n\nexport class JsExpressionValidator {\n\n  constructor() {}\n\n  validate(model: JsExpressionValidationModel, form?: any) {\n\n    // convert helper functions to string\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (!Validations.JSExpressionValidatorsEnabled) {\n        return null;\n      }\n\n      const expression = model.failsWhenExpression;\n      const helper = new JsExpressionHelper();\n      const dataDependencies = {};\n\n      const helperFunctions = helper.helperFunctions;\n      const runnable = new ExpressionRunner().getRunnable(expression, control, helperFunctions, dataDependencies, form);\n\n      if (runnable.run()) {\n\n        return { 'js_expression': { 'expression': expression, message:  model.message } };\n      }\n\n      return null;\n    };\n  }\n}\n","\nexport class Messages {\n\n  public static readonly REQUIRED_FIELD_MSG = 'This field is required!';\n\n  public static readonly INVALID_DATE_MSG = 'Provided date is invalid!';\n\n  public static readonly FUTURE_DATE_RESTRICTION_MSG = 'Future date is not allowed!';\n\n  public static readonly MIN_LENGTH_MSG = 'Min Length should be {minLength}';\n\n  public static readonly MAX_LENGTH_MSG = 'Max Length should be {maxLength}';\n\n  public static readonly MAX_DATE_MSG = 'Max Date should be {maxDate}';\n\n  public static readonly MIN_DATE_MSG = 'Min Date should be {minDate}';\n\n  public static readonly MAX_MSG = 'Max value should be {max}';\n\n  public static readonly MIN_MSG = 'Min value should be {min}';\n}\n","import {Injectable} from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as _ from 'lodash';\n\nimport { ConditionalRequiredValidator } from '../validators/conditional-required.validator';\nimport { ConditionalAnsweredValidator } from '../validators/conditional-answered.validator';\nimport { RequiredValidator } from '../validators/required.validator';\nimport { DateValidator } from '../validators/date.validator';\nimport { MinValidator } from '../validators/min.validator';\nimport { MaxValidator } from '../validators/max.validator';\nimport { MinDateValidator } from '../validators/min-date.validator';\nimport { MaxDateValidator } from '../validators/max-date.validator';\nimport { FutureDateRestrictionValidator } from '../validators/future-date-restriction.validator';\nimport { JsExpressionValidator } from '../validators/js-expression.validator';\nimport { QuestionBase } from '../question-models/question-base';\nimport { Messages } from '../utils/messages';\nimport { ValidationModel } from '../question-models/validation.model';\nimport { DateValidationModel } from '../question-models/date-validation.model';\nimport { MaxValidationModel} from '../question-models/max-validation.model';\nimport { MinValidationModel} from '../question-models/min-validation.model';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\n\n@Injectable()\nexport class ValidationFactory {\n\n  constructor() {}\n\n  getValidators(question: QuestionBase, form?: any) {\n\n    const list: Array<any> = [];\n\n    if (question.validators) {\n\n      _.forEach(question.validators, (validator: ValidationModel) => {\n\n        switch (validator.type) {\n          case 'date':\n            list.push(this.dateValidator);\n            const allowFutureDates: boolean = ( <DateValidationModel>validator ).allowFutureDates;\n\n            if (!allowFutureDates) {\n              list.push(this.futureDateRestrictionValidator);\n            }\n            break;\n          case 'js_expression':\n            list.push(this.jsExpressionValidator.validate(<JsExpressionValidationModel>validator, form));\n            break;\n          case 'max':\n            list.push(this.getMaxValueValidator((<MaxValidationModel>validator).max));\n            break;\n          case 'min':\n            list.push(this.getMinValueValidator((<MinValidationModel>validator).min));\n            break;\n          case 'conditionalRequired':\n            list.push(this.conditionalRequiredValidator.validate(<ConditionalValidationModel>validator));\n            break;\n          case 'conditionalAnswered':\n            list.push(this.conditionalAnsweredValidator.validate(<ConditionalValidationModel>validator));\n            break;\n        }\n      });\n    }\n\n    if (question.required && typeof(question.required) === 'string' && question.required === 'true') {\n      list.push(this.requiredValidator);\n    } else {\n\n      // TODO - handle custom required validator\n    }\n\n    return list;\n  }\n\n  get conditionalRequiredValidator(): ConditionalRequiredValidator {\n    return new ConditionalRequiredValidator();\n  }\n\n  get conditionalAnsweredValidator(): ConditionalAnsweredValidator {\n    return new ConditionalAnsweredValidator();\n  }\n\n  get requiredValidator(): any {\n    return new RequiredValidator().validate;\n  }\n\n  get dateValidator(): any {\n    return new DateValidator().validate;\n  }\n\n  get futureDateRestrictionValidator(): any {\n    return new FutureDateRestrictionValidator().validate;\n  }\n\n  get maxDateValidator(): any {\n    return new MaxDateValidator().validate;\n  }\n\n  get minDateValidator(): any {\n    return new MinDateValidator().validate;\n  }\n\n  get minLengthValidator(): any {\n    return Validators.minLength;\n  }\n\n  get maxLengthValidator() {\n    return Validators.maxLength;\n  }\n\n  public getMinValueValidator(min: number): any {\n    return new MinValidator().validate(min);\n  }\n\n  public getMaxValueValidator(max: number): any {\n\n    return new MaxValidator().validate(max);\n  }\n\n  get jsExpressionValidator() {\n\n    return new JsExpressionValidator();\n  }\n\n  public errors(errors: any, question: QuestionBase): Array<string> {\n\n    const messages: Array<string> = [];\n\n    for (const property in errors) {\n        if (errors.hasOwnProperty(property)) {\n\n            switch (property) {\n              case 'required':\n                messages.push(Messages.REQUIRED_FIELD_MSG);\n                break;\n              case 'date':\n                messages.push(Messages.INVALID_DATE_MSG);\n                break;\n              case 'futureDateRestriction':\n                messages.push(Messages.FUTURE_DATE_RESTRICTION_MSG);\n                break;\n              case 'minlength':\n                messages.push(Messages.MIN_LENGTH_MSG.replace('{minLength}', errors.minlength.requiredLength));\n                break;\n              case 'maxlength':\n                messages.push(Messages.MIN_LENGTH_MSG.replace('{maxLength}', errors.maxlength.requiredLength));\n                break;\n              case 'maxdate':\n                messages.push(Messages.MAX_DATE_MSG.replace('{maxDate}', errors.maxdate.requiredDate));\n                break;\n              case 'mindate':\n                messages.push(Messages.MIN_DATE_MSG.replace('{minDate}', errors.mindate.requiredDate));\n                break;\n              case 'max':\n                messages.push(Messages.MAX_MSG.replace('{max}', errors.max.requiredValue));\n                break;\n              case 'min':\n                messages.push(Messages.MIN_MSG.replace('{min}', errors.min.requiredValue));\n                break;\n              case 'js_expression':\n                messages.push(errors['js_expression'].message);\n                break;\n              case 'conditional_required':\n                messages.push(errors['conditional_required'].message);\n                break;\n              case 'conditional_answered':\n                messages.push(errors['conditional_answered'].message);\n                break;\n            }\n        }\n    }\n\n    return messages;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Disabler } from '../control-hiders-disablers/can-disable';\nimport { Hider } from '../control-hiders-disablers/can-hide';\n\nimport { ExpressionRunner, Runnable } from '../expression-runner/expression-runner';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup\n} from '../../abstract-controls-extension';\nimport { QuestionBase } from '../question-models/question-base';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\nimport { Form } from './form';\n// Add ability to display all fields for debugging\nimport { DebugModeService } from './../services/debug-mode.service';\n\n@Injectable()\nexport class HidersDisablersFactory {\n\n    constructor(private expressionRunner: ExpressionRunner,\n     private expressionHelper: JsExpressionHelper,\n     private _debugModeService: DebugModeService) {\n    }\n\n    getJsExpressionDisabler(question: QuestionBase, control: AfeFormControl | AfeFormArray | AfeFormGroup,\n        form?: Form): Disabler {\n        const runnable: Runnable =\n            this.expressionRunner.getRunnable(question.disable as string, control,\n                this.expressionHelper.helperFunctions, {}, form);\n        const disabler: Disabler = {\n            toDisable: false,\n            disableWhenExpression: question.disable as string,\n            reEvaluateDisablingExpression: () => {\n                const result = runnable.run();\n                disabler.toDisable = result;\n            }\n        };\n        return disabler;\n    }\n\n    getJsExpressionHider(question: QuestionBase, control: AfeFormControl | AfeFormArray | AfeFormGroup,\n        form?: Form): Hider {\n\n        const hide: any = question.hide;\n        const value: string = typeof hide === 'object' ? this.convertHideObjectToString(hide) : question.hide as string;\n\n        // check if debugging has been enabled\n\n        const debugEnabled = this._debugModeService.debugEnabled();\n\n        const runnable: Runnable = this.expressionRunner.getRunnable(value, control,\n        this.expressionHelper.helperFunctions, {}, form);\n\n        const hider: Hider = {\n            toHide: false,\n            hideWhenExpression: value,\n            reEvaluateHidingExpression: () => {\n                 /* if debug is enabled then hiders to be false\n                 else run the normal eveluator i.e runnable.run()\n                 */\n                if (debugEnabled === true) {\n                      hider.toHide = false ;\n                  } else {\n                      hider.toHide =  runnable.run();\n                  }\n            }\n        };\n        return hider;\n    }\n\n    convertHideObjectToString(hide: any) {\n\n      if (hide.value instanceof Array) {\n\n        const arrayStr: string = '\\'' + hide.value.join('\\',\\'') + '\\'';\n        const exp = '!arrayContains([' + arrayStr + '],' + hide.field + ')';\n        return exp;\n      }\n\n      return '';\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Alert } from '../control-alerts/can-generate-alert';\n\nimport { ExpressionRunner, Runnable } from '../expression-runner/expression-runner';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension';\nimport { QuestionBase } from '../question-models/question-base';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\nimport { Form} from './form';\n\n@Injectable()\nexport class AlertsFactory {\n    constructor(private expressionRunner: ExpressionRunner, private expressionHelper: JsExpressionHelper) {\n    }\n    getJsExpressionshowAlert(question: QuestionBase, control: AfeFormControl | AfeFormArray | AfeFormGroup,\n        form?: Form): Alert {\n        const runnable: Runnable =\n            this.expressionRunner.getRunnable(question.alert.alertWhenExpression, control,\n                this.expressionHelper.helperFunctions, {}, form);\n        const showAlert: Alert = {\n            shown: false,\n            alertWhenExpression: question.alert.alertWhenExpression,\n            alertMessage: question.alert.message,\n            reEvaluateAlertExpression: () => {\n                const result = runnable.run();\n                showAlert.shown = result;\n            }\n        };\n        return showAlert;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { AfeFormControl, AfeFormArray, AfeFormGroup, AfeControlType\n} from '../../abstract-controls-extension';\n\nimport { NestedQuestion } from '../question-models/interfaces/nested-questions';\n\nimport { QuestionBase } from '../question-models/question-base';\nimport { QuestionGroup } from '../question-models/group-question';\nimport { ValidationFactory } from '../form-factory/validation.factory';\nimport { HidersDisablersFactory } from './hiders-disablers.factory';\nimport { AlertsFactory } from './show-messages.factory';\nimport { Form } from './form';\nimport { ExpressionRunner, Runnable } from '../expression-runner/expression-runner';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\n\n\n@Injectable()\nexport class FormControlService {\n    controls = [];\n    validationFactory: ValidationFactory;\n    hidersDisablersFactory: HidersDisablersFactory;\n\n    constructor(validationFactory: ValidationFactory,\n        hidersDisablersFactory: HidersDisablersFactory, private alertsFactory: AlertsFactory) {\n        this.validationFactory = validationFactory;\n        this.hidersDisablersFactory = hidersDisablersFactory;\n    }\n\n    generateControlModel(questionModel: QuestionBase | NestedQuestion, parentControl: AfeFormGroup,\n        generateChildren: boolean, form?: Form): AfeFormControl | AfeFormArray | AfeFormGroup {\n        if (questionModel instanceof QuestionBase) {\n            if (questionModel.controlType === AfeControlType.AfeFormArray) {\n                return this.generateFormArray(questionModel, parentControl, form);\n            }\n            if (questionModel.controlType === AfeControlType.AfeFormGroup) {\n                return this.generateFormGroupModel(questionModel, generateChildren, parentControl, form);\n            }\n\n            if (questionModel.controlType === AfeControlType.AfeFormControl) {\n                return this.generateFormControl(questionModel, parentControl, form);\n            }\n        }\n        return null;\n    }\n\n    generateFormGroupModel(question: QuestionBase, generateChildren: boolean,\n        parentControl?: AfeFormGroup, form?: Form): AfeFormGroup {\n        const formGroup = new AfeFormGroup({});\n        this.wireHidersDisablers(question, formGroup, form);\n        this.wireAlerts(question, formGroup, form);\n        if (parentControl instanceof AfeFormGroup) {\n            parentControl.setControl(question.key, formGroup);\n        }\n\n        const asGroup = question as QuestionGroup;\n\n        if (generateChildren && asGroup && asGroup.questions.length > 0) {\n            this._generateFormGroupChildrenModel(asGroup.questions, formGroup, form);\n        }\n\n        return formGroup;\n    }\n\n    _generateFormGroupChildrenModel(questions: QuestionBase[], parentControl: AfeFormGroup, form?: Form) {\n\n        if (questions.length > 0) {\n            questions.forEach(element => {\n                const generated = this.generateControlModel(element, parentControl, true, form);\n                if (generated !== null) {\n                    parentControl.addControl(element.key, generated);\n                }\n            });\n        }\n    }\n\n\n    generateFormArray(question: QuestionBase, parentControl?: AfeFormGroup, form?: Form): AfeFormArray {\n\n        const validators = this.validationFactory.getValidators(question, form);\n         let formArray: AfeFormArray;\n         if (validators && validators.length > 0) {\n             formArray = new AfeFormArray([], validators[0]);\n         } else {\n            formArray = new AfeFormArray([]);\n         }\n        formArray.uuid = question.key;\n        this.wireHidersDisablers(question, formArray, form);\n        this.wireAlerts(question, formArray, form);\n        if (parentControl instanceof AfeFormGroup) {\n            parentControl.setControl(question.key, formArray);\n        }\n\n        return formArray;\n    }\n\n    generateFormControl(question: QuestionBase, parentControl?: AfeFormGroup, form?: Form): AfeFormControl {\n\n        const value = question.defaultValue || '';\n        const validators = this.validationFactory.getValidators(question, form);\n\n        const control = new AfeFormControl(value, validators);\n        control.uuid = question.key;\n        this.wireHidersDisablers(question, control, form);\n        this.wireAlerts(question, control, form);\n        this.wireCalculator(question, control, (form ? form.dataSourcesContainer.dataSources : null));\n\n        if (parentControl instanceof AfeFormGroup) {\n            parentControl.setControl(question.key, control);\n        }\n\n        return control;\n    }\n\n    private wireAlerts(question: QuestionBase,\n        control: AfeFormArray | AfeFormGroup | AfeFormControl, form?: Form) {\n        if (question.alert && question.alert !== '') {\n            const alert = this.alertsFactory.getJsExpressionshowAlert(question, control, form);\n            control.setAlertFn(alert);\n        }\n    }\n    private wireHidersDisablers(question: QuestionBase,\n        control: AfeFormArray | AfeFormGroup | AfeFormControl, form?: Form) {\n        if (question.hide && question.hide !== '') {\n            const hider = this.hidersDisablersFactory.getJsExpressionHider(question, control, form);\n            control.setHidingFn(hider);\n        }\n\n        if (question.disable && question.disable !== '') {\n            const disable =\n                this.hidersDisablersFactory.getJsExpressionDisabler(question, control, form);\n            control.setDisablingFn(disable);\n        }\n    }\n\n    private wireCalculator(question: QuestionBase,\n        control: AfeFormControl, dataSource?: any) {\n        if (question.calculateExpression && question.calculateExpression !== '') {\n            const helper: JsExpressionHelper = new JsExpressionHelper();\n            const runner: ExpressionRunner = new ExpressionRunner();\n            const runnable: Runnable = runner.getRunnable(question.calculateExpression\n                , control,\n                helper.helperFunctions,\n                dataSource);\n            // this functionality strictly assumes the calculateExpression function has been defined in the JsExpressionHelper class\n            control.setCalculatorFn(runnable.run);\n        }\n\n    }\n\n}\n","export const DEFAULT_STYLES = `a {\n      color: white;\n      text-decoration: none;\n      font-size: 12px;\n      text-transform: uppercase;\n    }\n\n    ul {\n      list-style-type: none;\n      margin: 2px auto;\n      position: relative;\n    }\n\n    li {\n      display: block;\n      padding: 10px 20px;\n      white-space: nowrap;\n      transition: all 0.3s ease-in;\n      border-bottom: 4px solid transparent;\n    }\n\n    li:hover {\n      border-bottom: 4px solid white;\n      opacity: 0.7;\n      cursor: pointer;\n    }\n\n    .owl-theme .owl-controls .owl-nav {\n      position: absolute;\n      width: 100%;\n      top: 0;\n    }\n\n    .owl-theme .owl-controls .owl-nav [class*=\"owl-\"] {\n      position: absolute;\n      background: none;\n      color: black;\n    }\n\n    .owl-theme .owl-controls .owl-nav [class*=\"owl-\"]:hover {\n      background: none;\n      color: black;\n    }\n\n    .owl-theme .owl-controls .owl-nav .owl-next {\n      right: 0;\n      transform: translate(120%);\n    }\n\n    .owl-theme .owl-controls .owl-nav .owl-prev {\n      left: 0;\n      transform: translate(-120%);\n    }\n\n    .slick-initialized .swipe-tab-content {\n      position: relative;\n      min-height: 365px;\n    }\n    @media screen and (min-width: 767px) {\n      .slick-initialized .swipe-tab-content {\n        min-height: 500px;\n      }\n    }\n    .slick-initialized .swipe-tab {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      height: 50px;\n      background: none;\n      border: 0;\n      color: #757575;\n      cursor: pointer;\n      text-align: center;\n      border-bottom: 2px solid rgba(51, 122, 183, 0);\n      transition: all 0.5s;\n    }\n    .slick-initialized .swipe-tab:hover {\n      color: #337AB7;\n    }\n    .slick-initialized .swipe-tab.active-tab {\n      border-bottom-color: #337AB7;\n      color: #337AB7;\n      font-weight: bold;\n    }\n\n    .disabled {\n      opacity: .5;\n      pointer-events: none;\n    }\n\n    .select2-container {\n      margin-top: -5px;\n    }\n\n    .btn {\n      padding: 0px 12px !important;\n    }\n\n    .form-tooltip{\n      color:rgb(51, 122, 183);\n      display: inline-block;\n    }\n    .question-info{\n          opacity:0;\n          height:0px;\n          display: none;\n          transition-duration: opacity 1s ease-out;\n          transtion-delay: 0.5s;\n          padding-top: 2px;\n          padding-bottom: 2px;\n          color: #696969;\n          border-style: ridge;\n          border-width: 1px;\n          border-color: #337ab7;\n          margin-top: 2px;\n    }\n    .hide-info{\n      display:none;\n      height:0px;\n    }\n    .form-tooltip:hover ~ .question-info {\n          display:block;\n          opacity:1;\n          height:auto;\n     }\n    .form-tooltip .tooltipcontent::after {\n          content: \" \";\n          position: absolute;\n          bottom: 100%;  /* At the top of the tooltip */\n          right: 0%;\n          margin-left: -5px;\n          border-width: 5px;\n          border-style: solid;\n          border-top-color: transparent;\n          border-right-color: transparent;\n          border-bottom-color: #337ab7;\n          border-left-color: transparent;\n }\n\n    ng-select.form-control {\n      padding-top: 0;\n      height: auto;\n      padding-bottom: 0;\n    }\n\n .forms-dropdown-menu {\n     max-height: 450px;\n     overflow-y: scroll;\n }\n .no-border {\n  border: 0;\n  box-shadow: none;\n}\n\n    `;\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DataSources {\n    private _dataSources: any = {};\n    constructor() {\n    }\n\n    get dataSources(): any {\n        return this._dataSources;\n    }\n\n    registerDataSource(key: string, dataSource: any, unWrap = false) {\n        if (unWrap) {\n            // tslint:disable-next-line:forin\n            for (const o in dataSource) {\n                console.log('registering', o, dataSource[o]);\n                this.registerDataSource(o, dataSource[o], false);\n            }\n        }\n        if (this.dataSources[key]) {\n            console.warn('Overriding registered data source', key);\n        }\n        this._dataSources[key] = dataSource;\n    }\n\n    clearDataSource(key: string) {\n        delete this._dataSources[key];\n    }\n\n}\n","import {\n  Component, OnInit, Input, Inject\n} from '@angular/core';\nimport 'hammerjs';\nimport { DEFAULT_STYLES } from './form-renderer.component.css';\nimport { DOCUMENT } from '@angular/common';\nimport { DataSources } from '../data-sources/data-sources';\nimport { NodeBase, LeafNode } from '../form-factory/form-node';\nimport { AfeFormGroup } from '../../abstract-controls-extension/afe-form-group';\nimport { ValidationFactory } from '../form-factory/validation.factory';\nimport { DataSource } from '../question-models/interfaces/data-source';\nimport { FormErrorsService } from '../services/form-errors.service';\nimport { QuestionGroup } from '../question-models/group-question';\n\n@Component({\n  selector: 'form-renderer',\n  template: `<!--CONTAINERS-->\n<div *ngIf=\"node.question.renderingType === 'form'\">\n  <div class=\"dropdown dropdown-tabs forms-dropdown\">\n    <a class=\"btn dropdown-toggle\" data-toggle=\"dropdown\">\n      <i class=\"fa fa-angle-double-down\"></i>\n    </a>\n    <ul class=\"dropdown-menu dropdown-menu-right forms-dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdownMenu\">\n      <li *ngFor=\"let question of node.question.questions; let i = index;\" (click)=\"clickTab(i)\">\n        {{question.label}}\n      </li>\n    </ul>\n  </div>\n  <mat-tab-group (selectChange)='tabSelected($event)' [selectedIndex]='activeTab'>\n    <mat-tab [label]='question.label' *ngFor=\"let question of node.question.questions; let i = index;\">\n        <div (swipeLeft)='loadNextTab()' (swipeRight)='loadPreviousTab()'>\n          <form-renderer [node]=\"node.children[question.key]\" [parentComponent]=\"this\" [parentGroup]=\"node.control\"></form-renderer>\n        </div>\n    </mat-tab>\n  </mat-tab-group>\n\n  <div style=\"text-align: center;\">\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"loadPreviousTab()\" [ngClass]=\"{disabled: isCurrentTabFirst()}\">&lt;&lt;</button>\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"loadNextTab()\" [ngClass]=\"{disabled: isCurrentTabLast()}\">\n      &gt;&gt;</button>\n  </div>\n</div>\n<div *ngIf=\"node.question.renderingType === 'page'\">\n  <!--<h2>{{node.question.label}}</h2>-->\n  <form-renderer *ngFor=\"let question of node.question.questions\" [parentComponent]=\"this\" [node]=\"node.children[question.key]\"\n    [parentGroup]=\"parentGroup\"></form-renderer>\n</div>\n<div *ngIf=\"node.question.renderingType === 'section'\">\n  <div class=\"panel  panel-primary\">\n    <div class=\"panel-heading\">\n      <button type=\"button\" class=\"btn btn-primary pull-right\" (click)=\"isCollapsed = !isCollapsed\">\n        {{isCollapsed ? 'Show' : 'Hide'}}\n      </button> {{node.question.label}}\n    </div>\n    <div class=\"panel-body\" [collapse]=\"isCollapsed\">\n      <form-renderer *ngFor=\"let question of node.question.questions\" [parentComponent]=\"this\" [node]=\"node.children[question.key]\"\n        [parentGroup]=\"parentGroup\"></form-renderer>\n    </div>\n  </div>\n</div>\n\n<!-- MESSAGES -->\n<div *ngIf=\"node.control && node.control.alert && node.control.alert !== ''\" class=\"alert alert-warning\">\n  <a class=\"close\" data-dismiss=\"alert\">&times;</a> {{node.control.alert}}\n</div>\n\n<!--CONTROLS-->\n\n<div *ngIf=\"node.question.controlType === 0\" class=\"form-group\" [formGroup]=\"parentGroup\" [hidden]=\"node.control.hidden\"\n  [ngClass]=\"{disabled: node.control.disabled}\">\n  <!--LEAF CONTROL-->\n  <div class=\"question-area\">\n    <a class=\"form-tooltip pull-right\" (click)=\"toggleInformation(node.question.extras.id)\" data-placement=\"right\" *ngIf=\"node.question && node.question.extras.questionInfo  && node.question.extras.questionInfo !== ''  && node.question.extras.questionInfo !== ' '\">\n      <i class=\"glyphicon glyphicon-question-sign\" aria-hidden=\"true\"></i>\n    </a>\n\n    <label *ngIf=\"node.question.label\" [style.color]=\"hasErrors()? 'red' :''\" class=\"control-label\" [attr.for]=\"node.question.key\">\n      {{node.question.required === true ? '*':''}} {{node.question.label}}\n    </label>\n    <div [ngSwitch]=\"node.question.renderingType\">\n      <select class=\"form-control\" *ngSwitchCase=\"'select'\" [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\">\n        <option *ngFor=\"let o of node.question.options\" [ngValue]=\"o.value\">{{o.label}}\n        </option>\n      </select>\n      <remote-file-upload *ngSwitchCase=\"'file'\" [dataSource]=\"dataSource\" [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\"\n        (fileChanged)=\"upload($event)\">\n      </remote-file-upload>\n      <textarea [placeholder]=\"node.question.placeholder\" [rows]=\"node.question.rows\" class=\"form-control\" *ngSwitchCase=\"'textarea'\"\n        [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\">\n      </textarea>\n      <remote-select *ngSwitchCase=\"'remote-select'\" [placeholder]=\"node.question.placeholder\" tabindex=\"0\" [dataSource]=\"dataSource\"\n        [componentID]=\"node.question.key + 'id'\" [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\"></remote-select>\n  <!--  \n      <date-time-picker *ngSwitchCase=\"'date'\" [showTime]=\"node.question.showTime\" tabindex=\"0\" [weeks]='node.question.extras.questionOptions.weeksList'\n        (onDateChange)=\"onDateChanged(node)\" [showWeeks]=\"node.question.showWeeksAdder\" [formControlName]=\"node.question.key\"\n        [id]=\"node.question.key + 'id'\"></date-time-picker>\n  -->\n\n      <ngx-date-time-picker *ngSwitchCase=\"'date'\" [showTime]=\"node.question.showTime\" [id]=\"node.question.key + 'id'\" \n            [formControlName]=\"node.question.key\" [weeks]='node.question.extras.questionOptions.weeksList'\n            (onDateChange)=\"onDateChanged(node)\" [showWeeks]=\"node.question.showWeeksAdder\" ></ngx-date-time-picker>\n      <ng-select *ngSwitchCase=\"'multi-select'\" [noFilter]=\"50\" [style.height]=\"'auto'\"  [style.overflow-x]=\"'hidden'\" tabindex=\"0\" [formControlName]=\"node.question.key\"\n        [id]=\"node.question.key + 'id'\" [options]=\"node.question.options\" [multiple]=\"true\">\n      </ng-select>\n      <input class=\"form-control\" *ngSwitchCase=\"'number'\" [formControlName]=\"node.question.key \" [attr.placeholder]=\"node.question.placeholder \"\n        [type]=\"'number'\" [id]=\"node.question.key + 'id' \" [step]=\"'any'\" [min]=\"node.question.extras.questionOptions.min\"\n        [max]=\"node.question.extras.questionOptions.max\">\n      <input class=\"form-control\" *ngSwitchDefault [formControlName]=\"node.question.key \" [attr.placeholder]=\"node.question.placeholder \"\n        [type]=\"node.question.renderingType\" [id]=\"node.question.key + 'id' \">\n\n      <div *ngSwitchCase=\"'radio'\">\n        <div *ngFor=\"let o of node.question.options\">\n          <label class=\"form-control no-border\">\n            <input type=\"radio\" [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\" [value]=\"o.value\"> {{ o.label }}\n          </label>\n        </div>\n      </div>\n\n      <div *ngSwitchCase=\"'checkbox'\">\n        <checkbox [id]=\"node.question.key + 'id'\" [formControlName]=\"node.question.key\" [options]=\"node.question.options\"></checkbox>\n      </div>\n\n      <div *ngIf=\"node.question.enableHistoricalValue && node.question.historicalDisplay\">\n        <div class=\"container-fluid\">\n          <div class=\"row\">\n            <div class=\"col-xs-9\">\n              <span class=\"text-warning\">Previous Value: </span>\n              <strong>{{node.question.historicalDisplay?.text}}</strong>\n              <span *ngIf=\"node.question.showHistoricalValueDate\">\n                <span> | </span>\n                <strong class=\"text-primary\">{{node.question.historicalDisplay?._date}}</strong>\n              </span>\n\n            </div>\n            <button type=\"button\" [node]=\"node\" [name]=\"'historyValue'\" class=\"btn btn-primary btn-small col-xs-3\">Use Value\n            </button>\n          </div>\n        </div>\n      </div>\n      <appointments-overview [node]=\"node\"></appointments-overview>\n      <div *ngIf=\"hasErrors() \">\n        <p *ngFor=\"let e of errors() \">\n          <span class=\"text-danger \">{{e}}</span>\n        </p>\n      </div>\n    </div>\n\n    <div class=\"question-info col-md-12 col-lg-12 col-sm-12\" id=\"{{node.question.extras.id}}\" *ngIf=\"node.question && node.question.extras.questionInfo  && node.question.extras.questionInfo !== ''  && node.question.extras.questionInfo !== ' '\">\n      {{node.question.extras.questionInfo}}\n    </div>\n\n  </div>\n</div>\n<div *ngIf=\"node.question.controlType === 1\" [hidden]=\"node.control.hidden\" [ngClass]=\"{disabled: node.control.disabled}\">\n\n\n  <!--ARRAY CONTROL-->\n  <div [ngSwitch]=\"node.question.renderingType \">\n    <div class='well' style=\"padding: 2px; \" *ngSwitchCase=\" 'repeating' \">\n      <h4 style=\"margin: 2px; font-weight: bold;\">{{node.question.label}}</h4>\n      <hr style=\"margin-left:-2px; margin-right:-2px; margin-bottom:4px; margin-top:8px; border-width:2px;\" />\n      <div [ngSwitch]=\"node.question.extras.type\">\n        <div *ngSwitchCase=\"'testOrder'\">\n          <div *ngFor=\"let child of node.children; let i=index \">\n            <form-renderer *ngFor=\"let question of child.question.questions \" [parentComponent]=\"this\" [node]=\"child.children[question.key]\n            \" [parentGroup]=\"child.control \"></form-renderer>\n            <div>{{child.orderNumber}}</div>\n            <button type=\"button \" class='btn btn-sm btn-danger' (click)=\"node.removeAt(i) \">Remove</button>\n            <br/>\n            <hr style=\"margin-left:-2px; margin-right:-2px; margin-bottom:4px; margin-top:8px; border-width:1px;\" />\n          </div>\n        </div>\n\n        <div *ngSwitchCase=\"'obsGroup'\" style=\"margin-bottom:20px;\">\n          <div *ngFor=\"let child of node.children; let i=index \">\n            <form-renderer *ngFor=\"let question of child.question.questions \" [parentComponent]=\"this\" [node]=\"child.children[question.key]\n            \" [parentGroup]=\"child.control \"></form-renderer>\n            <button type=\"button \" class='btn btn-sm btn-danger' (click)=\"node.removeAt(i) \">Remove</button>\n            <br/>\n            <hr style=\"margin-left:-2px; margin-right:-2px; margin-bottom:4px; margin-top:8px; border-width:1px;\" />\n          </div>\n        </div>\n      </div>\n      <button type=\"button \" class='btn btn-primary' (click)=\"node.createChildNode() \">Add</button>\n    </div>\n  </div>\n\n</div>\n<div *ngIf=\"node.question.controlType === 2\" [hidden]=\"node.control.hidden\" [ngClass]=\"{disabled: node.control.disabled}\">\n\n  <!--GROUP-->\n  <div [ngSwitch]=\"node.question.renderingType \">\n    <div *ngSwitchCase=\" 'group' \">\n      <form-renderer *ngFor=\"let question of node.question.questions \" [parentComponent]=\"this\" [node]=\"node.children[question.key]\n            \" [parentGroup]=\"node.control \"></form-renderer>\n    </div>\n    <div *ngSwitchCase=\" 'field-set' \" style=\"border: 1px solid #eeeeee; padding: 2px; margin: 2px;\">\n      <form-renderer *ngFor=\"let question of node.question.questions \" [parentComponent]=\"this\" [node]=\"node.children[question.key]\n            \" [parentGroup]=\"node.control \"></form-renderer>\n    </div>\n  </div>\n\n</div>\n`,\n  styles: ['../../style/app.css', DEFAULT_STYLES]\n})\nexport class FormRendererComponent implements OnInit {\n\n  @Input() public parentComponent: FormRendererComponent;\n  @Input() public node: NodeBase;\n  @Input() public parentGroup: AfeFormGroup;\n  public childComponents: FormRendererComponent[] = [];\n  public showTime: boolean;\n  public showWeeks: boolean;\n  public activeTab: number;\n  public dataSource: DataSource;\n  public isCollapsed = false;\n  public auto: any;\n\n  constructor(\n  private validationFactory: ValidationFactory,\n  private dataSources: DataSources,\n  private formErrorsService: FormErrorsService,\n  @Inject(DOCUMENT) private document: any) {\n    this.activeTab = 0;\n  }\n\n  public ngOnInit() {\n    this.setUpRemoteSelect();\n    this.setUpFileUpload();\n    if (this.node && this.node.form) {\n      const tab = this.node.form.valueProcessingInfo.lastFormTab;\n      if (tab && tab !== this.activeTab) {\n        this.activeTab = tab;\n      }\n    }\n    if (this.node && this.node.question.renderingType === 'form') {\n      this.formErrorsService.announceErrorField$.subscribe(\n        (error) => {\n          this.scrollToControl(error);\n        });\n    }\n\n    if (this.node && this.node.question.renderingType === 'section') {\n      this.isCollapsed = !(this.node.question as QuestionGroup).isExpanded;\n    }\n\n    if (this.parentComponent) {\n      this.parentComponent.addChildComponent(this);\n    }\n  }\n\n  public addChildComponent(child: FormRendererComponent) {\n    this.childComponents.push(child);\n  }\n\n  public setUpRemoteSelect() {\n    if (this.node && this.node.question.extras &&\n    this.node.question.renderingType === 'remote-select') {\n      this.dataSource = this.dataSources.dataSources[this.node.question.dataSource];\n      if (this.dataSource && this.node.question.dataSourceOptions) {\n        this.dataSource.dataSourceOptions = this.node.question.dataSourceOptions;\n      }\n    }\n  }\n\n  public setUpFileUpload() {\n    if (this.node && this.node.question.extras && this.node.question.renderingType === 'file') {\n      this.dataSource = this.dataSources.dataSources[this.node.question.dataSource];\n      // console.log('Key', this.node.question);\n      // console.log('Data source', this.dataSource);\n    }\n\n  }\n\n\n public clickTab(tabNumber) {\n    this.activeTab = tabNumber;\n  }\n\n  public loadPreviousTab() {\n    if (!this.isCurrentTabFirst()) {\n      this.clickTab(this.activeTab - 1);\n      document.body.scrollTop = 0;\n    }\n  }\n\n  public  isCurrentTabFirst() {\n    return this.activeTab === 0;\n  }\n\n  public  isCurrentTabLast() {\n    return this.activeTab === this.node.question['questions'].length - 1;\n  }\n\n  public  loadNextTab() {\n    if (!this.isCurrentTabLast()) {\n      this.clickTab(this.activeTab + 1);\n      document.body.scrollTop = 0;\n    }\n  }\n  public  tabSelected($event) {\n    this.activeTab = $event.index;\n    this.setPreviousTab();\n  }\n  public  setPreviousTab() {\n    if (this.node && this.node.form) {\n      this.node.form.valueProcessingInfo['lastFormTab'] = this.activeTab;\n    }\n\n  }\n public   hasErrors() {\n    return this.node.control.touched && !this.node.control.valid;\n  }\n\n  public  errors() {\n    return this.getErrors(this.node);\n  }\n\n\n  public scrollToControl(error: string) {\n\n    const tab: number = +error.split(',')[0];\n    const elSelector = error.split(',')[1] + 'id';\n\n    // the tab components\n    const tabComponent: FormRendererComponent = this.childComponents[tab];\n\n    this.clickTab(tab);\n\n    setTimeout(() => {\n\n      // expand all sections\n      tabComponent.childComponents.forEach((section) => {\n        section.isCollapsed = false;\n\n        setTimeout(() => {\n          const element: any = this.document.getElementById(elSelector);\n          if (element !== null && element.focus) {\n            element.focus();\n            element.scrollIntoView(true);\n          }\n        }, 100);\n      });\n\n    }, 200);\n  }\n\n  public onDateChanged(node: LeafNode) {\n    console.log('Node', node);\n    this.node = node;\n  }\n\n  public upload(event) {\n    // console.log('Event', event);\n    // console.log('Data', this.dataSource);\n  }\n\n  public toggleInformation(infoId) {\n    const e = document.getElementById(infoId);\n\n    if (e.style.display === 'block') {\n        e.style.display = 'none';\n     } else {\n        e.style.display = 'block';\n     }\n\n\n    console.log('InfoId', infoId);\n  }\n\n\n   private getErrors(node: NodeBase) {\n    const errors: any = node.control.errors;\n\n    if (errors) {\n\n      return this.validationFactory.errors(errors, node.question);\n    }\n\n    return [];\n  }\n}\n","import {\n    Component, OnInit, Input\n} from '@angular/core';\nimport * as _ from 'lodash';\n\nimport { Form } from '../form-factory/form';\nimport { ValidationFactory } from '../form-factory/validation.factory';\nimport { NodeBase, LeafNode } from '../form-factory/form-node';\nimport { QuestionGroup } from '../question-models/group-question';\nimport { FormErrorsService } from '../services/form-errors.service';\n\n@Component({\n    selector: 'error-renderer',\n    template: `<div *ngIf=\"showErrors()\" class=\"container\">\n<ul class=\"list-group\">\n  <li class=\"list-group-item list-group-item-warning\" *ngFor=\"let errorNode of errorNodes\" (click)=announceErrorField(errorNode)>\n    <div class=\"error\" *ngIf=\"errorNode.control.valid == false\">\n      <h4>{{errorNode.question.label}}</h4>\n      <span class=\"text-danger\"> {{getControlError(errorNode)}}</span>\n    </div>\n  </li>\n</ul>\n</div>\n`,\n    styles: [`ul{list-style:none}.list-group-item{padding:2px 15px;cursor:pointer}ul li:hover{background-color:#fff}h4{margin-top:7px;margin-bottom:7px}`]\n})\nexport class ErrorRendererComponent implements OnInit {\n\n  @Input() form: Form;\n\n  constructor(private validationFactory: ValidationFactory, private formErrorsService: FormErrorsService) {}\n\n  ngOnInit() {\n  }\n\n  showErrors() {\n    return !this.form.valid && this.form.showErrors;\n  }\n\n  get errorNodes() {\n\n    const invalidControls = this.form.markInvalidControls(this.form.rootNode, []);\n    return invalidControls;\n  }\n\n  getControlError(node: LeafNode) {\n      const errors: any = node.control.errors;\n\n      if (errors) {\n\n          return this.validationFactory.errors(errors, node.question);\n      }\n\n      return [];\n  }\n\n  announceErrorField(errorNode: LeafNode) {\n\n    const nodes: Array<NodeBase> = this.form.searchNodeByQuestionId(errorNode.path.substring(0, errorNode.path.indexOf('.')));\n\n    _.forEach(nodes, (node: NodeBase) => {\n\n      if (node.question.renderingType === 'page') {\n        const pageIndex: number = this.getPageIndex(node);\n        this.formErrorsService.announceErrorField(pageIndex + ',' + errorNode.question.key);\n      }\n    });\n  }\n\n  getPageIndex(node: NodeBase) {\n     const questionGroup: QuestionGroup = this.form.rootNode.question as QuestionGroup;\n     return questionGroup.questions.indexOf(node.question);\n  }\n}\n","import * as _ from 'lodash';\nimport { QuestionBase } from '../question-models/question-base';\n\nexport class HistoricalFieldHelperService {\n\n  public getDisplayTextFromOptions(question: QuestionBase , valueProperty: string, displayProperty: string): string {\n\n    let displayText = '';\n    const historicalValue = question.historicalDataValue;\n    if (_.isArray(historicalValue.value)) {\n      let valueConverted = 0;\n      _.each(historicalValue.value, (val) => {\n        _.each(question.options, (option) => {\n\n          if (option[valueProperty] === val) {\n            if (valueConverted === 0) {\n              displayText = displayText + option[displayProperty];\n            } else {\n              displayText = displayText + ', ' + option[displayProperty];\n            }\n            valueConverted++;\n          }\n        });\n      });\n\n    } else {\n      _.each(question.options, (option) => {\n        if (option[valueProperty] === historicalValue.value) {\n          displayText = option[displayProperty];\n        }\n      });\n    }\n    return displayText ;\n  }\n\n\n}\n","import { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\n\nimport { HistoricalFieldHelperService } from '../helpers/historical-field-helper-service';\nimport * as _ from 'lodash';\nimport { NodeBase } from '../form-factory/form-node';\n\n@Directive({\n  selector: `[node]`\n})\n\nexport class HistoricalValueDirective {\n\n  @Input() _node: NodeBase;\n  @Output() _nodeChange = new EventEmitter<Object>();\n\n  historicalDisplay: string;\n\n  constructor(private historicalFieldHelper: HistoricalFieldHelperService) {\n  }\n\n  @HostListener('click', ['$event'])\n  setValue(e) {\n\n    if (e.target.name === 'historyValue') {\n\n      if (this._node && (!this.compareString(this._node.question.renderingType, 'page')\n        || !this.compareString(this._node.question.renderingType, 'section'))) {\n\n        this._node.control.setValue(this._node.question.historicalDataValue.value);\n\n        this._node.question['historicalValue'] = this._node.question.historicalDataValue;\n        e.stopPropagation();\n        this._nodeChange.emit(this._node);\n\n      }\n\n    }\n  }\n  private compareString(a, b) {\n    if (a === b) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  @Input()\n  set node(node: NodeBase) {\n\n    if (node) {\n      this._node = node;\n      if (this._node.question.enableHistoricalValue && !_.isUndefined(this._node.question.historicalDataValue)) {\n        const display: any = { text: '', _date: '' };\n        if ((this._node.question.renderingType === 'select'\n          || this._node.question.renderingType === 'multi-select')) {\n\n          display.text = this.historicalFieldHelper.getDisplayTextFromOptions(\n            this._node.question,\n            'value',\n            'label'\n          );\n          display._date = this._node.question.historicalDataValue.valueDate;\n\n          this._node.question['historicalDisplay'] = display;\n\n        } else if (!_.isUndefined(this._node.question.historicalDataValue)) {\n\n          display.text = this._node.question.historicalDataValue.value;\n          display._date = this._node.question.historicalDataValue.valueDate;\n\n          this._node.question['historicalDisplay'] = display;\n        }\n      }\n    }\n  }\n\n}\n","export const STYLE = `\nng-select {\n  display: inline-block;\n  margin: 0;\n  position: relative;\n  vertical-align: middle;\n  width: 100%;\n}\nng-select * {\n  box-sizing: border-box;\n  font-family: Sans-Serif;\n}\nng-select > div {\n  border: 1px solid #ddd;\n  box-sizing: border-box;\n  cursor: pointer;\n  user-select: none;\n  width: 100%;\n}\nng-select > div.disabled {\n  background-color: #eee;\n  color: #aaa;\n  cursor: default;\n  pointer-events: none;\n}\nng-select > div > div.single {\n  display: flex;\n  height: 30px;\n  width: 100%;\n}\nng-select > div > div.single > div.value,\nng-select > div > div.single > div.placeholder {\n  flex: 1;\n  line-height: 30px;\n  overflow: hidden;\n  padding: 0 10px;\n  white-space: nowrap;\n}\nng-select > div > div.single > div.placeholder {\n  color: #a9a9a9;\n}\nng-select > div > div.single > div.clear,\nng-select > div > div.single > div.toggle {\n  color: #aaa;\n  line-height: 30px;\n  text-align: center;\n  width: 30px;\n}\nng-select > div > div.single > div.clear:hover,\nng-select > div > div.single > div.toggle:hover {\n  background-color: #ececec;\n}\nng-select > div > div.single > div.clear {\n  font-size: 18px;\n}\nng-select > div > div.single > div.toggle {\n  font-size: 14px;\n}\nng-select > div > div.multiple {\n  display: flex;\n  flex-flow: row wrap;\n  height: 100%;\n  min-height: 30px;\n  padding: 0 10px;\n  width: 100%;\n}\nng-select > div > div.multiple > div.option {\n  background-color: #eee;\n  border: 1px solid #aaa;\n  border-radius: 4px;\n  color: #333;\n  cursor: default;\n  display: inline-block;\n  flex-shrink: 0;\n  font-size: 14px;\n  line-height: 22px;\n  margin: 3px 5px 3px 0;\n  padding: 0 4px;\n}\nng-select > div > div.multiple > div.option span.deselect-option {\n  color: #aaa;\n  cursor: pointer;\n  font-size: 14px;\n  height: 20px;\n  line-height: 20px;\n}\nng-select > div > div.multiple > div.option span.deselect-option:hover {\n  color: #555;\n}\nng-select > div > div.multiple input {\n  background-color: transparent;\n  border: none;\n  height: 30px;\n  line-height: 30px;\n  padding: 0;\n}\nng-select > div > div.multiple input:focus {\n  outline: none;\n}\n`;\n","export class Option {\n\n    value: string;\n    label: string;\n\n    disabled: boolean;\n    highlighted: boolean;\n    selected: boolean;\n    shown: boolean;\n\n    constructor(value: string, label: string) {\n        this.value = value;\n        this.label = label;\n\n        this.disabled = false;\n        this.highlighted = false;\n        this.selected = false;\n        this.shown = true;\n    }\n\n    show() {\n        this.shown = true;\n    }\n\n    hide() {\n        this.shown = false;\n    }\n\n    disable() {\n        this.disabled = true;\n    }\n\n    enable() {\n        this.disabled = false;\n    }\n\n    undecoratedCopy() {\n        return {\n            label: this.label,\n            value: this.value\n        };\n    }\n}\n","export class Diacritics {\n\n    static DIACRITICS = {\n        '\\u24B6': 'A',\n        '\\uFF21': 'A',\n        '\\u00C0': 'A',\n        '\\u00C1': 'A',\n        '\\u00C2': 'A',\n        '\\u1EA6': 'A',\n        '\\u1EA4': 'A',\n        '\\u1EAA': 'A',\n        '\\u1EA8': 'A',\n        '\\u00C3': 'A',\n        '\\u0100': 'A',\n        '\\u0102': 'A',\n        '\\u1EB0': 'A',\n        '\\u1EAE': 'A',\n        '\\u1EB4': 'A',\n        '\\u1EB2': 'A',\n        '\\u0226': 'A',\n        '\\u01E0': 'A',\n        '\\u00C4': 'A',\n        '\\u01DE': 'A',\n        '\\u1EA2': 'A',\n        '\\u00C5': 'A',\n        '\\u01FA': 'A',\n        '\\u01CD': 'A',\n        '\\u0200': 'A',\n        '\\u0202': 'A',\n        '\\u1EA0': 'A',\n        '\\u1EAC': 'A',\n        '\\u1EB6': 'A',\n        '\\u1E00': 'A',\n        '\\u0104': 'A',\n        '\\u023A': 'A',\n        '\\u2C6F': 'A',\n        '\\uA732': 'AA',\n        '\\u00C6': 'AE',\n        '\\u01FC': 'AE',\n        '\\u01E2': 'AE',\n        '\\uA734': 'AO',\n        '\\uA736': 'AU',\n        '\\uA738': 'AV',\n        '\\uA73A': 'AV',\n        '\\uA73C': 'AY',\n        '\\u24B7': 'B',\n        '\\uFF22': 'B',\n        '\\u1E02': 'B',\n        '\\u1E04': 'B',\n        '\\u1E06': 'B',\n        '\\u0243': 'B',\n        '\\u0182': 'B',\n        '\\u0181': 'B',\n        '\\u24B8': 'C',\n        '\\uFF23': 'C',\n        '\\u0106': 'C',\n        '\\u0108': 'C',\n        '\\u010A': 'C',\n        '\\u010C': 'C',\n        '\\u00C7': 'C',\n        '\\u1E08': 'C',\n        '\\u0187': 'C',\n        '\\u023B': 'C',\n        '\\uA73E': 'C',\n        '\\u24B9': 'D',\n        '\\uFF24': 'D',\n        '\\u1E0A': 'D',\n        '\\u010E': 'D',\n        '\\u1E0C': 'D',\n        '\\u1E10': 'D',\n        '\\u1E12': 'D',\n        '\\u1E0E': 'D',\n        '\\u0110': 'D',\n        '\\u018B': 'D',\n        '\\u018A': 'D',\n        '\\u0189': 'D',\n        '\\uA779': 'D',\n        '\\u01F1': 'DZ',\n        '\\u01C4': 'DZ',\n        '\\u01F2': 'Dz',\n        '\\u01C5': 'Dz',\n        '\\u24BA': 'E',\n        '\\uFF25': 'E',\n        '\\u00C8': 'E',\n        '\\u00C9': 'E',\n        '\\u00CA': 'E',\n        '\\u1EC0': 'E',\n        '\\u1EBE': 'E',\n        '\\u1EC4': 'E',\n        '\\u1EC2': 'E',\n        '\\u1EBC': 'E',\n        '\\u0112': 'E',\n        '\\u1E14': 'E',\n        '\\u1E16': 'E',\n        '\\u0114': 'E',\n        '\\u0116': 'E',\n        '\\u00CB': 'E',\n        '\\u1EBA': 'E',\n        '\\u011A': 'E',\n        '\\u0204': 'E',\n        '\\u0206': 'E',\n        '\\u1EB8': 'E',\n        '\\u1EC6': 'E',\n        '\\u0228': 'E',\n        '\\u1E1C': 'E',\n        '\\u0118': 'E',\n        '\\u1E18': 'E',\n        '\\u1E1A': 'E',\n        '\\u0190': 'E',\n        '\\u018E': 'E',\n        '\\u24BB': 'F',\n        '\\uFF26': 'F',\n        '\\u1E1E': 'F',\n        '\\u0191': 'F',\n        '\\uA77B': 'F',\n        '\\u24BC': 'G',\n        '\\uFF27': 'G',\n        '\\u01F4': 'G',\n        '\\u011C': 'G',\n        '\\u1E20': 'G',\n        '\\u011E': 'G',\n        '\\u0120': 'G',\n        '\\u01E6': 'G',\n        '\\u0122': 'G',\n        '\\u01E4': 'G',\n        '\\u0193': 'G',\n        '\\uA7A0': 'G',\n        '\\uA77D': 'G',\n        '\\uA77E': 'G',\n        '\\u24BD': 'H',\n        '\\uFF28': 'H',\n        '\\u0124': 'H',\n        '\\u1E22': 'H',\n        '\\u1E26': 'H',\n        '\\u021E': 'H',\n        '\\u1E24': 'H',\n        '\\u1E28': 'H',\n        '\\u1E2A': 'H',\n        '\\u0126': 'H',\n        '\\u2C67': 'H',\n        '\\u2C75': 'H',\n        '\\uA78D': 'H',\n        '\\u24BE': 'I',\n        '\\uFF29': 'I',\n        '\\u00CC': 'I',\n        '\\u00CD': 'I',\n        '\\u00CE': 'I',\n        '\\u0128': 'I',\n        '\\u012A': 'I',\n        '\\u012C': 'I',\n        '\\u0130': 'I',\n        '\\u00CF': 'I',\n        '\\u1E2E': 'I',\n        '\\u1EC8': 'I',\n        '\\u01CF': 'I',\n        '\\u0208': 'I',\n        '\\u020A': 'I',\n        '\\u1ECA': 'I',\n        '\\u012E': 'I',\n        '\\u1E2C': 'I',\n        '\\u0197': 'I',\n        '\\u24BF': 'J',\n        '\\uFF2A': 'J',\n        '\\u0134': 'J',\n        '\\u0248': 'J',\n        '\\u24C0': 'K',\n        '\\uFF2B': 'K',\n        '\\u1E30': 'K',\n        '\\u01E8': 'K',\n        '\\u1E32': 'K',\n        '\\u0136': 'K',\n        '\\u1E34': 'K',\n        '\\u0198': 'K',\n        '\\u2C69': 'K',\n        '\\uA740': 'K',\n        '\\uA742': 'K',\n        '\\uA744': 'K',\n        '\\uA7A2': 'K',\n        '\\u24C1': 'L',\n        '\\uFF2C': 'L',\n        '\\u013F': 'L',\n        '\\u0139': 'L',\n        '\\u013D': 'L',\n        '\\u1E36': 'L',\n        '\\u1E38': 'L',\n        '\\u013B': 'L',\n        '\\u1E3C': 'L',\n        '\\u1E3A': 'L',\n        '\\u0141': 'L',\n        '\\u023D': 'L',\n        '\\u2C62': 'L',\n        '\\u2C60': 'L',\n        '\\uA748': 'L',\n        '\\uA746': 'L',\n        '\\uA780': 'L',\n        '\\u01C7': 'LJ',\n        '\\u01C8': 'Lj',\n        '\\u24C2': 'M',\n        '\\uFF2D': 'M',\n        '\\u1E3E': 'M',\n        '\\u1E40': 'M',\n        '\\u1E42': 'M',\n        '\\u2C6E': 'M',\n        '\\u019C': 'M',\n        '\\u24C3': 'N',\n        '\\uFF2E': 'N',\n        '\\u01F8': 'N',\n        '\\u0143': 'N',\n        '\\u00D1': 'N',\n        '\\u1E44': 'N',\n        '\\u0147': 'N',\n        '\\u1E46': 'N',\n        '\\u0145': 'N',\n        '\\u1E4A': 'N',\n        '\\u1E48': 'N',\n        '\\u0220': 'N',\n        '\\u019D': 'N',\n        '\\uA790': 'N',\n        '\\uA7A4': 'N',\n        '\\u01CA': 'NJ',\n        '\\u01CB': 'Nj',\n        '\\u24C4': 'O',\n        '\\uFF2F': 'O',\n        '\\u00D2': 'O',\n        '\\u00D3': 'O',\n        '\\u00D4': 'O',\n        '\\u1ED2': 'O',\n        '\\u1ED0': 'O',\n        '\\u1ED6': 'O',\n        '\\u1ED4': 'O',\n        '\\u00D5': 'O',\n        '\\u1E4C': 'O',\n        '\\u022C': 'O',\n        '\\u1E4E': 'O',\n        '\\u014C': 'O',\n        '\\u1E50': 'O',\n        '\\u1E52': 'O',\n        '\\u014E': 'O',\n        '\\u022E': 'O',\n        '\\u0230': 'O',\n        '\\u00D6': 'O',\n        '\\u022A': 'O',\n        '\\u1ECE': 'O',\n        '\\u0150': 'O',\n        '\\u01D1': 'O',\n        '\\u020C': 'O',\n        '\\u020E': 'O',\n        '\\u01A0': 'O',\n        '\\u1EDC': 'O',\n        '\\u1EDA': 'O',\n        '\\u1EE0': 'O',\n        '\\u1EDE': 'O',\n        '\\u1EE2': 'O',\n        '\\u1ECC': 'O',\n        '\\u1ED8': 'O',\n        '\\u01EA': 'O',\n        '\\u01EC': 'O',\n        '\\u00D8': 'O',\n        '\\u01FE': 'O',\n        '\\u0186': 'O',\n        '\\u019F': 'O',\n        '\\uA74A': 'O',\n        '\\uA74C': 'O',\n        '\\u01A2': 'OI',\n        '\\uA74E': 'OO',\n        '\\u0222': 'OU',\n        '\\u24C5': 'P',\n        '\\uFF30': 'P',\n        '\\u1E54': 'P',\n        '\\u1E56': 'P',\n        '\\u01A4': 'P',\n        '\\u2C63': 'P',\n        '\\uA750': 'P',\n        '\\uA752': 'P',\n        '\\uA754': 'P',\n        '\\u24C6': 'Q',\n        '\\uFF31': 'Q',\n        '\\uA756': 'Q',\n        '\\uA758': 'Q',\n        '\\u024A': 'Q',\n        '\\u24C7': 'R',\n        '\\uFF32': 'R',\n        '\\u0154': 'R',\n        '\\u1E58': 'R',\n        '\\u0158': 'R',\n        '\\u0210': 'R',\n        '\\u0212': 'R',\n        '\\u1E5A': 'R',\n        '\\u1E5C': 'R',\n        '\\u0156': 'R',\n        '\\u1E5E': 'R',\n        '\\u024C': 'R',\n        '\\u2C64': 'R',\n        '\\uA75A': 'R',\n        '\\uA7A6': 'R',\n        '\\uA782': 'R',\n        '\\u24C8': 'S',\n        '\\uFF33': 'S',\n        '\\u1E9E': 'S',\n        '\\u015A': 'S',\n        '\\u1E64': 'S',\n        '\\u015C': 'S',\n        '\\u1E60': 'S',\n        '\\u0160': 'S',\n        '\\u1E66': 'S',\n        '\\u1E62': 'S',\n        '\\u1E68': 'S',\n        '\\u0218': 'S',\n        '\\u015E': 'S',\n        '\\u2C7E': 'S',\n        '\\uA7A8': 'S',\n        '\\uA784': 'S',\n        '\\u24C9': 'T',\n        '\\uFF34': 'T',\n        '\\u1E6A': 'T',\n        '\\u0164': 'T',\n        '\\u1E6C': 'T',\n        '\\u021A': 'T',\n        '\\u0162': 'T',\n        '\\u1E70': 'T',\n        '\\u1E6E': 'T',\n        '\\u0166': 'T',\n        '\\u01AC': 'T',\n        '\\u01AE': 'T',\n        '\\u023E': 'T',\n        '\\uA786': 'T',\n        '\\uA728': 'TZ',\n        '\\u24CA': 'U',\n        '\\uFF35': 'U',\n        '\\u00D9': 'U',\n        '\\u00DA': 'U',\n        '\\u00DB': 'U',\n        '\\u0168': 'U',\n        '\\u1E78': 'U',\n        '\\u016A': 'U',\n        '\\u1E7A': 'U',\n        '\\u016C': 'U',\n        '\\u00DC': 'U',\n        '\\u01DB': 'U',\n        '\\u01D7': 'U',\n        '\\u01D5': 'U',\n        '\\u01D9': 'U',\n        '\\u1EE6': 'U',\n        '\\u016E': 'U',\n        '\\u0170': 'U',\n        '\\u01D3': 'U',\n        '\\u0214': 'U',\n        '\\u0216': 'U',\n        '\\u01AF': 'U',\n        '\\u1EEA': 'U',\n        '\\u1EE8': 'U',\n        '\\u1EEE': 'U',\n        '\\u1EEC': 'U',\n        '\\u1EF0': 'U',\n        '\\u1EE4': 'U',\n        '\\u1E72': 'U',\n        '\\u0172': 'U',\n        '\\u1E76': 'U',\n        '\\u1E74': 'U',\n        '\\u0244': 'U',\n        '\\u24CB': 'V',\n        '\\uFF36': 'V',\n        '\\u1E7C': 'V',\n        '\\u1E7E': 'V',\n        '\\u01B2': 'V',\n        '\\uA75E': 'V',\n        '\\u0245': 'V',\n        '\\uA760': 'VY',\n        '\\u24CC': 'W',\n        '\\uFF37': 'W',\n        '\\u1E80': 'W',\n        '\\u1E82': 'W',\n        '\\u0174': 'W',\n        '\\u1E86': 'W',\n        '\\u1E84': 'W',\n        '\\u1E88': 'W',\n        '\\u2C72': 'W',\n        '\\u24CD': 'X',\n        '\\uFF38': 'X',\n        '\\u1E8A': 'X',\n        '\\u1E8C': 'X',\n        '\\u24CE': 'Y',\n        '\\uFF39': 'Y',\n        '\\u1EF2': 'Y',\n        '\\u00DD': 'Y',\n        '\\u0176': 'Y',\n        '\\u1EF8': 'Y',\n        '\\u0232': 'Y',\n        '\\u1E8E': 'Y',\n        '\\u0178': 'Y',\n        '\\u1EF6': 'Y',\n        '\\u1EF4': 'Y',\n        '\\u01B3': 'Y',\n        '\\u024E': 'Y',\n        '\\u1EFE': 'Y',\n        '\\u24CF': 'Z',\n        '\\uFF3A': 'Z',\n        '\\u0179': 'Z',\n        '\\u1E90': 'Z',\n        '\\u017B': 'Z',\n        '\\u017D': 'Z',\n        '\\u1E92': 'Z',\n        '\\u1E94': 'Z',\n        '\\u01B5': 'Z',\n        '\\u0224': 'Z',\n        '\\u2C7F': 'Z',\n        '\\u2C6B': 'Z',\n        '\\uA762': 'Z',\n        '\\u24D0': 'a',\n        '\\uFF41': 'a',\n        '\\u1E9A': 'a',\n        '\\u00E0': 'a',\n        '\\u00E1': 'a',\n        '\\u00E2': 'a',\n        '\\u1EA7': 'a',\n        '\\u1EA5': 'a',\n        '\\u1EAB': 'a',\n        '\\u1EA9': 'a',\n        '\\u00E3': 'a',\n        '\\u0101': 'a',\n        '\\u0103': 'a',\n        '\\u1EB1': 'a',\n        '\\u1EAF': 'a',\n        '\\u1EB5': 'a',\n        '\\u1EB3': 'a',\n        '\\u0227': 'a',\n        '\\u01E1': 'a',\n        '\\u00E4': 'a',\n        '\\u01DF': 'a',\n        '\\u1EA3': 'a',\n        '\\u00E5': 'a',\n        '\\u01FB': 'a',\n        '\\u01CE': 'a',\n        '\\u0201': 'a',\n        '\\u0203': 'a',\n        '\\u1EA1': 'a',\n        '\\u1EAD': 'a',\n        '\\u1EB7': 'a',\n        '\\u1E01': 'a',\n        '\\u0105': 'a',\n        '\\u2C65': 'a',\n        '\\u0250': 'a',\n        '\\uA733': 'aa',\n        '\\u00E6': 'ae',\n        '\\u01FD': 'ae',\n        '\\u01E3': 'ae',\n        '\\uA735': 'ao',\n        '\\uA737': 'au',\n        '\\uA739': 'av',\n        '\\uA73B': 'av',\n        '\\uA73D': 'ay',\n        '\\u24D1': 'b',\n        '\\uFF42': 'b',\n        '\\u1E03': 'b',\n        '\\u1E05': 'b',\n        '\\u1E07': 'b',\n        '\\u0180': 'b',\n        '\\u0183': 'b',\n        '\\u0253': 'b',\n        '\\u24D2': 'c',\n        '\\uFF43': 'c',\n        '\\u0107': 'c',\n        '\\u0109': 'c',\n        '\\u010B': 'c',\n        '\\u010D': 'c',\n        '\\u00E7': 'c',\n        '\\u1E09': 'c',\n        '\\u0188': 'c',\n        '\\u023C': 'c',\n        '\\uA73F': 'c',\n        '\\u2184': 'c',\n        '\\u24D3': 'd',\n        '\\uFF44': 'd',\n        '\\u1E0B': 'd',\n        '\\u010F': 'd',\n        '\\u1E0D': 'd',\n        '\\u1E11': 'd',\n        '\\u1E13': 'd',\n        '\\u1E0F': 'd',\n        '\\u0111': 'd',\n        '\\u018C': 'd',\n        '\\u0256': 'd',\n        '\\u0257': 'd',\n        '\\uA77A': 'd',\n        '\\u01F3': 'dz',\n        '\\u01C6': 'dz',\n        '\\u24D4': 'e',\n        '\\uFF45': 'e',\n        '\\u00E8': 'e',\n        '\\u00E9': 'e',\n        '\\u00EA': 'e',\n        '\\u1EC1': 'e',\n        '\\u1EBF': 'e',\n        '\\u1EC5': 'e',\n        '\\u1EC3': 'e',\n        '\\u1EBD': 'e',\n        '\\u0113': 'e',\n        '\\u1E15': 'e',\n        '\\u1E17': 'e',\n        '\\u0115': 'e',\n        '\\u0117': 'e',\n        '\\u00EB': 'e',\n        '\\u1EBB': 'e',\n        '\\u011B': 'e',\n        '\\u0205': 'e',\n        '\\u0207': 'e',\n        '\\u1EB9': 'e',\n        '\\u1EC7': 'e',\n        '\\u0229': 'e',\n        '\\u1E1D': 'e',\n        '\\u0119': 'e',\n        '\\u1E19': 'e',\n        '\\u1E1B': 'e',\n        '\\u0247': 'e',\n        '\\u025B': 'e',\n        '\\u01DD': 'e',\n        '\\u24D5': 'f',\n        '\\uFF46': 'f',\n        '\\u1E1F': 'f',\n        '\\u0192': 'f',\n        '\\uA77C': 'f',\n        '\\u24D6': 'g',\n        '\\uFF47': 'g',\n        '\\u01F5': 'g',\n        '\\u011D': 'g',\n        '\\u1E21': 'g',\n        '\\u011F': 'g',\n        '\\u0121': 'g',\n        '\\u01E7': 'g',\n        '\\u0123': 'g',\n        '\\u01E5': 'g',\n        '\\u0260': 'g',\n        '\\uA7A1': 'g',\n        '\\u1D79': 'g',\n        '\\uA77F': 'g',\n        '\\u24D7': 'h',\n        '\\uFF48': 'h',\n        '\\u0125': 'h',\n        '\\u1E23': 'h',\n        '\\u1E27': 'h',\n        '\\u021F': 'h',\n        '\\u1E25': 'h',\n        '\\u1E29': 'h',\n        '\\u1E2B': 'h',\n        '\\u1E96': 'h',\n        '\\u0127': 'h',\n        '\\u2C68': 'h',\n        '\\u2C76': 'h',\n        '\\u0265': 'h',\n        '\\u0195': 'hv',\n        '\\u24D8': 'i',\n        '\\uFF49': 'i',\n        '\\u00EC': 'i',\n        '\\u00ED': 'i',\n        '\\u00EE': 'i',\n        '\\u0129': 'i',\n        '\\u012B': 'i',\n        '\\u012D': 'i',\n        '\\u00EF': 'i',\n        '\\u1E2F': 'i',\n        '\\u1EC9': 'i',\n        '\\u01D0': 'i',\n        '\\u0209': 'i',\n        '\\u020B': 'i',\n        '\\u1ECB': 'i',\n        '\\u012F': 'i',\n        '\\u1E2D': 'i',\n        '\\u0268': 'i',\n        '\\u0131': 'i',\n        '\\u24D9': 'j',\n        '\\uFF4A': 'j',\n        '\\u0135': 'j',\n        '\\u01F0': 'j',\n        '\\u0249': 'j',\n        '\\u24DA': 'k',\n        '\\uFF4B': 'k',\n        '\\u1E31': 'k',\n        '\\u01E9': 'k',\n        '\\u1E33': 'k',\n        '\\u0137': 'k',\n        '\\u1E35': 'k',\n        '\\u0199': 'k',\n        '\\u2C6A': 'k',\n        '\\uA741': 'k',\n        '\\uA743': 'k',\n        '\\uA745': 'k',\n        '\\uA7A3': 'k',\n        '\\u24DB': 'l',\n        '\\uFF4C': 'l',\n        '\\u0140': 'l',\n        '\\u013A': 'l',\n        '\\u013E': 'l',\n        '\\u1E37': 'l',\n        '\\u1E39': 'l',\n        '\\u013C': 'l',\n        '\\u1E3D': 'l',\n        '\\u1E3B': 'l',\n        '\\u017F': 'l',\n        '\\u0142': 'l',\n        '\\u019A': 'l',\n        '\\u026B': 'l',\n        '\\u2C61': 'l',\n        '\\uA749': 'l',\n        '\\uA781': 'l',\n        '\\uA747': 'l',\n        '\\u01C9': 'lj',\n        '\\u24DC': 'm',\n        '\\uFF4D': 'm',\n        '\\u1E3F': 'm',\n        '\\u1E41': 'm',\n        '\\u1E43': 'm',\n        '\\u0271': 'm',\n        '\\u026F': 'm',\n        '\\u24DD': 'n',\n        '\\uFF4E': 'n',\n        '\\u01F9': 'n',\n        '\\u0144': 'n',\n        '\\u00F1': 'n',\n        '\\u1E45': 'n',\n        '\\u0148': 'n',\n        '\\u1E47': 'n',\n        '\\u0146': 'n',\n        '\\u1E4B': 'n',\n        '\\u1E49': 'n',\n        '\\u019E': 'n',\n        '\\u0272': 'n',\n        '\\u0149': 'n',\n        '\\uA791': 'n',\n        '\\uA7A5': 'n',\n        '\\u01CC': 'nj',\n        '\\u24DE': 'o',\n        '\\uFF4F': 'o',\n        '\\u00F2': 'o',\n        '\\u00F3': 'o',\n        '\\u00F4': 'o',\n        '\\u1ED3': 'o',\n        '\\u1ED1': 'o',\n        '\\u1ED7': 'o',\n        '\\u1ED5': 'o',\n        '\\u00F5': 'o',\n        '\\u1E4D': 'o',\n        '\\u022D': 'o',\n        '\\u1E4F': 'o',\n        '\\u014D': 'o',\n        '\\u1E51': 'o',\n        '\\u1E53': 'o',\n        '\\u014F': 'o',\n        '\\u022F': 'o',\n        '\\u0231': 'o',\n        '\\u00F6': 'o',\n        '\\u022B': 'o',\n        '\\u1ECF': 'o',\n        '\\u0151': 'o',\n        '\\u01D2': 'o',\n        '\\u020D': 'o',\n        '\\u020F': 'o',\n        '\\u01A1': 'o',\n        '\\u1EDD': 'o',\n        '\\u1EDB': 'o',\n        '\\u1EE1': 'o',\n        '\\u1EDF': 'o',\n        '\\u1EE3': 'o',\n        '\\u1ECD': 'o',\n        '\\u1ED9': 'o',\n        '\\u01EB': 'o',\n        '\\u01ED': 'o',\n        '\\u00F8': 'o',\n        '\\u01FF': 'o',\n        '\\u0254': 'o',\n        '\\uA74B': 'o',\n        '\\uA74D': 'o',\n        '\\u0275': 'o',\n        '\\u01A3': 'oi',\n        '\\u0223': 'ou',\n        '\\uA74F': 'oo',\n        '\\u24DF': 'p',\n        '\\uFF50': 'p',\n        '\\u1E55': 'p',\n        '\\u1E57': 'p',\n        '\\u01A5': 'p',\n        '\\u1D7D': 'p',\n        '\\uA751': 'p',\n        '\\uA753': 'p',\n        '\\uA755': 'p',\n        '\\u24E0': 'q',\n        '\\uFF51': 'q',\n        '\\u024B': 'q',\n        '\\uA757': 'q',\n        '\\uA759': 'q',\n        '\\u24E1': 'r',\n        '\\uFF52': 'r',\n        '\\u0155': 'r',\n        '\\u1E59': 'r',\n        '\\u0159': 'r',\n        '\\u0211': 'r',\n        '\\u0213': 'r',\n        '\\u1E5B': 'r',\n        '\\u1E5D': 'r',\n        '\\u0157': 'r',\n        '\\u1E5F': 'r',\n        '\\u024D': 'r',\n        '\\u027D': 'r',\n        '\\uA75B': 'r',\n        '\\uA7A7': 'r',\n        '\\uA783': 'r',\n        '\\u24E2': 's',\n        '\\uFF53': 's',\n        '\\u00DF': 's',\n        '\\u015B': 's',\n        '\\u1E65': 's',\n        '\\u015D': 's',\n        '\\u1E61': 's',\n        '\\u0161': 's',\n        '\\u1E67': 's',\n        '\\u1E63': 's',\n        '\\u1E69': 's',\n        '\\u0219': 's',\n        '\\u015F': 's',\n        '\\u023F': 's',\n        '\\uA7A9': 's',\n        '\\uA785': 's',\n        '\\u1E9B': 's',\n        '\\u24E3': 't',\n        '\\uFF54': 't',\n        '\\u1E6B': 't',\n        '\\u1E97': 't',\n        '\\u0165': 't',\n        '\\u1E6D': 't',\n        '\\u021B': 't',\n        '\\u0163': 't',\n        '\\u1E71': 't',\n        '\\u1E6F': 't',\n        '\\u0167': 't',\n        '\\u01AD': 't',\n        '\\u0288': 't',\n        '\\u2C66': 't',\n        '\\uA787': 't',\n        '\\uA729': 'tz',\n        '\\u24E4': 'u',\n        '\\uFF55': 'u',\n        '\\u00F9': 'u',\n        '\\u00FA': 'u',\n        '\\u00FB': 'u',\n        '\\u0169': 'u',\n        '\\u1E79': 'u',\n        '\\u016B': 'u',\n        '\\u1E7B': 'u',\n        '\\u016D': 'u',\n        '\\u00FC': 'u',\n        '\\u01DC': 'u',\n        '\\u01D8': 'u',\n        '\\u01D6': 'u',\n        '\\u01DA': 'u',\n        '\\u1EE7': 'u',\n        '\\u016F': 'u',\n        '\\u0171': 'u',\n        '\\u01D4': 'u',\n        '\\u0215': 'u',\n        '\\u0217': 'u',\n        '\\u01B0': 'u',\n        '\\u1EEB': 'u',\n        '\\u1EE9': 'u',\n        '\\u1EEF': 'u',\n        '\\u1EED': 'u',\n        '\\u1EF1': 'u',\n        '\\u1EE5': 'u',\n        '\\u1E73': 'u',\n        '\\u0173': 'u',\n        '\\u1E77': 'u',\n        '\\u1E75': 'u',\n        '\\u0289': 'u',\n        '\\u24E5': 'v',\n        '\\uFF56': 'v',\n        '\\u1E7D': 'v',\n        '\\u1E7F': 'v',\n        '\\u028B': 'v',\n        '\\uA75F': 'v',\n        '\\u028C': 'v',\n        '\\uA761': 'vy',\n        '\\u24E6': 'w',\n        '\\uFF57': 'w',\n        '\\u1E81': 'w',\n        '\\u1E83': 'w',\n        '\\u0175': 'w',\n        '\\u1E87': 'w',\n        '\\u1E85': 'w',\n        '\\u1E98': 'w',\n        '\\u1E89': 'w',\n        '\\u2C73': 'w',\n        '\\u24E7': 'x',\n        '\\uFF58': 'x',\n        '\\u1E8B': 'x',\n        '\\u1E8D': 'x',\n        '\\u24E8': 'y',\n        '\\uFF59': 'y',\n        '\\u1EF3': 'y',\n        '\\u00FD': 'y',\n        '\\u0177': 'y',\n        '\\u1EF9': 'y',\n        '\\u0233': 'y',\n        '\\u1E8F': 'y',\n        '\\u00FF': 'y',\n        '\\u1EF7': 'y',\n        '\\u1E99': 'y',\n        '\\u1EF5': 'y',\n        '\\u01B4': 'y',\n        '\\u024F': 'y',\n        '\\u1EFF': 'y',\n        '\\u24E9': 'z',\n        '\\uFF5A': 'z',\n        '\\u017A': 'z',\n        '\\u1E91': 'z',\n        '\\u017C': 'z',\n        '\\u017E': 'z',\n        '\\u1E93': 'z',\n        '\\u1E95': 'z',\n        '\\u01B6': 'z',\n        '\\u0225': 'z',\n        '\\u0240': 'z',\n        '\\u2C6C': 'z',\n        '\\uA763': 'z',\n        '\\u0386': '\\u0391',\n        '\\u0388': '\\u0395',\n        '\\u0389': '\\u0397',\n        '\\u038A': '\\u0399',\n        '\\u03AA': '\\u0399',\n        '\\u038C': '\\u039F',\n        '\\u038E': '\\u03A5',\n        '\\u03AB': '\\u03A5',\n        '\\u038F': '\\u03A9',\n        '\\u03AC': '\\u03B1',\n        '\\u03AD': '\\u03B5',\n        '\\u03AE': '\\u03B7',\n        '\\u03AF': '\\u03B9',\n        '\\u03CA': '\\u03B9',\n        '\\u0390': '\\u03B9',\n        '\\u03CC': '\\u03BF',\n        '\\u03CD': '\\u03C5',\n        '\\u03CB': '\\u03C5',\n        '\\u03B0': '\\u03C5',\n        '\\u03C9': '\\u03C9',\n        '\\u03C2': '\\u03C3'\n    };\n\n    static strip(text: string): string {\n\n        const match = (a: string): string => {\n            return this.DIACRITICS[a] || a;\n        };\n        if (text) {\n            return text.replace(/[^\\u0000-\\u007E]/g, match);\n        } else {\n            return '';\n        }\n\n    }\n}\n\n","import { Option } from './option';\nimport { Diacritics } from './diacritics';\n\nexport class OptionList {\n    private _options: Array<Option>;\n\n    /* Consider using these for performance improvement. */\n    // private _selection: Array<Option>;\n    // private _filtered: Array<Option>;\n    // private _value: Array<string>;\n\n    private _highlightedOption: Option = null;\n    // v0 and v1 are assumed not to be undefined or null.\n    static equalValues(v0: Array<string>, v1: Array<string>): boolean {\n\n        if (v0.length !== v1.length) {\n            return false;\n        }\n\n        const a: Array<string> = v0.slice().sort();\n        const b: Array<string> = v1.slice().sort();\n\n        return a.every((v, i) => {\n            return v === b[i];\n        });\n    }\n\n\n    constructor(options: Array<any>) {\n\n        if (typeof options === 'undefined' || options === null) {\n            options = [];\n        }\n\n        this._options = options.map((option) => {\n            const o: Option = new Option(option.value, option.label);\n            if (option.disabled) {\n                o.disable();\n            }\n            return o;\n        });\n\n        this.highlight();\n    }\n\n    /** Options. **/\n\n    get options(): Array<Option> {\n        return this._options;\n    }\n\n    getOptionsByValue(value: string): Array<Option> {\n        return this.options.filter((option) => {\n            return option.value === value;\n        });\n    }\n\n    /** Value. **/\n\n    get value(): Array<string> {\n        return this.selection.map((selectedOption) => {\n            return selectedOption.value;\n        });\n    }\n\n    set value(v: Array<string>) {\n        v = typeof v === 'undefined' || v === null ? [] : v;\n\n        this.options.forEach((option) => {\n            option.selected = v.indexOf(option.value) > -1;\n        });\n    }\n\n    /** Selection. **/\n\n    get selection(): Array<Option> {\n        return this.options.filter((option) => {\n            return option.selected;\n        });\n    }\n\n    select(option: Option, multiple: boolean) {\n        if (!multiple) {\n            this.clearSelection();\n        }\n        option.selected = true;\n    }\n\n    deselect(option: Option) {\n        option.selected = false;\n    }\n\n    clearSelection() {\n        this.options.forEach((option) => {\n            option.selected = false;\n        });\n    }\n\n    /** Filter. **/\n\n    get filtered(): Array<Option> {\n        return this.options.filter((option) => {\n            return option.shown;\n        });\n    }\n\n    filter(term: string) {\n\n        if (term.trim() === '') {\n            this.resetFilter();\n        } else {\n            this.options.forEach((option) => {\n                const l: string = Diacritics.strip(option.label).toUpperCase();\n                const t: string = Diacritics.strip(term).toUpperCase();\n                option.shown = l.indexOf(t) > -1;\n            });\n        }\n\n        this.highlight();\n    }\n\n    resetFilter() {\n        this.options.forEach((option) => {\n            option.shown = true;\n        });\n    }\n\n    /** Highlight. **/\n\n    get highlightedOption(): Option {\n        return this._highlightedOption;\n    }\n\n    highlight() {\n        const option: Option = this.hasShownSelected() ?\n            this.getFirstShownSelected() : this.getFirstShown();\n        this.highlightOption(option);\n    }\n\n    highlightOption(option: Option) {\n        this.clearHighlightedOption();\n\n        if (option !== null) {\n            option.highlighted = true;\n            this._highlightedOption = option;\n        }\n    }\n\n    highlightNextOption() {\n        const shownOptions = this.filtered;\n        const index = this.getHighlightedIndexFromList(shownOptions);\n\n        if (index > -1 && index < shownOptions.length - 1) {\n            this.highlightOption(shownOptions[index + 1]);\n        }\n    }\n\n    highlightPreviousOption() {\n        const shownOptions = this.filtered;\n        const index = this.getHighlightedIndexFromList(shownOptions);\n\n        if (index > 0) {\n            this.highlightOption(shownOptions[index - 1]);\n        }\n    }\n\n    private clearHighlightedOption() {\n        if (this.highlightedOption !== null) {\n            this.highlightedOption.highlighted = false;\n            this._highlightedOption = null;\n        }\n    }\n\n    private getHighlightedIndexFromList(options: Array<Option>) {\n        for (let i = 0; i < options.length; i++) {\n            if (options[i].highlighted) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    getHighlightedIndex() {\n        return this.getHighlightedIndexFromList(this.filtered);\n    }\n\n    /** Util. **/\n\n    hasShown() {\n        return this.options.some((option) => {\n            return option.shown;\n        });\n    }\n\n    hasSelected() {\n        return this.options.some((option) => {\n            return option.selected;\n        });\n    }\n\n    hasShownSelected() {\n        return this.options.some((option) => {\n            return option.shown && option.selected;\n        });\n    }\n\n    private getFirstShown(): Option {\n        for (const option of this.options) {\n            if (option.shown) {\n                return option;\n            }\n        }\n        return null;\n    }\n\n    private getFirstShownSelected(): Option {\n        for (const option of this.options) {\n            if (option.shown && option.selected) {\n                return option;\n            }\n        }\n        return null;\n    }\n\n\n}\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    Input,\r\n    OnChanges,\r\n    OnInit,\r\n    Output,\r\n    EventEmitter,\r\n    ExistingProvider,\r\n    ViewChild,\r\n    ViewEncapsulation,\r\n    forwardRef\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { STYLE } from './select.component.style';\r\nimport { SelectDropdownComponent } from './select-dropdown.component';\r\nimport { Option } from './option';\r\nimport { OptionList } from './option-list';\r\n\r\nexport const SELECT_VALUE_ACCESSOR: ExistingProvider = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => SelectComponent),\r\n    multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'ng-select',\r\n    template: `<div\n    #selection\n    [attr.tabindex]=\"disabled ? null : 0\"\n    [ngClass]=\"{'open': isOpen, 'focus': hasFocus, 'below': isBelow, 'disabled': disabled}\"\n    (click)=\"onSelectContainerClick($event)\"\n    (focus)=\"onSelectContainerFocus()\"\n    (keydown)=\"onSelectContainerKeydown($event)\"\n    (window:click)=\"onWindowClick()\"\n    (window:resize)=\"onWindowResize()\">\n\n    <div class=\"single\"\n        *ngIf=\"!multiple\">\n        <div class=\"value\"\n            *ngIf=\"optionList.hasSelected()\">\n            {{optionList.selection[0].label}}\n        </div>\n        <div class=\"placeholder\"\n            *ngIf=\"!optionList.hasSelected()\">\n            {{placeholderView}}\n        </div>\n        <div class=\"clear\"\n            *ngIf=\"allowClear\"\n            (click)=\"onClearSelectionClick($event)\">\n            &#x2715;\n        </div>\n        <div class=\"toggle\"\n            *ngIf=\"isOpen\">\n            &#x25B2;\n        </div>\n        <div class=\"toggle\"\n            *ngIf=\"!isOpen\">\n            &#x25BC;\n        </div>\n    </div>\n\n    <div class=\"multiple\"\n        *ngIf=\"multiple\">\n        <div class=\"option\"\n            *ngFor=\"let option of optionList.selection\">\n            <span class=\"deselect-option\"\n                (click)=onDeselectOptionClick(option)>\n                &#x2715;\n            </span>\n            {{option.label}}\n        </div>\n        <input\n            *ngIf=\"filterEnabled\"\n            #filterInput\n            tabindex=\"-1\"\n            [placeholder]=\"placeholderView\"\n            [ngStyle]=\"{'width.px': filterInputWidth}\"\n            (input)=\"onMultipleFilterInput($event)\"\n            (keydown)=\"onMultipleFilterKeydown($event)\"/>\n    </div>\n\n</div>\n<select-dropdown\n    *ngIf=\"isOpen\"\n    #dropdown\n    [multiple]=\"multiple\"\n    [optionList]=\"optionList\"\n    [notFoundMsg]=\"notFoundMsg\"\n    [highlightColor]=\"highlightColor\"\n    [highlightTextColor]=\"highlightTextColor\"\n    [filterEnabled]=\"filterEnabled\"\n    [width]=\"width\"\n    [top]=\"top\"\n    [left]=\"left\"\n    (close)=\"onDropdownClose($event)\"\n    (optionClicked)=\"onDropdownOptionClicked($event)\"\n    (singleFilterClick)=\"onSingleFilterClick()\"\n    (singleFilterInput)=\"onSingleFilterInput($event)\"\n    (singleFilterKeydown)=\"onSingleFilterKeydown($event)\">\n</select-dropdown>\n`,\r\n    styles: [STYLE],\r\n    providers: [SELECT_VALUE_ACCESSOR],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class SelectComponent\r\n    implements AfterViewInit, ControlValueAccessor, OnChanges, OnInit {\r\n    /** Keys. **/\r\n\r\n    private KEYS: any = {\r\n        BACKSPACE: 8,\r\n        TAB: 9,\r\n        ENTER: 13,\r\n        ESC: 27,\r\n        SPACE: 32,\r\n        UP: 38,\r\n        DOWN: 40\r\n    };\r\n\r\n    @Input() options: Array<any>;\r\n\r\n    @Input() allowClear = false;\r\n    @Input() disabled = false;\r\n    @Input() highlightColor = '#2196f3';\r\n    @Input() highlightTextColor = '#fff';\r\n    @Input() multiple = false;\r\n    @Input() noFilter = 0;\r\n    @Input() notFoundMsg = 'No results found';\r\n    @Input() placeholder = '';\r\n\r\n    @Output() opened: EventEmitter<null> = new EventEmitter<null>();\r\n    @Output() closed: EventEmitter<null> = new EventEmitter<null>();\r\n    @Output() selected: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() deselected: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() typed: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n\r\n    @ViewChild('selection') selectionSpan: any;\r\n    @ViewChild('dropdown') dropdown: SelectDropdownComponent;\r\n    @ViewChild('filterInput') filterInput: any;\r\n\r\n    private _value: Array<any> = [];\r\n    optionList: OptionList;\r\n\r\n    // Selection state variables.\r\n    hasSelected = false;\r\n\r\n    // View state variables.\r\n    filterEnabled = true;\r\n    filterInputWidth = 1;\r\n    hasFocus = false;\r\n    isBelow = true;\r\n    isDisabled = false;\r\n    isOpen = false;\r\n    placeholderView = '';\r\n\r\n    clearClicked = false;\r\n    selectContainerClicked = false;\r\n\r\n    // Width and position for the dropdown container.\r\n    width: number;\r\n    top: number;\r\n    left: number;\r\n\r\n    private onChange = (_: any) => { };\r\n    private onTouched = () => { };\r\n\r\n    /** Event handlers. **/\r\n\r\n    // Angular lifecycle hooks.\r\n\r\n    ngOnInit() {\r\n        this.placeholderView = this.placeholder;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.updateFilterWidth();\r\n    }\r\n\r\n    ngOnChanges(changes: any) {\r\n        if (changes.hasOwnProperty('options')) {\r\n            this.updateOptionsList(changes['options'].isFirstChange());\r\n        }\r\n        if (changes.hasOwnProperty('noFilter')) {\r\n            const numOptions: number = this.optionList.options.length;\r\n            const minNumOptions: number = changes['noFilter'].currentValue;\r\n            this.filterEnabled = numOptions >= minNumOptions;\r\n        }\r\n    }\r\n\r\n    // Window.\r\n\r\n    onWindowClick() {\r\n        if (!this.selectContainerClicked) {\r\n            this.closeDropdown();\r\n        }\r\n        this.clearClicked = false;\r\n        this.selectContainerClicked = false;\r\n    }\r\n\r\n    onWindowResize() {\r\n        this.updateWidth();\r\n    }\r\n\r\n    // Select container.\r\n\r\n    onSelectContainerClick(event: any) {\r\n        this.selectContainerClicked = true;\r\n        if (!this.clearClicked) {\r\n            this.toggleDropdown();\r\n        }\r\n    }\r\n\r\n    onSelectContainerFocus() {\r\n        this.onTouched();\r\n    }\r\n\r\n    onSelectContainerKeydown(event: any) {\r\n        this.handleSelectContainerKeydown(event);\r\n    }\r\n\r\n    // Dropdown container.\r\n\r\n    onDropdownOptionClicked(option: Option) {\r\n        this.multiple ?\r\n            this.toggleSelectOption(option) : this.selectOption(option);\r\n    }\r\n\r\n    onDropdownClose(focus: any) {\r\n        this.closeDropdown(focus);\r\n    }\r\n\r\n    // Single filter input.\r\n\r\n    onSingleFilterClick() {\r\n        this.selectContainerClicked = true;\r\n    }\r\n\r\n    onSingleFilterInput(term: string) {\r\n        setTimeout(() => {\r\n            if (term.length > 2) {\r\n                this.typed.emit(term);\r\n            }\r\n        }, 500);\r\n        this.optionList.filter(term);\r\n    }\r\n\r\n    onSingleFilterKeydown(event: any) {\r\n        this.handleSingleFilterKeydown(event);\r\n    }\r\n\r\n    // Multiple filter input.\r\n\r\n    onMultipleFilterInput(event: any) {\r\n        if (!this.isOpen) {\r\n            this.openDropdown();\r\n        }\r\n        this.updateFilterWidth();\r\n        setTimeout(() => {\r\n            this.optionList.filter(event.target.value);\r\n        });\r\n    }\r\n\r\n    onMultipleFilterKeydown(event: any) {\r\n        this.handleMultipleFilterKeydown(event);\r\n    }\r\n\r\n    // Single clear select.\r\n\r\n    onClearSelectionClick(event: any) {\r\n        this.clearClicked = true;\r\n        this.clearSelection();\r\n        this.closeDropdown(true);\r\n    }\r\n\r\n    // Multiple deselect option.\r\n\r\n    onDeselectOptionClick(option: Option) {\r\n        this.clearClicked = true;\r\n        this.deselectOption(option);\r\n    }\r\n\r\n    /** API. **/\r\n\r\n    // TODO fix issues with global click/key handler that closes the dropdown.\r\n    open() {\r\n        this.openDropdown();\r\n    }\r\n\r\n    close() {\r\n        this.closeDropdown();\r\n    }\r\n\r\n    clear() {\r\n        this.clearSelection();\r\n    }\r\n\r\n    select(value: string) {\r\n        this.optionList.getOptionsByValue(value).forEach((option) => {\r\n            this.selectOption(option);\r\n        });\r\n        this.valueChanged();\r\n    }\r\n\r\n    /** ControlValueAccessor interface methods. **/\r\n\r\n    writeValue(value: any) {\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnChange(fn: (_: any) => void) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: () => void) {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean) {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    /** Value. **/\r\n\r\n    get value(): any {\r\n        if (this._value.length === 0) {\r\n            return '';\r\n        } else {\r\n            return this.multiple ? this._value : this._value[0];\r\n        }\r\n    }\r\n\r\n    set value(v: any) {\r\n        if (typeof v === 'undefined' || v === null || v === '') {\r\n            v = [];\r\n        } else if (typeof v === 'string') {\r\n            v = [v];\r\n        } else if (!Array.isArray(v)) {\r\n            throw new TypeError('Value must be a string or an array.');\r\n        }\r\n\r\n        if (!OptionList.equalValues(v, this._value)) {\r\n            this.optionList.value = v;\r\n            this.valueChanged();\r\n        }\r\n    }\r\n\r\n    private valueChanged() {\r\n        this._value = this.optionList.value;\r\n\r\n        this.hasSelected = this._value.length > 0;\r\n        this.placeholderView = this.hasSelected ? '' : this.placeholder;\r\n        this.updateFilterWidth();\r\n\r\n        this.onChange(this.value);\r\n    }\r\n\r\n    /** Initialization. **/\r\n\r\n    private updateOptionsList(firstTime: boolean) {\r\n        let v: Array<string>;\r\n\r\n        if (!firstTime) {\r\n            v = this.optionList.value;\r\n        }\r\n\r\n        this.optionList = new OptionList(this.options);\r\n\r\n        if (!firstTime) {\r\n            this.optionList.value = v;\r\n            this.valueChanged();\r\n        }\r\n    }\r\n\r\n    /** Dropdown. **/\r\n\r\n    private toggleDropdown() {\r\n        if (!this.isDisabled) {\r\n            this.isOpen ? this.closeDropdown(true) : this.openDropdown();\r\n        }\r\n    }\r\n\r\n    private openDropdown() {\r\n        if (!this.isOpen) {\r\n            this.updateWidth();\r\n            this.updatePosition();\r\n            this.isOpen = true;\r\n            if (this.multiple && this.filterEnabled) {\r\n                this.filterInput.nativeElement.focus();\r\n            }\r\n            this.opened.emit(null);\r\n        }\r\n    }\r\n    /* tslint:disable */\r\n    private closeDropdown(focus: boolean = false) {\r\n        if (this.isOpen) {\r\n            this.clearFilterInput();\r\n            this.isOpen = false;\r\n            if (focus) {\r\n                this.focus();\r\n            }\r\n            this.closed.emit(null);\r\n        }\r\n    }\r\n    /* tslint:enable */\r\n    /** Select. **/\r\n\r\n    private selectOption(option: Option) {\r\n        if (!option.selected) {\r\n            this.optionList.select(option, this.multiple);\r\n            this.valueChanged();\r\n            this.selected.emit(option.undecoratedCopy());\r\n            // Is this not allready done when setting the value??\r\n            /*setTimeout(() => {\r\n                if (this.multiple) {\r\n                    this.updateFilterWidth();\r\n                }\r\n            });*/\r\n        }\r\n    }\r\n\r\n    private deselectOption(option: Option) {\r\n        if (option.selected) {\r\n            this.optionList.deselect(option);\r\n            this.valueChanged();\r\n            this.deselected.emit(option.undecoratedCopy());\r\n            setTimeout(() => {\r\n                if (this.multiple) {\r\n                    // this.updateFilterWidth();\r\n                    this.updatePosition();\r\n                    this.optionList.highlight();\r\n                    if (this.isOpen) {\r\n                        this.dropdown.moveHighlightedIntoView();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private clearSelection() {\r\n        const selection: Array<Option> = this.optionList.selection;\r\n        if (selection.length > 0) {\r\n            this.optionList.clearSelection();\r\n            this.valueChanged();\r\n\r\n            if (selection.length === 1) {\r\n                this.deselected.emit(selection[0].undecoratedCopy());\r\n            } else {\r\n                this.deselected.emit(selection.map((option) => {\r\n                    return option.undecoratedCopy();\r\n                }));\r\n            }\r\n        }\r\n    }\r\n\r\n    private toggleSelectOption(option: Option) {\r\n        option.selected ?\r\n            this.deselectOption(option) : this.selectOption(option);\r\n    }\r\n\r\n    private selectHighlightedOption() {\r\n        const option: Option = this.optionList.highlightedOption;\r\n        if (option !== null) {\r\n            this.selectOption(option);\r\n            this.closeDropdown(true);\r\n        }\r\n    }\r\n\r\n    private deselectLast() {\r\n        const sel: Array<Option> = this.optionList.selection;\r\n\r\n        if (sel.length > 0) {\r\n            const option: Option = sel[sel.length - 1];\r\n            this.deselectOption(option);\r\n            this.setMultipleFilterInput(option.label + ' ');\r\n        }\r\n    }\r\n\r\n    /** Filter. **/\r\n\r\n    private clearFilterInput() {\r\n        if (this.multiple && this.filterEnabled) {\r\n            this.filterInput.nativeElement.value = '';\r\n        } else {\r\n            this.dropdown.clearFilterInput();\r\n        }\r\n    }\r\n\r\n    private setMultipleFilterInput(value: string) {\r\n        if (this.filterEnabled) {\r\n            this.filterInput.nativeElement.value = value;\r\n        }\r\n    }\r\n\r\n\r\n    private handleSelectContainerKeydown(event: any) {\r\n        const key = event.which;\r\n\r\n        if (this.isOpen) {\r\n            if (key === this.KEYS.ESC ||\r\n                (key === this.KEYS.UP && event.altKey)) {\r\n                this.closeDropdown(true);\r\n            } else if (key === this.KEYS.TAB) {\r\n                this.closeDropdown();\r\n            } else if (key === this.KEYS.ENTER) {\r\n                this.selectHighlightedOption();\r\n            } else if (key === this.KEYS.UP) {\r\n                this.optionList.highlightPreviousOption();\r\n                this.dropdown.moveHighlightedIntoView();\r\n                if (!this.filterEnabled) {\r\n                    event.preventDefault();\r\n                }\r\n            } else if (key === this.KEYS.DOWN) {\r\n                this.optionList.highlightNextOption();\r\n                this.dropdown.moveHighlightedIntoView();\r\n                if (!this.filterEnabled) {\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n        } else {\r\n            if (key === this.KEYS.ENTER || key === this.KEYS.SPACE ||\r\n                (key === this.KEYS.DOWN && event.altKey)) {\r\n\r\n                /* FIREFOX HACK:\r\n                 *\r\n                 * The setTimeout is added to prevent the enter keydown event\r\n                 * to be triggered for the filter input field, which causes\r\n                 * the dropdown to be closed again.\r\n                 */\r\n                setTimeout(() => { this.openDropdown(); });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private handleMultipleFilterKeydown(event: any) {\r\n        const key = event.which;\r\n\r\n        if (key === this.KEYS.BACKSPACE) {\r\n            if (this.hasSelected && this.filterEnabled &&\r\n                this.filterInput.nativeElement.value === '') {\r\n                this.deselectLast();\r\n            }\r\n        }\r\n    }\r\n\r\n    private handleSingleFilterKeydown(event: any) {\r\n        const key = event.which;\r\n\r\n        if (key === this.KEYS.ESC || key === this.KEYS.TAB\r\n            || key === this.KEYS.UP || key === this.KEYS.DOWN\r\n            || key === this.KEYS.ENTER) {\r\n            this.handleSelectContainerKeydown(event);\r\n        }\r\n    }\r\n\r\n    /** View. **/\r\n\r\n    focus() {\r\n        this.hasFocus = true;\r\n        if (this.multiple && this.filterEnabled) {\r\n            this.filterInput.nativeElement.focus();\r\n        } else {\r\n            this.selectionSpan.nativeElement.focus();\r\n        }\r\n    }\r\n\r\n    blur() {\r\n        this.hasFocus = false;\r\n        this.selectionSpan.nativeElement.blur();\r\n    }\r\n\r\n    updateWidth() {\r\n        this.width = this.selectionSpan.nativeElement.offsetWidth;\r\n    }\r\n\r\n    updatePosition() {\r\n        const e = this.selectionSpan.nativeElement;\r\n        this.left = e.offsetLeft;\r\n        this.top = e.offsetTop + e.offsetHeight;\r\n    }\r\n\r\n    updateFilterWidth() {\r\n        if (typeof this.filterInput !== 'undefined') {\r\n            const value: string = this.filterInput.nativeElement.value;\r\n            this.filterInputWidth = value.length === 0 ?\r\n                1 + this.placeholderView.length * 10 : 1 + value.length * 10;\r\n        }\r\n    }\r\n}\r\n","export const STYLE = `select-dropdown {\n  box-sizing: border-box;\n  font-family: Sans-Serif;\n}\nselect-dropdown * {\n  box-sizing: border-box;\n  font-family: Sans-Serif;\n}\nselect-dropdown > div {\n  background-color: #fff;\n  border: 1px solid #ccc;\n  border-top: none;\n  box-sizing: border-box;\n  position: absolute;\n  z-index: 1;\n}\nselect-dropdown > div .filter {\n  padding: 3px;\n  width: 100%;\n}\nselect-dropdown > div .filter input {\n  border: 1px solid #eee;\n  box-sizing: border-box;\n  padding: 4px;\n  width: 100%;\n}\nselect-dropdown > div .options {\n  max-height: 200px;\n  overflow-y: auto;\n}\nselect-dropdown > div .options ul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\nselect-dropdown > div .options ul li {\n  padding: 4px 8px;\n  cursor: pointer;\n  user-select: none;\n}\nselect-dropdown .selected {\n  background-color: #e0e0e0;\n}\nselect-dropdown .selected.highlighted {\n  background-color: #2196F3;\n  color: #fff;\n}\nselect-dropdown .highlighted {\n  background-color: #2196F3;\n  color: #fff;\n}\nselect-dropdown .disabled {\n  background-color: #fff;\n  color: #9e9e9e;\n  cursor: default;\n  pointer-events: none;\n}`;\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    OnInit,\r\n    Output,\r\n    ViewChild,\r\n    ViewEncapsulation\r\n} from '@angular/core';\r\n\r\nimport { STYLE } from './select-dropdown.component.style';\r\nimport { Option } from './option';\r\nimport { OptionList } from './option-list';\r\n\r\n@Component({\r\n    selector: 'select-dropdown',\r\n    template: `<div\n    [ngStyle]=\"{'top.px': top, 'left.px': left, 'width.px': width}\">\n\n    <div class=\"filter\"\n        *ngIf=\"!multiple\">\n        <input\n            *ngIf=\"filterEnabled\"\n            #filterInput\n            (click)=\"onSingleFilterClick($event)\"\n            (input)=\"onSingleFilterInput($event)\"\n            (keydown)=\"onSingleFilterKeydown($event)\">\n    </div>\n\n    <div class=\"options\"\n        #optionsList>\n        <ul\n            (wheel)=\"onOptionsWheel($event)\">\n            <li *ngFor=\"let option of optionList.filtered\"\n                [ngClass]=\"{'highlighted': option.highlighted, 'selected': option.selected, 'disabled': option.disabled}\"\n                [ngStyle]=\"getOptionStyle(option)\"\n                (click)=\"onOptionClick(option)\"\n                (mouseover)=\"onOptionMouseover(option)\">\n                {{option.label}}\n            </li>\n            <li\n                *ngIf=\"!optionList.hasShown()\"\n                class=\"message\">\n                {{notFoundMsg}}\n            </li>\n        </ul>\n    </div>\n</div>\n`,\r\n    styles: [STYLE],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class SelectDropdownComponent\r\n    implements AfterViewInit, OnChanges, OnInit {\r\n\r\n    @Input() filterEnabled: boolean;\r\n    @Input() highlightColor: string;\r\n    @Input() highlightTextColor: string;\r\n    @Input() left: number;\r\n    @Input() multiple: boolean;\r\n    @Input() notFoundMsg: string;\r\n    @Input() optionList: OptionList;\r\n    @Input() top: number;\r\n    @Input() width: number;\r\n\r\n    @Output() close = new EventEmitter<boolean>();\r\n    @Output() optionClicked = new EventEmitter<Option>();\r\n    @Output() singleFilterClick = new EventEmitter<null>();\r\n    @Output() singleFilterInput = new EventEmitter<string>();\r\n    @Output() singleFilterKeydown = new EventEmitter<any>();\r\n\r\n    @ViewChild('filterInput') filterInput: any;\r\n    @ViewChild('optionsList') optionsList: any;\r\n\r\n    disabledColor = '#fff';\r\n    disabledTextColor = '9e9e9e';\r\n\r\n    /** Event handlers. **/\r\n\r\n    // Angular life cycle hooks.\r\n\r\n    ngOnInit() {\r\n        this.optionsReset();\r\n    }\r\n\r\n    ngOnChanges(changes: any) {\r\n        if (changes.hasOwnProperty('optionList')) {\r\n            this.optionsReset();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.moveHighlightedIntoView();\r\n        if (!this.multiple && this.filterEnabled) {\r\n            this.filterInput.nativeElement.focus();\r\n        }\r\n    }\r\n\r\n    // Filter input (single select).\r\n\r\n    onSingleFilterClick(event: any) {\r\n        this.singleFilterClick.emit(null);\r\n    }\r\n\r\n    onSingleFilterInput(event: any) {\r\n        this.singleFilterInput.emit(event.target.value);\r\n    }\r\n\r\n    onSingleFilterKeydown(event: any) {\r\n        this.singleFilterKeydown.emit(event);\r\n    }\r\n\r\n    // Options list.\r\n\r\n    onOptionsWheel(event: any) {\r\n        this.handleOptionsWheel(event);\r\n    }\r\n\r\n    onOptionMouseover(option: Option) {\r\n        this.optionList.highlightOption(option);\r\n    }\r\n\r\n    onOptionClick(option: Option) {\r\n        this.optionClicked.emit(option);\r\n    }\r\n\r\n    /** Initialization. **/\r\n\r\n    private optionsReset() {\r\n        this.optionList.resetFilter();\r\n        this.optionList.highlight();\r\n    }\r\n\r\n    /** View. **/\r\n\r\n    getOptionStyle(option: Option): any {\r\n        if (option.highlighted) {\r\n            return {\r\n                'background-color': this.highlightColor,\r\n                'color': this.highlightTextColor\r\n            };\r\n        } else {\r\n            return {};\r\n        }\r\n    }\r\n\r\n    clearFilterInput() {\r\n        if (this.filterEnabled) {\r\n            this.filterInput.nativeElement.value = '';\r\n        }\r\n    }\r\n\r\n    moveHighlightedIntoView() {\r\n\r\n        const list = this.optionsList.nativeElement;\r\n        const listHeight = list.offsetHeight;\r\n\r\n        const itemIndex = this.optionList.getHighlightedIndex();\r\n\r\n        if (itemIndex > -1) {\r\n            const item = list.children[0].children[itemIndex];\r\n            const itemHeight = item.offsetHeight;\r\n\r\n            const itemTop = itemIndex * itemHeight;\r\n            const itemBottom = itemTop + itemHeight;\r\n\r\n            const viewTop = list.scrollTop;\r\n            const viewBottom = viewTop + listHeight;\r\n\r\n            if (itemBottom > viewBottom) {\r\n                list.scrollTop = itemBottom - listHeight;\r\n            } else if (itemTop < viewTop) {\r\n                list.scrollTop = itemTop;\r\n            }\r\n        }\r\n    }\r\n\r\n    private handleOptionsWheel(e: any) {\r\n        const div = this.optionsList.nativeElement;\r\n        const atTop = div.scrollTop === 0;\r\n        const atBottom = div.offsetHeight + div.scrollTop === div.scrollHeight;\r\n\r\n        if (atTop && e.deltaY < 0) {\r\n            e.preventDefault();\r\n        } else if (atBottom && e.deltaY > 0) {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {SelectComponent} from './select.component';\nimport {SelectDropdownComponent} from './select-dropdown.component';\n\n@NgModule({\n    declarations: [\n        SelectComponent,\n        SelectDropdownComponent\n    ],\n    exports: [\n        SelectComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule\n    ]\n})\nexport class SelectModule {}\n","\nimport {\n    Pipe,\n    PipeTransform,\n    OnDestroy,\n    WrappedValue,\n    ChangeDetectorRef\n} from '@angular/core';\nimport { of } from 'rxjs';\n\nimport { Subscription } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\n\n\nimport { DomSanitizer} from '@angular/platform-browser';\n// import { FileUploadResourceService } from '../../etl-api/file-upload-resource.service';\n\n// Using similarity from AsyncPipe to avoid having to pipe |secure|async in HTML.\n// tslint:disable-next-line:use-pipe-transform-interface\n@Pipe({\n    name: 'secure',\n    pure: false\n})\nexport class SecurePipe implements PipeTransform, OnDestroy {\n    private _latestValue: any = null;\n    private _latestReturnedValue: any = null;\n    private _subscription: Subscription = null;\n    private _obj: Observable<any> = null;\n    private getfile;\n    private previousUrl: string;\n    private _result: BehaviorSubject<any> = new BehaviorSubject(null);\n    private result: Observable<any> = this._result.asObservable();\n    private _internalSubscription: Subscription = null;\n\n    constructor(\n        private _ref: ChangeDetectorRef,\n        private sanitizer: DomSanitizer\n    ) { }\n\n    ngOnDestroy(): void {\n        if (this._subscription) {\n            this._dispose();\n        }\n    }\n\n    transform(url: string, getfile): any {\n        this.getfile = getfile;\n        const obj = this.internalTransform(url);\n        return this.asyncTrasnform(obj);\n    }\n\n    private internalTransform(url: string): Observable<any> {\n        if (!url) {\n            return this.result;\n        }\n\n        if (this.previousUrl !== url) {\n            this.previousUrl = url;\n            this._internalSubscription = this.getfile(url)\n                .subscribe(m => {\n                    const sanitized = this.sanitizer.bypassSecurityTrustUrl(m);\n                    this._result.next(sanitized);\n                });\n        }\n\n        return this.result;\n    }\n\n    private asyncTrasnform(obj: Observable<any>): any {\n        if (!this._obj) {\n            if (obj) {\n                this._subscribe(obj);\n            }\n            this._latestReturnedValue = this._latestValue;\n            return this._latestValue;\n        }\n        if (obj !== this._obj) {\n            this._dispose();\n            return this.asyncTrasnform(obj);\n        }\n        if (this._latestValue === this._latestReturnedValue) {\n            return this._latestReturnedValue;\n        }\n        this._latestReturnedValue = this._latestValue;\n        return WrappedValue.wrap(this._latestValue);\n    }\n\n    private _subscribe(obj: Observable<any>) {\n        const _this = this;\n        this._obj = obj;\n\n        this._subscription = obj.subscribe({\n            next: function (value) {\n                return _this._updateLatestValue(obj, value);\n            }, error: (e: any) => { throw e; }\n        });\n    }\n\n    private _dispose() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n        if (this._internalSubscription) {\n            this._internalSubscription.unsubscribe();\n        }\n\n        this._internalSubscription = null;\n        this._latestValue = null;\n        this._latestReturnedValue = null;\n        this._subscription = null;\n        this._obj = null;\n    }\n\n    private _updateLatestValue(async: any, value: Object) {\n        if (async === this._obj) {\n            this._latestValue = value;\n            this._ref.markForCheck();\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SecurePipe } from './components/file-upload/secure.pipe';\nimport { DataSources } from './form-entry/data-sources/data-sources';\n@NgModule({\n    declarations: [\n        SecurePipe\n    ],\n    imports: [ CommonModule ],\n    exports: [\n        SecurePipe\n    ],\n    providers: [\n        DataSources\n    ],\n})\nexport class SharedModule {}\n","import { Component, OnInit, Input, forwardRef, Renderer2 } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\n@Component({\n    selector: 'remote-file-upload',\n    template: `<div>\n    <file-uploader [(ngModel)]=\"innerValue\" (onClear)=\"clearValue()\" (fileChanged)=\"upload($event)\">\n    </file-uploader>\n    <img *ngIf=\"innerValue\" class=\"img-responsive\" [src]=\"innerValue | secure:this.dataSource.fetchFile\" alt=\"\" />\n</div>`,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => RemoteFileUploadComponent),\n            multi: true,\n        }],\n    styles: [`img {\n        margin-left: auto;margin-right: auto;display: block;\n    }`\n    ]\n})\nexport class RemoteFileUploadComponent implements OnInit, ControlValueAccessor {\n    uploading = false;\n    innerValue = null;\n    private _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n    }\n\n\n    constructor(private renderer: Renderer2) { }\n\n    ngOnInit() {\n\n    }\n    upload(data) {\n        if (this.dataSource) {\n            this.uploading = true;\n            this.dataSource.fileUpload(data).subscribe((result) => {\n                // console.log('Result', result);\n                this.innerValue = result.image;\n                this.propagateChange(this.innerValue);\n                this.uploading = false;\n            }, (error) => {\n                this.uploading = false;\n            });\n        }\n    }\n\n    // this is the initial value set to the component\n    public writeValue(value: any) {\n        if (value !== this.innerValue) {\n            this.innerValue = value;\n        }\n    }\n    // registers 'fn' that will be fired when changes are made\n    // this is how we emit the changes back to the form\n    public registerOnChange(fn: any) {\n        this.propagateChange = fn;\n    }\n\n    // not used, used for touch input\n    public registerOnTouched() { }\n    // change events from the textarea\n    onChange(event) {\n        this.propagateChange(event.id);\n        // .....\n        // update the form\n        // this.propagateChange(this.data);\n    }\n\n\n    // the method set in registerOnChange, it is just\n    // a placeholder for a method that takes one parameter,\n    // we use it to emit changes back to the form\n    private propagateChange = (_: any) => { };\n\n    public clearValue() {\n        this.innerValue = null;\n        this.propagateChange(this.innerValue);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\nimport { FileUploaderModule } from 'ngx-file-uploader';\nimport { SharedModule } from '../../shared.module';\n// import { SelectModule } from 'ng2-select/ng2-select';\nimport { SelectModule } from '../../components/select/select.module';\nimport { RemoteFileUploadComponent } from './file-upload.component';\n\n@NgModule({\n    imports: [CommonModule, SelectModule, FormsModule, FileUploaderModule, SharedModule],\n    exports: [RemoteFileUploadComponent],\n    declarations: [RemoteFileUploadComponent],\n    providers: [],\n})\nexport class RemoteFileUploadModule { }\n","/**\n * date-picker.component\n */\n\nimport { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\nimport * as _ from 'lodash';\nimport { Moment } from 'moment/moment';\n\n// webpack1_\ndeclare let require: any;\n// const myDpStyles: string = require('./date-picker.component.css');\n// const myDpTpl: string = require('./date-picker.component.html');\n// webpack2_\n\n@Component({\n  selector: 'date-picker',\n  template: `<picker-modal (onOverlayClick)=\"cancelDatePicker()\">\n  <div class=\"picker-wrap\">\n    <div class=\"picker-box\">\n      <div class=\"picker-header\">\n        <div class=\"picker-header-nav\">\n          <span class=\"nav-prev\" (click)=\"prev()\"></span>\n        </div>\n        <div class=\"picker-header-content\">\n          <div class=\"content\">\n            <span (click)=\"showMonthSelection()\" class=\"month\">{{calendarDate | moment: \"MMMM\"}}</span>\n            <span class=\"seperator\">|</span>\n            <span (click)=\"showYearSelection()\" class=\"year\">{{calendarDate | moment: \"YYYY\"}}</span>\n          </div>\n        </div>\n        <div class=\"picker-header-nav\">\n          <span class=\"nav-next\" (click)=\"next()\"></span>\n        </div>\n      </div>\n      <div class=\"picker-calendar\">\n        <div class=\"picker-calendar-row\" *ngIf=\"!onDisplayMonths && !onDisplayYears\">\n          <span class=\"picker-weekday\" *ngFor=\"let day of dayNames\">{{ day }}</span>\n        </div>\n        <div class=\"picker-calendar-row\" *ngIf=\"!onDisplayMonths && !onDisplayYears\">\n                    <span class=\"picker-day\" (click)=\"selectDay(day)\" [ngClass]=\"{\n                       'out-focus': day.month() != calendarDate.month(),\n                       'today': day.isSame(today),\n                       'selected': day.isSame(selectedDate)\n                      }\" *ngFor=\"let day of calendarDays\">\n                    {{ day | moment: 'D'}}\n                </span>\n        </div>\n        <div class=\"picker-calendar-row\" *ngIf=\"onDisplayMonths\">\n                    <span class=\"picker-month\" *ngFor=\"let month of monthsShort\"\n                          (click)=\"selectMonth(month)\"\n                          [ngClass]=\"{\n                       'selected': month === currentMonth\n                      }\">\n                    {{ month }}\n                </span>\n        </div>\n        <div class=\"picker-calendar-row\" *ngIf=\"onDisplayYears\">\n                    <span class=\"picker-year\" *ngFor=\"let year of displayYearRange\"\n                          (click)=\"selectYear(year)\"\n                          [ngClass]=\"{\n                       'selected': year === currentYear\n                      }\">\n                    {{ year }}\n                </span>\n        </div>\n      </div>\n      <div class=\"picker-footer\">\n        <div class=\"picker-action action-today\" (click)=\"selectToday()\"><span class=\"text\">Today</span></div>\n        <div class=\"picker-action action-clear\" (click)=\"clearPickDate()\"><span class=\"text\">Clear</span></div>\n        <div class=\"picker-action action-close\" (click)=\"cancelDatePicker()\"><span class=\"text\">Close</span></div>\n      </div>\n    </div>\n  </div>\n</picker-modal>\n`,\n  styles: [`*,::after,::before{box-sizing:border-box}.picker-wrap{width:95vw;max-width:666px}.picker-box{font-family:'Open Sans';min-width:400px!important;padding:.625rem 1rem;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.picker-footer,.picker-header{font-size:1.333rem;line-height:2.5rem;display:flex;height:2.5rem;width:100%}.picker-header-nav{position:relative;cursor:pointer;width:calc(100% / 8)}.picker-header-nav>*{position:absolute;top:50%;right:auto;bottom:auto;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.picker-header-nav .nav-next::before,.picker-header-nav .nav-prev::before{content:\" \";border-top:.5em solid transparent;border-bottom:.5em solid transparent;border-right:.75em solid #000;width:0;height:0;display:block;margin:0 auto}.picker-header-nav .nav-next::before{border-right:0;border-left:.75em solid #000}.picker-header-content{width:calc(100% * 6 / 8);text-align:center}.picker-header-content .month{font-size:1.778rem;line-height:2.5rem;margin-right:.5rem;font-weight:700}.picker-header-content .year{font-style:italic;color:#999}.picker-calendar{width:100%}.picker-calendar .picker-calendar-row{display:flex;flex-wrap:wrap;width:100%;margin-bottom:.625rem}.picker-calendar .picker-weekday{font-weight:700;text-align:left;color:#999;width:calc(100% / 7)}.picker-calendar .picker-day,.picker-calendar .picker-month,.picker-calendar .picker-year{font-size:1.333rem;line-height:2.5rem;position:relative;height:2.5rem;text-align:center;cursor:pointer;width:calc(100% / 7)}.picker-calendar .picker-day:hover,.picker-calendar .picker-month:hover,.picker-calendar .picker-year:hover{background:#b1dcfb}.picker-calendar .out-focus{color:#ddd}.picker-calendar .out-focus:hover{color:#000}.picker-calendar .selected{background:#0089ec;color:#fff}.picker-calendar .selected:hover{background:#0089ec}.picker-calendar .today::before{content:\" \";position:absolute;top:2px;right:2px;width:0;height:0;border-top:.5em solid #0059bc;border-left:.5em solid transparent}.picker-footer{cursor:pointer}.picker-footer .picker-action{text-align:center;width:calc(100% / 3)}.picker-footer .picker-action:hover{background-color:#b1dcfb}.picker-footer .picker-action .text{padding-left:.8rem}.picker-footer .action-clear::before,.picker-footer .action-close::before,.picker-footer .action-today::before{content:\" \";position:relative;display:inline-block;height:0;width:0}.picker-footer .action-today::before{border-top:.66em solid #0059bc;border-left:.66em solid transparent}.picker-footer .action-clear::before{top:-.5rem;width:1rem;border-top:3px solid #e20}.picker-footer .action-close::before{width:1rem;height:1rem;background:linear-gradient(to bottom,transparent 35%,#777 35%,#777 65%,transparent 65%),linear-gradient(to right,transparent 35%,#777 35%,#777 65%,transparent 65%);-webkit-transform:rotate(45deg);transform:rotate(45deg)}`],\n})\n\nexport class DatePickerComponent implements OnInit {\n\n  public dayNames: Array<string>;\n\n  @Input() public initDate: any;\n  @Input() public locale = 'en';\n  @Input() public viewFormat = 'll';\n  @Input() public returnObject = 'js';\n  @Output() public onDatePickerCancel = new EventEmitter<boolean>();\n  @Output() public onSelectDate = new EventEmitter<any>();\n\n  public calendarDate: Moment;\n  public selectedDate: Moment;\n  public currentMonth: any ;\n  public today: Moment;\n  public currentYear: number;\n  public onDisplayMonths = false;\n  public onDisplayYears = false;\n  public displayYearsIndex = 0;\n  public displayYearRange: Array<number>;\n  public fullYearRange: Array<any>;\n  public monthsShort: Array<string> = moment.monthsShort();\n  public calendarDays: Array<Moment>;\n\n  constructor() {\n  }\n\n  public ngOnInit(): void {\n    this.initValue();\n    // default to current year range\n    _.each(this.fullYearRange, (v, i) => {\n      this.currentYear = this.calendarDate.clone().startOf('year').year();\n      if (v.indexOf(this.currentYear) !== -1) {\n        this.displayYearsIndex = i;\n      }\n    });\n    this.displayYearRange = this.fullYearRange[this.displayYearsIndex];\n    this.generateCalendar();\n  }\n\n  public prev(): void {\n    if (this.onDisplayYears) {\n      this.displayYearsIndex--;\n      if (this.displayYearsIndex < 0) {\n        this.displayYearsIndex = 0;\n      }\n      this.displayYearRange = this.fullYearRange[this.displayYearsIndex];\n    } else {\n      this.calendarDate = this.calendarDate.clone().subtract(1, 'M');\n    }\n    this.generateCalendar();\n  }\n\n  public showMonthSelection(): void {\n    this.onDisplayMonths = true;\n    this.onDisplayYears = false;\n  }\n\n  public showYearSelection(): void {\n    this.onDisplayYears = true;\n    this.onDisplayMonths = false;\n  }\n\n  public next(): void {\n    if (this.onDisplayYears) {\n      this.displayYearsIndex++;\n      if (this.displayYearsIndex >= this.fullYearRange.length) {\n        this.displayYearsIndex = this.fullYearRange.length - 1;\n      }\n      this.displayYearRange = this.fullYearRange[this.displayYearsIndex++];\n    } else {\n      this.calendarDate = this.calendarDate.clone().add(1, 'M');\n    }\n    this.generateCalendar();\n  }\n\n  public selectDay(day: Moment): void {\n    const daysDifference = day.diff(this.calendarDate.clone().startOf('date'), 'days');\n    day = this.calendarDate.clone().add(daysDifference, 'd');\n    const selectedDay = this.parseToReturnObjectType(day);\n    this.onSelectDate.emit(selectedDay);\n    this.cancelDatePicker();\n    return;\n  }\n\n  public selectMonth(month: string) {\n    this.calendarDate = this.calendarDate.clone().month(month);\n    this.onDisplayMonths = false;\n    this.generateCalendar();\n  }\n\n  public selectYear(year: number) {\n    this.calendarDate = this.calendarDate.clone().year(year);\n    this.onDisplayYears = false;\n    this.generateCalendar();\n  }\n\n  public selectToday(): void {\n    const today = this.parseToReturnObjectType(moment());\n    this.onSelectDate.emit(today);\n    this.cancelDatePicker();\n    return;\n  }\n\n  public clearPickDate(): void {\n    this.onSelectDate.emit(null);\n    this.cancelDatePicker();\n    return;\n  }\n\n  public cancelDatePicker(): void {\n    this.onDatePickerCancel.emit(false);\n    return;\n  }\n\n  protected generateYears(): void {\n    const currentYear = moment().year();\n    const startYr = this.calendarDate.clone().subtract(100, 'y').year();\n    // const endYr = this.calendarDate.clone().add(10, 'y').year();\n    const years = [];\n    for (let year = startYr; year <= currentYear; year++) {\n      years.push(year);\n    }\n\n    this.fullYearRange = _.chunk(years, 14);\n  }\n\n  protected initValue() {\n\n    // set moment locale (default is en)\n    moment.locale(this.locale);\n    // set today value\n    this.today = moment().startOf('date');\n    this.currentMonth = this.monthsShort[moment().month()];\n    this.currentYear = moment().year();\n\n    // set week days name array\n    this.dayNames = moment.weekdaysShort(true);\n\n    // check if the input initDate has value\n    if (this.initDate) {\n      this.calendarDate = this.returnObject === 'string' ? moment(this.initDate, this.viewFormat) :\n        moment(this.initDate);\n      this.selectedDate = this.calendarDate.clone().startOf('date');\n    } else {\n      this.calendarDate = moment();\n    }\n    this.generateYears();\n  }\n\n  protected generateCalendar(): void {\n    this.calendarDays = [];\n    const start = 0 - (this.calendarDate.clone().startOf('month').day() +\n     (7 - moment.localeData().firstDayOfWeek())) % 7;\n    const end = 41 + start; // iterator ending point\n\n    for (let i = start; i <= end; i += 1) {\n      const day = this.calendarDate.clone().startOf('month').add(i, 'days');\n      this.calendarDays.push(day);\n    }\n  }\n\n  protected parseToReturnObjectType(day: Moment): any {\n    switch (this.returnObject) {\n      case 'js':\n        return day.toDate();\n\n      case 'string':\n        return day.format(this.viewFormat);\n\n      case 'moment':\n        return day;\n\n      case 'json':\n        return day.toJSON();\n\n      case 'array':\n        return day.toArray();\n\n      case 'iso':\n        return day.toISOString();\n\n      case 'object':\n        return day.toObject();\n\n      default:\n        return day;\n    }\n  }\n}\n","/**\n * time-picker.component\n */\n\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\nimport { Moment } from 'moment/moment';\n\n// webpack1_\ndeclare let require: any;\n// const myDpStyles: string = require('./time-picker.component.css');\n// const myDpTpl: string = require('./time-picker.component.html');\n// webpack2_\n\n@Component({\n    selector: 'time-picker',\n    template: `<picker-modal (onOverlayClick)=\"cancelTimePicker()\">\n    <div class=\"picker-wrap\">\n        <div class=\"picker-box\">\n            <div class=\"picker-header\">Time Picker</div>\n            <div class=\"picker-table\">\n                <ul class=\"picker-table-time\">\n                    <li class=\"picker-table-number hour\">\n                        <span class=\"arrow up\" (click)=\"increaseHour()\"></span>\n                        {{time | moment: hourFormat}}\n                        <span class=\"arrow down\" (click)=\"decreaseHour()\"></span>\n                    </li>\n                    <li class=\"picker-table-separator\">:</li>\n                    <li class=\"picker-table-number minute\">\n                        <span class=\"arrow up\" (click)=\"increaseMinute()\"></span>\n                        {{time | moment: 'mm'}}\n                        <span class=\"arrow down\" (click)=\"decreaseMinute()\"></span>\n                    </li>\n                    <li *ngIf=\"showSecond\" class=\"picker-table-separator\">:</li>\n                    <li *ngIf=\"showSecond\" class=\"picker-table-number second\">\n                        <span class=\"arrow up\" (click)=\"increaseSecond()\"></span>\n                        {{time | moment: 'ss'}}\n                        <span class=\"arrow down\" (click)=\"decreaseSecond()\"></span>\n                    </li>\n                    <li *ngIf=\"use12Hour\" class=\"picker-table-meridiem meridiem\">\n                        {{time | moment: 'A'}}\n                    </li>\n                </ul>\n            </div>\n            <div class=\"picker-footer\">\n                <div class=\"picker-action action-now\" (click)=\"selectNow()\"><span class=\"text\">Now</span></div>\n                <div class=\"picker-action action-confirm\" (click)=\"selectTime()\"><span class=\"text\">Confirm</span></div>\n                <div class=\"picker-action action-clear\" (click)=\"clearTime()\"><span class=\"text\">Clear</span></div>\n                <div class=\"picker-action action-close\" (click)=\"cancelTimePicker()\"><span class=\"text\">Close</span></div>\n            </div>\n        </div>\n    </div>\n</picker-modal>\n`,\n    styles: [`*,::after,::before{box-sizing:border-box}.picker-wrap{width:95vw;max-width:40rem;font-family:'Open Sans'}.picker-box{width:100%;padding:.625rem 1rem;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.picker-footer,.picker-header{font-size:1.333rem;line-height:2.5rem;height:2.5rem;width:100%}.picker-header{text-align:center}.picker-table{width:100%;margin:2.5rem 0}.picker-table-time{font-size:2.37rem;line-height:2.5rem;list-style:none;margin:0;padding:0;display:flex;justify-content:center;width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.picker-table-meridiem,.picker-table-number,.picker-table-separator{text-align:center}.picker-table-meridiem,.picker-table-number{position:relative;width:20%}.arrow{position:absolute;left:50%;border:solid #777;border-width:0 .2rem .2rem 0;display:inline-block;padding:.25rem;cursor:pointer}.arrow.up{top:-1rem;-webkit-transform:translateX(-50%) rotate(-135deg);transform:translateX(-50%) rotate(-135deg)}.arrow.down{bottom:-1rem;-webkit-transform:translateX(-50%) rotate(45deg);transform:translateX(-50%) rotate(45deg)}.arrow:hover{border-color:#1975d2}.picker-table-separator{width:calc(20% / 3)}.picker-footer{display:flex;justify-content:center;width:100%;cursor:pointer}.picker-footer .picker-action{width:25%;text-align:center}.picker-footer .picker-action:hover{background-color:#b1dcfb}.picker-footer .picker-action .text{padding-left:.8rem}.picker-footer .action-clear::before,.picker-footer .action-close::before,.picker-footer .action-confirm::before,.picker-footer .action-now::before{content:\" \";position:relative;display:inline-block;height:0;width:0}.picker-footer .action-now::before{border-top:.66em solid #0059bc;border-left:.66em solid transparent}.picker-footer .action-confirm::before{width:1rem;height:1rem;border-radius:100%;background-color:#00b5ad}.picker-footer .action-clear::before{top:-.5rem;width:1rem;border-top:3px solid #e20}.picker-footer .action-close::before{width:1rem;height:1rem;background:linear-gradient(to bottom,transparent 35%,#777 35%,#777 65%,transparent 65%),linear-gradient(to right,transparent 35%,#777 35%,#777 65%,transparent 65%);-webkit-transform:rotate(45deg);transform:rotate(45deg)}`],\n})\n\nexport class TimePickerComponent implements OnInit {\n\n    @Input() initTime: any;\n    @Input() showSecond = true;\n    @Input() viewFormat = 'hh:mm A';\n    @Input() use12Hour = false;\n    @Input() returnObject = 'js';\n    @Output() onSelectTime = new EventEmitter<any>();\n    @Output() onTimePickerCancel = new EventEmitter<boolean>();\n    hourFormat = 'HH';\n    public time: Moment;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n        if (this.use12Hour) {\n            this.hourFormat = 'hh';\n        }\n        this.time = this.initTime ? moment(this.initTime, this.viewFormat) : moment();\n\n        // check if the input initDate has value\n        if (this.initTime) {\n            this.time = this.returnObject === 'string' ? moment(this.initTime, this.viewFormat) :\n                moment(this.initTime);\n        } else {\n            this.time = moment();\n        }\n    }\n\n    increaseHour(): void {\n        this.time = this.time.clone().add(1, 'h');\n    }\n\n    decreaseHour(): void {\n        this.time = this.time.clone().subtract(1, 'h');\n    }\n\n    increaseMinute() {\n        this.time = this.time.clone().add(1, 'm');\n    }\n\n    decreaseMinute() {\n        this.time = this.time.clone().subtract(1, 'm');\n    }\n\n    increaseSecond(): void {\n        this.time = this.time.clone().add(1, 's');\n    }\n\n    decreaseSecond(): void {\n        this.time = this.time.clone().subtract(1, 's');\n    }\n\n    selectTime(): void {\n        const selectTime = this.parseToReturnObjectType(this.time);\n        this.onSelectTime.emit(selectTime);\n        this.cancelTimePicker();\n        return;\n    }\n\n    selectNow(): void {\n        const selectTime = this.parseToReturnObjectType(moment());\n        this.onSelectTime.emit(selectTime);\n        this.cancelTimePicker();\n        return;\n    }\n\n    clearTime(): void {\n        this.onSelectTime.emit(null);\n        this.cancelTimePicker();\n        return;\n    }\n\n    cancelTimePicker(): void {\n        this.onTimePickerCancel.emit(false);\n        return;\n    }\n\n    protected parseToReturnObjectType(time: Moment): any {\n        switch (this.returnObject) {\n            case 'js':\n                return time.toDate();\n\n            case 'string':\n                return time.format(this.viewFormat);\n\n            case 'moment':\n                return time;\n\n            case 'json':\n                return time.toJSON();\n\n            case 'array':\n                return time.toArray();\n\n            case 'iso':\n                return time.toISOString();\n\n            case 'object':\n                return time.toObject();\n\n            default:\n                return time;\n        }\n    }\n\n}\n","/**\n * modal.component\n */\n\nimport {\n    Component, Output, OnInit, EventEmitter,\n    ChangeDetectionStrategy\n} from '@angular/core';\n\n// webpack1_\ndeclare let require: any;\n// const myDpStyles: string = require('./modal.component.css');\n// const myDpTpl: string = require('./modal.component.html');\n// webpack2_\n\n@Component({\n    selector: 'picker-modal',\n    template: `<section class=\"x-modal\">\n    <section class=\"modal-overlay\" (click)=\"closeModal()\"></section>\n    <section class=\"modal-main\" id=\"section-modal-main\">\n        <ng-content></ng-content>\n    </section>\n</section>\n`,\n    styles: [`:host{z-index:9999999999}*,::after,::before{box-sizing:border-box}.modal-main{position:absolute;left:19.6%;right:auto;top:auto;z-index:111;background-color:#fff;border:1px solid #d7dad7;border-radius:6px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0);box-shadow:0 5px 15px rgba(0,0,0,.3)}`],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [\n    ],\n})\n\nexport class ModalComponent implements OnInit {\n\n    @Output() onOverlayClick = new EventEmitter<boolean>();\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    closeModal() {\n        this.onOverlayClick.emit(false);\n    }\n}\n","/**\n * moment.pipe\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Moment } from 'moment/moment';\n\n@Pipe({name: 'moment'})\n\nexport class MomentPipe implements PipeTransform {\n    transform(moment: Moment, format?: string): string {\n        return format ? moment.format(format) : moment.format('MMM DD, YYYY');\n    }\n}\n","import { Component, OnInit, Input, forwardRef, EventEmitter, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as moment_ from 'moment';\n\nconst Moment = moment_;\n\n@Component({\n    selector: 'date-time-picker',\n    template: `<div class='row'>\n    <div *ngIf=\"!showTime\" class='col-xs-12 col-md-12'>\n        <input *ngIf=\"!showWeeks\" type=\"text\" class=\"form-control\" [value]=\"value | date: 'mediumDate'\" (focus)=\"toggleDatePicker(true)\"\n            readonly placeholder=\"Select Date\" />\n        <div *ngIf=\"showWeeks\" class=\"input-group\">\n            <input type=\"text\" class=\"form-control\" class=\"form-control\" [value]=\"value | date: 'mediumDate'\" (focus)=\"toggleDatePicker(true)\"\n                readonly placeholder=\"Select Date\">\n            <div class=\"input-group-btn\">\n                <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Weeks <span class=\"caret\"></span></button>\n                <ul class=\"dropdown-menu up\">\n                    <li (click)=\"weeksSelected(count)\" *ngFor=\"let count of weeks\"><span> {{count}} Weeks</span></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"showTime\" class='col-xs-8 col-md-8'>\n        <input *ngIf=\"!showWeeks\" type=\"text\" class=\"form-control\" [value]=\"value | date: 'mediumDate'\" (focus)=\"toggleDatePicker(true)\"\n            readonly placeholder=\"Select Date\" />\n        <div *ngIf=\"showWeeks\" class=\"input-group\">\n            <input type=\"text\" class=\"form-control\" class=\"form-control\" [value]=\"value | date: 'mediumDate'\" (focus)=\"toggleDatePicker(true)\"\n                readonly placeholder=\"Select Date\">\n            <div class=\"input-group-btn\">\n                <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Weeks <span class=\"caret\"></span></button>\n                <ul class=\"dropdown-menu up\">\n                    <li (click)=\"weeksSelected(count)\" *ngFor=\"let count of weeks\"><span> {{count}} Weeks</span></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"showTime\" class='col-xs-4 col-md-4'>\n        <input type=\"text\" class=\"form-control\" [value]=\"value | date: 'shortTime'\" (focus)=\"toggleTimePicker(true)\" readonly placeholder=\"Select Time\"\n        />\n    </div>\n</div>\n<date-picker *ngIf=\"showDatePicker\" [initDate]=\"value\" (onSelectDate)=\"setDate($event)\" (onDatePickerCancel)=\"toggleDatePicker($event)\"></date-picker>\n\n<time-picker *ngIf=\"showTimePicker\" [initTime]=\"value\" [use12Hour]=\"true\" (onSelectTime)=\"setTime($event)\" (onTimePickerCancel)=\"toggleTimePicker($event)\"></time-picker>\n`,\n    styles: [`input[readonly]{background-color:#fff}.up{bottom:100%!important;top:auto!important}.glyphicon{top:1px}`],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateTimePickerComponent),\n            multi: true\n        }\n    ]\n})\nexport class DateTimePickerComponent implements OnInit, ControlValueAccessor {\n    @Input() modelValue: any;\n    @Input() showDate = true;\n    @Input() showTime = false;\n    @Input() showWeeks = false;\n    @Input() weeks: number[] = [2, 4, 6, 8, 12, 16, 24];\n    @Output() onDateChange = new EventEmitter<any>();\n    public showDatePicker = false;\n    public showTimePicker = false;\n    onChange: any = () => { };\n    onTouched: any = () => { };\n\n    constructor() {\n    }\n\n    ngOnInit() { }\n\n    weeksSelected(count) {\n        const now = new Date();\n        const nextDate = now.setDate(now.getDate() + count * 7);\n        this.value = Moment(nextDate).format();\n    }\n    setDate(date: any): void {\n        if (date && date !== '') {\n            this.value = Moment(date).format();\n        } else {\n            this.value = date;\n        }\n\n    }\n\n    setTime(time: any): void {\n        if (time && time !== '') {\n            this.value = Moment(time).format();\n        } else {\n            this.value = time;\n        }\n        return;\n    }\n\n    toggleDatePicker(status: boolean): void {\n      this.showDatePicker = status;\n      /*setTimeout(function() {\n        let _body = document.getElementById('content-wrapper').getBoundingClientRect(),\n          elem = document.getElementById('section-modal-main');\n        if (elem) {\n          let elemBox = elem.getBoundingClientRect();\n          if (elemBox.bottom > _body.bottom) {\n            elem.style.bottom = '36px';\n          }\n        }\n      }, 0);*/\n      return;\n    }\n\n    toggleTimePicker(status: boolean): void {\n        this.showTimePicker = status;\n        return;\n    }\n    get value() {\n        return this.modelValue;\n    }\n\n    set value(val) {\n        this.modelValue = val;\n        this.onDateChange.emit(val);\n        this.onChange(val);\n        this.onTouched();\n    }\n\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n\n    writeValue(value) {\n        if (value instanceof Date) {\n            this.value = Moment(value).format();\n        } else {\n            this.value = value;\n        }\n    }\n}\n","/**\n * date-time-picker.module\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { DatePickerComponent } from './date-picker/date-picker.component';\nimport { TimePickerComponent } from './time-picker/time-picker.component';\nimport { ModalComponent } from './picker-modal/modal.component';\nimport { MomentPipe } from './pipes/moment.pipe';\nimport { DateTimePickerComponent } from './date-time-picker.component';\n\n@NgModule({\n    imports: [CommonModule, FormsModule],\n    declarations: [\n        DatePickerComponent,\n        TimePickerComponent,\n        ModalComponent,\n        MomentPipe,\n        DateTimePickerComponent\n    ],\n    exports: [\n        DatePickerComponent,\n        TimePickerComponent,\n        ModalComponent,\n        MomentPipe,\n        DateTimePickerComponent\n    ],\n    providers: []\n})\nexport class DateTimePickerModule {\n}\n","\nimport { Component, OnInit, Input, forwardRef, EventEmitter, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, FormControl } from '@angular/forms';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\nexport const MY_FORMATS = {\n    parse: {\n        dateInput: 'LL',\n    },\n    display: {\n        dateInput: 'LL',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\n\n@Component({\n    selector: 'ngx-date-time-picker',\n    template: `<div>\n  <div class=\"row\">\n    <div [class]=\"getDatePickerCssClass()\">\n      <div class=\"input-group\">\n        <input matInput \n              [matDatepicker]=\"picker\" \n              class=\"form-control\" \n              [value]=\"value\" \n              placeholder=\"Choose a date\" \n              (dateChange)=\"onDateSelect($event)\"\n              (click)=\"picker.open()\"\n              readonly\n        >\n        <mat-datepicker #picker disabled=\"false\"></mat-datepicker>\n        <mat-datepicker-toggle matSuffix [for]=\"picker\" class=\"input-group-btn\"></mat-datepicker-toggle>\n      </div>\n    </div>\n    <div [class]=\"getWeekPickerCssClass()\" *ngIf=\"showWeeks\">\n      <mat-select placeholder=\"Select Weeks\" class=\"form-control\" name=\"weeks\" [value]=\"modelValue\" (ngModelChange)=\"weekSelect($event)\">\n        <mat-option *ngFor=\"let count of weeks\" [value]=\"count\">\n          {{count}} Weeks\n        </mat-option>\n      </mat-select>\n    </div>\n    <div [class]=\"getTimePickerCssClass()\" *ngIf=\"showTime\">\n      <div class=\"input-group\">\n        <input type=\"time\" class=\"form-control\" atp-time-picker [value]=\"selectedTime\" (ngModelChange)=\"onTimeSelect($event)\"\n          id=\"ngx-atp-time-picker\" />\n        <div class=\"input-group-btn\">\n          <button mat-raised-button class=\"btn btn-default\" (click)=\"setCurrentTime()\">\n            Set Current Time\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>`,\n    styles: [`#time-section{display:inline-block}#ngx-atp-time-picker,#ngx-mat-form-field{width:100%}.up{bottom:100%!important;top:auto!important}.time-btn{margin-top:-20px}`],\n    providers: [\n        { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => NgxDateTimePickerComponent),\n            multi: true\n        }\n    ]\n})\nexport class NgxDateTimePickerComponent implements OnInit, ControlValueAccessor {\n\n    // public date = new FormControl(moment());\n    public selectedTime = moment().format('HH:mm');\n    public selectedDate = moment().format();\n    public loadInitial = false;\n    public value;\n    @Input() weeks: number[] = [0, 2, 4, 6, 8, 12, 16, 24];\n    @Input() modelValue: any;\n    @Input() showTime = false;\n    @Input() showWeeks = true;\n    @Output() onDateChange = new EventEmitter<any>();\n    public onChange: any = () => { };\n    public onTouched: any = () => { };\n    public ngOnInit() {\n\n    }\n\n\n    public writeValue(value) {\n        console.log('Write Value', value);\n        this.value = value;\n    }\n\n    public registerOnChange(fn) {\n        this.onChange = fn;\n    }\n\n    public registerOnTouched(fn) {\n\n    }\n\n    public onTimeSelect($event) {\n        const setDate = moment(this.selectedDate);\n        const setTime = $event;\n        this.setDateTime(setDate, setTime);\n    }\n\n    public onDateSelect($event) {\n\n        const setDate = moment($event.value);\n        const setTime = this.selectedTime;\n        const dateString = this.setDateTime(setDate, setTime);\n\n        const selectedDate = $event.value;\n        // const dateString = moment(selectedDate).format();\n        // const dateString = this.processDateValue(selectedDate);\n        this.value = dateString;\n        // this.onDateChange.emit(dateString);\n\n        console.log('On Date Select', selectedDate);\n        console.log('On Date Select', dateString);\n\n    }\n\n\n    public setCurrentTime() {\n\n        const setDate = moment(this.selectedDate);\n        const currentTime = moment().format('HH:mm:ss');\n        this.setDateTime(setDate, currentTime);\n    }\n\n    public weekSelect($event) {\n        const dateToUse = moment().format();\n        const nextWeekDate = moment(dateToUse).add($event, 'weeks');\n        const nextWeekTime = dateToUse;\n        this.setDateTime(nextWeekDate, nextWeekTime);\n    }\n\n\n    public getWeekPickerCssClass() {\n        if (this.showTime) {\n            return 'col-sm-2 form-group';\n        }\n        return 'col-sm-3 form-group';\n    }\n\n    public getDatePickerCssClass() {\n        if (this.showTime && this.showWeeks) {\n            return 'col-sm-5 form-group';\n        }\n\n        if (this.showWeeks === true) {\n            return 'col-sm-9 form-group';\n        }\n\n        if (this.showTime === true) {\n            return 'col-sm-8 form-group';\n        }\n        return 'col-sm-12 form-group';\n    }\n\n    public getTimePickerCssClass() {\n        if (this.showTime && this.showWeeks) {\n            return 'col-sm-5 form-group';\n        }\n\n        if (this.showWeeks === true) {\n            return 'col-sm-9 form-group';\n        }\n        return 'col-sm-4 form-group';\n    }\n\n    public setDateTime(setDate, setTime) {\n        const newDate = moment(setDate).format('DD-MM-YYYY');\n        let newTime;\n        if (this.showTime) {\n            newTime = setTime;\n        } else {\n            newTime = '00:00:00';\n        }\n        console.log('Show Time', this.showTime);\n        console.log('New Time', newTime);\n        const newDateTime = moment(newDate + '' + newTime, 'DD-MM-YYYY HH:mm:ss');\n        const dateTimeString = moment(newDateTime).format();\n        this.selectedDate = dateTimeString;\n        this.selectedTime = newTime;\n        this.value = dateTimeString;\n        this.onChange(this.value);\n\n        return dateTimeString;\n\n\n    }\n}\n","/**\n * date-time-picker.module\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule , ReactiveFormsModule } from '@angular/forms';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatNativeDateModule , MatInputModule } from '@angular/material';\nimport { NgxDateTimePickerComponent } from './ngx-date-time-picker.component';\nimport { AmazingTimePickerModule } from 'amazing-time-picker';\nimport { MatSelectModule } from '@angular/material/select';\n\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatNativeDateModule,\n        MatInputModule,\n        AmazingTimePickerModule,\n        MatSelectModule\n    ],\n    declarations: [\n        NgxDateTimePickerComponent\n    ],\n    exports: [\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatNativeDateModule,\n        MatInputModule,\n        NgxDateTimePickerComponent\n    ],\n    providers: [\n    ]\n})\nexport class NgxDateTimePickerModule {\n}\n","\nimport { SelectOption } from './interfaces/select-option';\nexport class Option {\n    label: string;\n    value: any;\n    constructor(options: SelectOption) {\n        this.label = options.label;\n        this.value = options.value;\n    }\n}\n","import {\n  Component, Input, forwardRef, OnInit, OnChanges\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Option } from '../form-entry/question-models/select-option';\n\nimport { DataSource } from '../form-entry/question-models/interfaces/data-source';\n\n\n@Component({\n  selector: 'afe-ng-select',\n  template: `<ng-select\n                   (searchInputText)=\"getChangingText($event)\"\n                    (ngModelChange)=\"onValueChange($event)\"\n                    [options]=\"question_options\"\n                    [multiple]=\"multiple\" >\n            </ng-select>\n  `,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AfeNgSelectComponent),\n      multi: true\n    }]\n})\nexport class AfeNgSelectComponent implements ControlValueAccessor, OnInit, OnChanges {\n  subject: BehaviorSubject<Option[]>;\n  subjectOption: BehaviorSubject<Option>;\n  @Input() dataSource: DataSource;\n  @Input() multiple: boolean;\n  @Input() extras: any;\n  question_options: any = [];\n  selected_question_option: any;\n  errors: any = [];\n  propagateChange = (_: any) => { };\n\n  getChangingText(event) {\n    // console.log(event);\n    this.getData(event).subscribe((options) => {\n      this.question_options = options;\n    });\n  }\n\n  writeValue(obj: any): void {\n\n  }\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n\n  }\n\n  registerOnTouched(fn: any): void { }\n\n  ngOnChanges(changes: any) { }\n\n  ngOnInit() {\n    if (this.extras) {\n      if (this.extras.originalValue) {\n        this.resolveSelectedOption(this.extras.originalValue).subscribe((option) => {\n          this.selected_question_option = option;\n        });\n      }\n\n    }\n\n  }\n\n  getData(searchText: string): Observable<Option[]> {\n\n    this.subject = new BehaviorSubject<Option[]>([]);\n\n    const OptionsObservable = this.dataSource.searchOptions(searchText);\n\n    OptionsObservable.subscribe(\n      (options) => {\n        // console.log('options', options);\n        const mappedOptions: Option[] = new Array<Option>();\n\n        for (let i = 0; i < options.length; i++) {\n          mappedOptions.push(new Option(options[i]));\n        }\n        this.subject.next(mappedOptions);\n      },\n      (error) => {\n        this.subject.error(error);\n      }\n    );\n\n    return this.subject.asObservable();\n  }\n\n  onValueChange(event) { }\n  resolveSelectedOption(value: any): Observable<Option> {\n\n    this.subjectOption = new BehaviorSubject<Option>(null);\n    const OptionObservable = this.dataSource.resolveSelectedValue(value);\n\n    OptionObservable.subscribe(\n      (option) => {\n        // console.log('option', option);\n        this.subjectOption.next(option);\n      },\n      (error) => {\n        this.subjectOption.error(error);\n      }\n    );\n\n    return this.subjectOption.asObservable();\n  }\n\n  resetOptions() {\n    this.subject.next(new Array<Option>());\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Injectable()\nexport class FormSchemaCompiler {\n  constructor() {\n\n  }\n\n  public compileFormSchema(formSchema: Object, referencedComponents: Array<any>): Object {\n    // get all referenced forms\n    const refForms: Object = this.getReferencedForms(formSchema, referencedComponents);\n    if (_.isEmpty(refForms)) { return formSchema; }\n\n    // get all place-holders from the form schema\n    const placeHolders = this.getAllPlaceholderObjects(formSchema);\n    if (_.isEmpty(placeHolders)) { return formSchema; }\n\n    // replace all placeHolders\n    this.replaceAllPlaceholdersWithActualObjects(refForms, placeHolders);\n    return formSchema;\n  }\n\n\n  private findSchemaByName(schemaArray: Array<any>, nameOfSchema: string): Object {\n    if (_.isEmpty(schemaArray) || _.isEmpty(nameOfSchema)) { return; }\n    let foundSchema: any = {};\n    _.each(schemaArray, (schema: any) => {\n      if (schema.name === nameOfSchema) {\n        foundSchema = schema;\n      }\n    });\n    return foundSchema;\n  }\n\n  private getPageInSchemaByLabel(schema: any, pageLabel: string): Object {\n    if (_.isEmpty(schema) || _.isEmpty(pageLabel)) { return; }\n    let foundPage: Object = {};\n    _.each(schema.pages, (page) => {\n      if (page.label === pageLabel) {\n        foundPage = page;\n      }\n    }\n    );\n    return foundPage;\n  }\n\n  private getSectionInSchemaByPageLabelBySectionLabel\n    (schema: Object, pageLabel: string, sectionLabel: string): Object {\n    if (_.isEmpty(schema) || _.isEmpty(pageLabel) || _.isEmpty(sectionLabel)) { return; }\n    const foundPage: any = this.getPageInSchemaByLabel(schema, pageLabel);\n    if (_.isEmpty(foundPage)) { return; }\n    let foundSection: Object = {};\n    _.each(foundPage.sections, (section) => {\n      if (section.label === sectionLabel) {\n        foundSection = section;\n      }\n    }\n    );\n    return foundSection;\n  }\n\n  private getQuestionByIdInSchema(schema: any, questionId: string): Array<any> {\n    if (_.isEmpty(schema) || _.isEmpty(questionId)) { return; }\n    if (Array.isArray(schema)) {\n      let question: Array<any>;\n      for (let i = 0; i < schema.length; i++) {\n        if (!_.isEmpty(schema[i])) {\n          question = this.getQuestionByIdInSchema(schema[i], questionId);\n        }\n        if (!_.isEmpty(question)) {\n          break;\n        }\n      }\n      return question;\n    } else if (typeof schema === 'object') {\n      if (this.isQuestionObjectWithId(schema, questionId)) {\n        return schema;\n      } else if (this.isSchemaSubObjectExpandable(schema)) {\n        const toExpand = (schema.pages || schema.sections || schema.questions);\n        return this.getQuestionByIdInSchema(toExpand, questionId);\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n\n  private getQuestionsArrayByQuestionIdInSchema(schema: any, questionId: string): Array<any> {\n    if (_.isEmpty(schema) || _.isEmpty(questionId)) { return; }\n    return this.getQuestionsArrayByQuestionId(schema, schema, questionId);\n  }\n\n\n  private getQuestionsArrayByQuestionId(parent: any, object: any, questionId: string): Array<any> {\n    if (Array.isArray(object)) {\n      let returnedValue: Array<any>;\n      for (let i = 0; i < object.length; i++) {\n        if (!_.isEmpty(object[i])) {\n          returnedValue = this.getQuestionsArrayByQuestionId(object, object[i], questionId);\n        }\n        if (!_.isEmpty(returnedValue)) {\n          break;\n        }\n      }\n\n      return returnedValue;\n    } else if (typeof object === 'object') {\n      if (this.isQuestionObjectWithId(object, questionId)) {\n        return parent;\n      } else if (this.isSchemaSubObjectExpandable(object)) {\n        const toExpand = (object.pages || object.sections || object.questions);\n        return this.getQuestionsArrayByQuestionId(toExpand, toExpand, questionId);\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n\n  // object is page or section or question\n  private isSchemaSubObjectExpandable(object: Object): Boolean {\n    if (typeof object === 'object') {\n      const objectKeys = Object.keys(object);\n      if (_.includes(objectKeys, 'pages') ||\n        _.includes(objectKeys, 'sections') ||\n        _.includes(objectKeys, 'questions')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private isQuestionObjectWithId(object: Object, id: any): Boolean {\n    return object['id'] === id;\n\n  }\n\n  private getAllPlaceholderObjects(schema: Object): Array<any> {\n    const referencedObjects: Array<any> = [];\n    this.extractPlaceholderObjects(schema, referencedObjects);\n    return referencedObjects;\n  }\n\n  private extractPlaceholderObjects(subSchema: any, objectsArray: Array<Object>): void {\n    if (_.isEmpty(subSchema)) { return; }\n    if (Array.isArray(subSchema)) {\n      for (let i = 0; i < subSchema.length; i++) {\n        if (!_.isEmpty(subSchema[i])) {\n          this.extractPlaceholderObjects(subSchema[i], objectsArray);\n        }\n      }\n    } else if (typeof subSchema === 'object') {\n      if (!_.isEmpty(subSchema.reference)) {\n        objectsArray.push(subSchema);\n      } else if (this.isSchemaSubObjectExpandable(subSchema)) {\n        const toExpand = (subSchema.pages || subSchema.sections || subSchema.questions);\n        this.extractPlaceholderObjects(toExpand, objectsArray);\n      }\n    }\n  }\n\n  private fillPlaceholderObject(placeHolderObject: Object, referenceObject: Object): Object {\n    for (const member in referenceObject) {\n      if (_.isEmpty(placeHolderObject[member])) {\n        placeHolderObject[member] = referenceObject[member];\n      }\n    }\n    return placeHolderObject;\n  }\n\n  private replaceAllPlaceholdersWithActualObjects\n    (keyValReferencedForms: Object, placeHoldersArray: Array<any>): Array<any> {\n    _.each(placeHoldersArray, (placeHolder) => {\n      const referencedObject: Object =\n        this.getReferencedObject(placeHolder.reference, keyValReferencedForms);\n\n      if (_.isEmpty(referencedObject)) {\n        console.error('Form compile: Error finding referenced object', placeHolder.reference);\n      } else {\n        placeHolder = this.fillPlaceholderObject(placeHolder, referencedObject);\n        placeHolder = this.removeExcludedQuestionsFromPlaceholder(placeHolder);\n        delete placeHolder['reference'];\n      }\n    });\n    return placeHoldersArray;\n  }\n\n  private removeObjectFromArray(array: Array<any>, object: Object): void {\n    const indexOfObject = array.indexOf(object);\n    if (indexOfObject === -1) { return; }\n\n    array.splice(indexOfObject, 1);\n  }\n\n  private removeExcludedQuestionsFromPlaceholder(placeHolder: any): Object {\n    if (Array.isArray(placeHolder.reference.excludeQuestions)) {\n      _.each(placeHolder.reference.excludeQuestions, (excludedQuestionId) => {\n        const questionsArray: Array<any> = this.getQuestionsArrayByQuestionIdInSchema(\n          placeHolder, excludedQuestionId);\n\n        if (!Array.isArray(questionsArray)) { return; }\n        const question = this.getQuestionByIdInSchema(questionsArray, excludedQuestionId);\n\n        this.removeObjectFromArray(questionsArray, question);\n      });\n    }\n    return placeHolder;\n  }\n\n  private getReferencedObject(referenceData: any, keyValReferencedForms: Object): Object {\n    if (_.isEmpty(referenceData.form)) {\n      console.error('Form compile: reference missing form attribute', referenceData);\n      return;\n    }\n    if (_.isEmpty(keyValReferencedForms[referenceData.form])) {\n      console.error('Form compile: referenced form alias not found', referenceData);\n      return;\n    }\n    if (!_.isEmpty(referenceData.questionId)) {\n      return this.getQuestionByIdInSchema(\n        keyValReferencedForms[referenceData.form],\n        referenceData.questionId);\n    }\n\n    if (!_.isEmpty(referenceData.page) && !_.isEmpty(referenceData.section)) {\n      return this.getSectionInSchemaByPageLabelBySectionLabel(\n        keyValReferencedForms[referenceData.form],\n        referenceData.page,\n        referenceData.section\n      );\n    }\n    if (!_.isEmpty(referenceData.page)) {\n      return this.getPageInSchemaByLabel(\n        keyValReferencedForms[referenceData.form],\n        referenceData.page\n      );\n    }\n    console.error('Form compile: Unsupported reference type', referenceData.reference);\n  }\n\n  private getReferencedForms(formSchema: any, formSchemasLookupArray: Array<any>): Object {\n    const referencedForms: Array<any> = formSchema.referencedForms;\n\n    if (_.isEmpty(referencedForms)) { return; }\n\n    const keyValReferencedForms: Object = {};\n\n    _.each(referencedForms, (reference: any) => {\n      keyValReferencedForms[reference.alias] =\n        this.findSchemaByName(formSchemasLookupArray, reference.formName);\n    });\n    return keyValReferencedForms;\n  }\n}\n","import { QuestionBase } from './question-base';\nimport { TextQuestionOptions } from './interfaces/text-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class TextInputQuestion extends QuestionBase {\n\n    placeholder: string;\n    constructor(options: TextQuestionOptions) {\n\n        super(options);\n        this.placeholder = options.placeholder || '';\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { TextInputQuestion } from './text-input-question';\nimport { TextAreaQuestionOptions } from './interfaces/text-area-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class TextAreaInputQuestion extends TextInputQuestion {\n    isExpanded: boolean;\n    rows: number;\n\n    constructor(options: TextAreaQuestionOptions) {\n\n        super(options);\n        this.placeholder = options.placeholder || '';\n        this.isExpanded = options.isExpanded || false;\n        this.rows = options.rows || 18;\n        this.renderingType = 'textarea';\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { SelectQuestionOptions } from './interfaces/select-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class SelectQuestion extends QuestionBase {\n\n    options: { key: string, value: string }[];\n    dataSource?: any;\n\n    constructor(options: SelectQuestionOptions) {\n        super(options);\n        this.renderingType = 'select';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n        this.dataSource = options.dataSource || '';\n    }\n\n}\n","import { QuestionBase } from './question-base';\nimport { UiSelectQuestionOptions } from './interfaces/ui-select-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class UiSelectQuestion extends QuestionBase {\n\n    options: { key: string, value: string }[];\n    searchFunction: Function;\n    resolveFunction: Function;\n    constructor(options: UiSelectQuestionOptions) {\n        super(options);\n        this.renderingType = 'ui-select';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n\n}\n","import { QuestionBase } from './question-base';\nimport { DateQuestionOptions } from './interfaces/date-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class DateQuestion extends QuestionBase {\n    showTime = true;\n    showWeeksAdder = false;\n    constructor(options: DateQuestionOptions) {\n        super(options);\n        this.renderingType = 'date';\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { SelectQuestion } from './select-question';\nimport { MultiSelectQuestionOptions } from './interfaces/multi-select-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class MultiSelectQuestion extends SelectQuestion {\n\n    options: { key: string, value: string }[];\n\n    constructor(options: MultiSelectQuestionOptions) {\n        super(options);\n        this.renderingType = 'multi-select';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n\n}\n","import { QuestionBase } from '../question-base';\nimport { BaseOptions } from './base-options';\n\nexport abstract class NestedQuestion extends QuestionBase {\n    abstract questions: QuestionBase[];\n    constructor(options: BaseOptions) {\n        super(options);\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { GroupQuestionOptions } from './interfaces/group-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nimport { NestedQuestion } from './interfaces/nested-questions';\n\nexport class QuestionGroup extends NestedQuestion {\n    questions: QuestionBase[];\n    isExpanded = true;\n\n    constructor(options: GroupQuestionOptions) {\n        super(options);\n        this.renderingType = 'group';\n        this.questions = options.questions || [];\n        this.controlType = AfeControlType.AfeFormGroup;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { RepeatingQuestionOptions } from './interfaces/repeating-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nimport { NestedQuestion } from './interfaces/nested-questions';\n\nexport class RepeatingQuestion extends NestedQuestion {\n    questions: QuestionBase[];\n\n    constructor(options: RepeatingQuestionOptions) {\n        super(options);\n        this.renderingType = 'repeating';\n        this.questions = options.questions || [];\n        this.controlType = AfeControlType.AfeFormArray;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { CheckboxOptions } from './interfaces/checkbox-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class CheckBoxQuestion extends QuestionBase {\n\n    options: { key: string, value: string }[];\n\n    constructor(options: CheckboxOptions) {\n        super(options);\n        this.renderingType = 'checkbox' || 'radio';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n\n}\n","import { QuestionBase } from './question-base';\nimport { FileUploadQuestionOptions } from './interfaces/file-upload-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class FileUploadQuestion extends QuestionBase {\n    showTime = true;\n    showWeeksAdder = false;\n    dataSource?: any;\n    constructor(options: FileUploadQuestionOptions) {\n        super(options);\n        this.renderingType = 'file';\n        this.dataSource = options.dataSource;\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { TestOrderQuestionOptions } from './interfaces/test-order-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class TestOrderQuestion extends QuestionBase {\n    orderType: string;\n    selectableOrders: { concept: string, label: string }[];\n    orderSettingUuid: string;\n    rendering: string;\n    options: any[];\n    constructor(options: TestOrderQuestionOptions) {\n        super(options);\n        this.renderingType = 'select';\n        this.orderType = options.orderType;\n        this.selectableOrders = options.selectableOrders;\n        this.options = options.options;\n        this.orderSettingUuid = options.orderSettingUuid;\n        this.rendering = options.orderSettingUuid;\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class DateValidationModel extends ValidationModel {\n\n  allowFutureDates = false;\n\n  constructor(validations: any) {\n    super(validations);\n\n    this.allowFutureDates = validations.allowFutureDates === 'true' ? true : false;\n  }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class MaxValidationModel extends ValidationModel {\n\n  max: number;\n\n  constructor(validations: any) {\n    super(validations);\n    const max: any = validations.max;\n    this.max = +max;\n  }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class MinValidationModel extends ValidationModel {\n\n  min: number;\n\n  constructor(validations: any) {\n    super(validations);\n    const min: any = validations.min;\n    this.min = +min;\n  }\n}\n","import { Option } from '../question-models/select-option';\nimport { DataSource } from '../question-models/interfaces/data-source';\nimport { Observable, BehaviorSubject, of } from 'rxjs';\n\n\nexport class DummyDataSource implements DataSource {\n  options: Observable<Option[]>;\n  option: Observable<Option>;\n  returnErrorOnNext = false;\n\n  constructor() { }\n\n  resolveSelectedValue(value): Observable<Option> {\n    let selectOptions = this.sampleData();\n\n    selectOptions = selectOptions.map(function (obj) {\n      const option = new Option({\n        label: obj.label,\n        value: obj.concept\n      });\n      return option;\n    });\n\n\n    selectOptions = selectOptions.filter(\n      option => option.value === value\n    );\n\n    const test: BehaviorSubject<any> = new BehaviorSubject<any>([]);\n    if (!this.returnErrorOnNext) {\n      test.next(selectOptions[0]);\n    } else {\n      test.error(new Error('Error loading Options'));\n    }\n\n    return test.asObservable();\n  }\n  fileUpload(url) {\n    return of({ image: '' });\n  }\n  fetchFile(url) {\n    return of({ image: '' });\n  }\n  searchOptions(searchText): Observable<Option[]> {\n    let selectOptions = this.sampleData();\n\n    selectOptions = selectOptions.map(function (obj) {\n      const option = new Option({\n        label: obj.label,\n        value: obj.concept\n      });\n      return option;\n    });\n\n\n    selectOptions = selectOptions.filter(\n      option => option.label.indexOf(searchText) !== -1\n    );\n\n    const test: BehaviorSubject<any> = new BehaviorSubject<any>([]);\n    if (!this.returnErrorOnNext) {\n      test.next(selectOptions);\n    } else {\n      test.error(new Error('Error loading Options'));\n    }\n\n    return test.asObservable();\n  }\n\n  sampleData(): any {\n    return [\n      {\n        concept: 'a899e0ac-1350-11df-a1f1-0026b9348838',\n        label: 'None'\n      },\n      {\n        concept: 'a8ad1276-1350-11df-a1f1-0026b9348838',\n        label: 'Breathlessness'\n      },\n      {\n        concept: 'a892e4b4-1350-11df-a1f1-0026b9348838',\n        label: 'Chest pain'\n      },\n      {\n        concept: 'a8afc8b8-1350-11df-a1f1-0026b9348838',\n        label: 'Cough = 2 weeks'\n      },\n      {\n        concept: 'd7adae14-c386-49cc-8f7c-765d8ceec566',\n        label: 'Fever for = 2 weeks'\n      },\n      {\n        concept: '3f57aafc-7162-41da-a51b-6a804cb6f5e8',\n        label: 'New exposure to household contact with TB'\n      },\n      {\n        concept: 'a89807f0-1350-11df-a1f1-0026b9348838',\n        label: 'Noticeable Weight loss'\n      },\n      {\n        concept: 'e1862fef-68ed-4df4-90dd-a00152f719aa',\n        label: 'Night sweats = 2 weeks'\n      },\n      {\n        concept: 'a8ad462e-1350-11df-a1f1-0026b9348838',\n        label: 'Abdomen'\n      },\n      {\n        concept: 'f218c60e-4b54-475a-a4fa-facab9216da8',\n        label: 'Groin'\n      },\n      {\n        concept: 'a8a774b0-1350-11df-a1f1-0026b9348838',\n        label: 'Joints'\n      },\n      {\n        concept: '4639388c-ee31-4dcf-abb4-ad71253493bb',\n        label: 'Neck Kw'\n      }\n\n    ];\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Injectable()\nexport class HistoricalEncounterDataService {\n\n  dataSources: any = {};\n  constructor() {\n  }\n\n  registerEncounters(name: string, encounters: any) {\n    const encStore: any = {\n      data: [],\n      getValue: (key: string, index = 0): any => {\n        const pathArray = key.split('.');\n        if (pathArray.length > 0) {\n          return this.getFirstValue(pathArray, encStore.data[index]);\n        }\n        return encStore.data[index][key];\n      },\n      getAllObjects: () => {\n        return encStore.data;\n      },\n      getSingleObject: (index = 0) => {\n        return encStore.data[index];\n      }\n    };\n\n    if (_.isArray(encounters)) {\n      const group: Array<any> = [];\n      _.each(encounters, (encounter) => {\n        group.push(this._transformEncounter(encounter));\n      });\n\n      // Sort them in reverse chronological order\n      encStore.data = _.sortBy(group, 'encounterDatetime').reverse();\n    } else {\n      // Assume a single openmrs rest encounter object.\n      encStore.data.push(this._transformEncounter(encounters));\n    }\n\n    this.putObject(name, encStore);\n\n  }\n\n  putObject(name, object): void {\n    this.dataSources[name] = object;\n  }\n\n  getObject(name: string): any {\n    return this.dataSources[name] || null;\n  }\n\n  getFirstValue(path: Array<string>, object: any): any {\n\n    const answers = [];\n\n    this.getAllValues(path, object, answers);\n\n    if (answers.length > 0) {\n      return {\n        value: answers[0],\n        valueDate: moment(object.encounterDatetime).format('ll')\n      };\n    }\n\n  }\n\n  getAllValues(path, object, answers) {\n    if (_.isNil(object)) {\n      return;\n    }\n\n    if (path.length <= 1) {\n      if (!_.isNil(object[path[0]])) {\n        answers.push(object[path[0]]);\n      }\n      return;\n    }\n\n    const newpath = path.splice(1);\n    const key = path[0];\n\n    if (_.isArray(object[key]) && object[key].length > 0) {\n      _.each(object[key], (childObject) => {\n        this.getAllValues(newpath.slice(0), childObject, answers);\n      });\n    } else {\n      this.getAllValues(newpath.slice(0), object[key], answers);\n    }\n  }\n\n  private _transformEncounter(encounter: any) {\n    if (_.isNil(encounter)) {\n      return;\n    }\n    // Transform encounter Level details to key value pairs.\n    const prevEncounter: any = {\n      encounterDatetime: encounter.encounterDatetime\n    };\n\n    if (encounter.location && encounter.location.uuid) {\n      prevEncounter.location = encounter.location.uuid;\n    }\n\n    if (encounter.patient && encounter.patient.uuid) {\n      prevEncounter.patient = encounter.patient.uuid;\n    }\n\n    if (encounter.form && encounter.form.uuid) {\n      prevEncounter.form = encounter.form.uuid;\n    }\n\n    if (encounter.encounterType && encounter.encounterType.uuid) {\n      prevEncounter.encounterType = encounter.encounterType.uuid;\n    }\n\n    if (encounter.provider) {\n      const provider = encounter.provider;\n      prevEncounter.provider = provider.uuid;\n    }\n\n    // Deal with obs.\n    if (encounter.obs) {\n      const processedObs: any = this._transformObs(encounter.obs);\n\n      // add in individual processed obs to prevEncounter\n      _.extend(prevEncounter, processedObs);\n    }\n\n    return prevEncounter;\n  }\n\n  private _transformObs(obs: any): any {\n\n    if (!obs) {\n      return null;\n    }\n\n    const obsRep: any = {};\n    if (_.isArray(obs)) {\n      _.each(obs, (singleObs) => {\n        this._augumentObs(obsRep, this._transformObs(singleObs));\n      });\n      return obsRep;\n    } else if (obs.groupMembers) {\n      const group: any = {};\n      _.each(obs.groupMembers, (member) => {\n        this._augumentObs(group, this._transformObs(member));\n      });\n\n      // Handle already existing data\n      if (obsRep[obs.concept.uuid] && _.isArray(obsRep[obs.concept.uuid])) {\n        obsRep[obs.concept.uuid].push(group);\n      } else {\n        obsRep[obs.concept.uuid] = [group];\n      }\n      return obsRep;\n    } else {\n      if (obs.value instanceof Object) {\n        obsRep[obs.concept.uuid] = obs.value.uuid;\n      } else {\n        obsRep[obs.concept.uuid] = obs.value;\n      }\n      return obsRep;\n    }\n\n  }\n\n  private _augumentObs(existing: any, toAdd: any): any {\n    for (const key in toAdd) {\n      if (_.has(existing, key)) {\n        // check if not an array yet\n        if (!_.isArray(existing[key])) {\n          const temp = existing[key];\n          existing[key] = [temp];\n        }\n\n        // Check whether the incoming is array (for group members)\n        if (_.isArray(toAdd[key])) {\n          Array.prototype.push.apply(existing[key], toAdd[key]);\n        } else {\n          existing[key].push(toAdd[key]);\n        }\n      } else {\n        existing[key] = toAdd[key];\n      }\n    }\n    return existing;\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HistoricalEncounterDataService } from '../services/historical-encounter-data.service';\nimport { JsExpressionHelper } from './js-expression-helper';\nimport { Runnable, ExpressionRunner } from '../expression-runner/expression-runner';\nimport { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\n@Injectable()\nexport class HistoricalHelperService {\n\n  constructor() {\n  }\n\n  public evaluate(expr: string, dataSources: any): any {\n    const HD = new HistoricalEncounterDataService();\n    HD.registerEncounters('prevEnc', dataSources['rawPrevEnc']);\n    const deps: any = {\n      HD: HD\n    };\n\n    const helper = new JsExpressionHelper();\n    const control: AfeFormControl = new AfeFormControl();\n    const runner: ExpressionRunner = new ExpressionRunner();\n    const runnable: Runnable = runner.getRunnable(expr, control, helper.helperFunctions, deps);\n\n    return runnable.run();\n  }\n\n}\n","import * as _ from 'lodash';\n\nimport { TextInputQuestion } from '../question-models/text-input-question';\nimport { TextAreaInputQuestion } from '../question-models/text-area-input-question';\nimport { SelectQuestion } from '../question-models/select-question';\nimport { UiSelectQuestion } from '../question-models/ui-select-question';\nimport { DateQuestion } from '../question-models/date-question';\nimport { MultiSelectQuestion } from '../question-models/multi-select-question';\nimport { QuestionGroup } from '../question-models/group-question';\nimport { RepeatingQuestion } from '../question-models/repeating-question';\nimport { QuestionBase } from '../question-models/question-base';\nimport { FileUploadQuestion } from '../question-models/file-upload-question';\nimport { TestOrderQuestion } from '../question-models/test-order-question';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nimport { ValidationModel } from '../question-models/validation.model';\nimport { DateValidationModel } from '../question-models/date-validation.model';\nimport { MaxValidationModel } from '../question-models/max-validation.model';\nimport { MinValidationModel } from '../question-models/min-validation.model';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\nimport { DummyDataSource } from '../data-sources/dummy-data-source';\nimport { HistoricalHelperService } from '../helpers/historical-expression-helper-service';\nimport { Form } from './form';\nimport { CheckBoxQuestion } from '../question-models/models';\n\nexport class QuestionFactory {\n  dataSources: any = {};\n  historicalHelperService: HistoricalHelperService = new HistoricalHelperService();\n  constructor() {\n  }\n\n  createQuestionModel(formSchema: any, form?: Form): QuestionBase {\n    if (form) {\n      const dataSources = form.dataSourcesContainer.dataSources;\n      this.dataSources = dataSources;\n    }\n    return this.toFormQuestionModel(formSchema);\n  }\n\n  toSelectQuestion(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.options = schemaQuestion.questionOptions.answers.map(function (obj) {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n\n    const options: any = question.options;\n    options.splice(0, 0, {\n      label: '',\n      value: ''\n    });\n\n    question.renderingType = schemaQuestion.questionOptions.rendering;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toNumericQuestion(schemaQuestion: any): TextInputQuestion {\n    const question = new TextInputQuestion({ placeholder: '', type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'number';\n    question.placeholder = schemaQuestion.questionOptions.placeholder;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toNumberQuestion(schemaQuestion: any): TextInputQuestion {\n    const question = new TextInputQuestion({ placeholder: '', type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'number';\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    question.validators = this.addValidators(schemaQuestion);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toDateQuestion(schemaQuestion: any): DateQuestion {\n    if (schemaQuestion.type === 'encounterDatetime') {\n      return this.toEncounterDatetimeQuestion(schemaQuestion);\n    }\n    const question = new DateQuestion({ type: '', key: '' });\n    question.renderingType = 'date';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.showTime = schemaQuestion.questionOptions.showTime as boolean;\n    question.showWeeksAdder = schemaQuestion.questionOptions.weeksList ? true : false;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toEncounterDatetimeQuestion(schemaQuestion: any): DateQuestion {\n    const question = new DateQuestion({ type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.renderingType = 'date';\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.showWeeksAdder = schemaQuestion.questionOptions.weeksList ? true : false;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n    question.showTime = true;\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toCheckBoxQuestion(schemaQuestion: any): CheckBoxQuestion {\n    const question = new CheckBoxQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.extras = schemaQuestion;\n    question.options = schemaQuestion.questionOptions.answers.map((obj) => {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n    question.options.splice(0, 0);\n\n    question.renderingType = schemaQuestion.questionOptions.rendering;\n    const mappings: any = {\n      label: 'label',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n\n  }\n\n  toMultiCheckboxQuestion(schemaQuestion: any): MultiSelectQuestion {\n    const question = new MultiSelectQuestion({ renderType: '', options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.options = schemaQuestion.questionOptions.answers.map(function (obj) {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n    question.validators = this.addValidators(schemaQuestion);\n    question.dataSource = new DummyDataSource();\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toTextAreaQuestion(schemaQuestion: any): TextAreaInputQuestion {\n    const question = new TextAreaInputQuestion({\n      isExpanded: false, rows: 18,\n      placeholder: '', type: '', key: ''\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.placeholder = schemaQuestion.questionOptions.placeholder;\n    question.isExpanded = schemaQuestion.isExpanded;\n    question.rows = schemaQuestion.questionOptions.rows;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toTextQuestion(schemaQuestion: any): TextInputQuestion {\n    const question = new TextInputQuestion({ placeholder: '', type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'text';\n    question.placeholder = schemaQuestion.questionOptions.placeholder;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toFileUploadQuestion(schemaQuestion: any): FileUploadQuestion {\n    const question = new FileUploadQuestion({ type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'file';\n    question.dataSource = 'file';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toDrugQuestion(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'drug';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toProblemQuestion(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'problem';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toConceptAnswerSelect(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = schemaQuestion.questionOptions.dataSource || 'conceptAnswers';\n    question.dataSourceOptions = {\n      concept: schemaQuestion.questionOptions.concept\n    };\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toRepeatingQuestion(schemaQuestion: any): RepeatingQuestion {\n    const question = new RepeatingQuestion({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.questions = this.getChildrenQuestionModels(schemaQuestion.questions);\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    if (schemaQuestion.type === 'testOrder') {\n      const testOrder = this.toTestOrderQuestion(schemaQuestion);\n      const orders = []; orders.push(testOrder);\n      question.questions = orders;\n    }\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toGroupQuestion(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.questions = this.getChildrenQuestionModels(schemaQuestion.questions);\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toPageQuestion(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.label;\n    question.renderingType = 'page';\n    question.controlType = AfeControlType.None;\n    question.questions = [];\n    schemaQuestion.sections.forEach(element => {\n      question.questions.push(this.toSectionQuestion(element));\n    });\n    return question;\n  }\n\n  toFormQuestionModel(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.label;\n    question.renderingType = 'form';\n    question.controlType = AfeControlType.AfeFormGroup;\n    question.extras = schemaQuestion;\n    question.questions = [];\n    schemaQuestion.pages.forEach(element => {\n      question.questions.push(this.toPageQuestion(element));\n    });\n\n    return question;\n  }\n\n  toSectionQuestion(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.label;\n    question.renderingType = 'section';\n    question.controlType = AfeControlType.None;\n    question.isExpanded = schemaQuestion.isExpanded === 'true' ? true : false;\n    question.questions = this.getSchemaQuestions(schemaQuestion.questions);\n    return question;\n  }\n\n  toPersonAttributeQuestion(schemaQuestion: any): UiSelectQuestion {\n    const question = new UiSelectQuestion({\n      options: [], type: '', key: '', searchFunction: function () { },\n      resolveFunction: function () {\n\n      }\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'personAttribute';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toEncounterProviderQuestion(schemaQuestion: any): UiSelectQuestion {\n    const question = new UiSelectQuestion({\n      options: [], type: '', key: '', searchFunction: function () { },\n      resolveFunction: function () {\n\n      }\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'provider';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toFieldSetQuestion(schemaQuestion: any): QuestionGroup {\n    const toReturn = this.toGroupQuestion(schemaQuestion);\n    toReturn.renderingType = 'field-set';\n    return toReturn;\n  }\n\n  toEncounterLocationQuestion(schemaQuestion: any): UiSelectQuestion {\n    const question = new UiSelectQuestion({\n      options: [], type: '', key: '', searchFunction: function () { },\n      resolveFunction: function () {\n\n      }\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = schemaQuestion.type;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'location';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toTestOrderQuestion(schemaQuestion: any): TestOrderQuestion {\n\n    const question = new TestOrderQuestion({\n      type: '', key: '', orderType: '', selectableOrders: [],\n      orderSettingUuid: '', label: '', rendering: ''\n    });\n\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.options = schemaQuestion.questionOptions.selectableOrders.map(function (obj) {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n    this.copyProperties(mappings, schemaQuestion, question);\n    return question;\n  }\n\n  getSchemaQuestions(schema: any): any {\n    const listQuestions = new Array();\n    this.getQuestions(schema, listQuestions);\n    return listQuestions;\n  }\n\n  getQuestions(schema: any, foundArray: any): any {\n    if (!Array.isArray(foundArray)) {\n      foundArray = [];\n    }\n    if (Array.isArray(schema)) {\n\n      for (const property in schema) {\n        if (schema.hasOwnProperty(property)) {\n          this.getQuestions(schema[property], foundArray);\n        }\n      }\n    }\n\n    if (schema && !Array.isArray(schema) && typeof schema === 'object') {\n      if (schema.questionOptions) {\n        if (schema.questionOptions.rendering === 'group' ||\n          schema.questionOptions.rendering === 'repeating') {\n          // schema.questions = this.getGroupMembers(schema.questions);\n          foundArray.push(this.toModel(schema, schema.questionOptions.rendering));\n        } else if (schema.questionOptions.rendering === 'field-set') {\n        } else {\n          foundArray.push(this.toModel(schema, schema.questionOptions.rendering));\n        }\n      } else {\n        for (const o in schema) {\n          if (schema.hasOwnProperty(o)) {\n            this.getQuestions(schema[o], foundArray);\n          }\n        }\n      }\n    }\n\n  }\n\n  getChildrenQuestionModels(schema: any): any {\n    const children = [];\n    this.getQuestions(schema, children);\n    return children;\n\n  }\n\n  toModel(schema: any, renderType: string): any {\n    if (renderType === 'ui-select-extended') {\n      renderType = schema.type;\n    }\n    if (!schema.id) {\n      schema['id'] = this.generateId(10);\n    }\n\n    if (schema.questionOptions &&\n      (schema.questionOptions.showDate === true ||\n        schema.questionOptions.showDate === 'true')) {\n      schema = this.convertOldVersionComplexObsQuestionToNewVersion(schema);\n      renderType = 'field-set';\n    }\n\n    switch (renderType) {\n      case 'select':\n        return this.toSelectQuestion(schema);\n      case 'numeric':\n        return this.toNumericQuestion(schema);\n      case 'number':\n        return this.toNumberQuestion(schema);\n      case 'encounterDatetime':\n        return this.toEncounterDatetimeQuestion(schema);\n      case 'date':\n        return this.toDateQuestion(schema);\n      case 'multiCheckbox':\n        return this.toMultiCheckboxQuestion(schema);\n      case 'drug':\n        return this.toDrugQuestion(schema);\n      case 'problem':\n        return this.toProblemQuestion(schema);\n      case 'group':\n        return this.toGroupQuestion(schema);\n      case 'field-set':\n        return this.toFieldSetQuestion(schema);\n      case 'repeating':\n        return this.toRepeatingQuestion(schema);\n      case 'personAttribute':\n        return this.toPersonAttributeQuestion(schema);\n      case 'text':\n        return this.toTextQuestion(schema);\n      case 'textarea':\n        return this.toTextAreaQuestion(schema);\n      case 'textarea':\n        return this.toTextAreaQuestion(schema);\n      case 'select-concept-answers':\n        return this.toConceptAnswerSelect(schema);\n      case 'encounterLocation':\n        return this.toEncounterLocationQuestion(schema);\n      case 'encounterDatetime':\n        return this.toEncounterDatetimeQuestion(schema);\n      case 'encounterProvider':\n        return this.toEncounterProviderQuestion(schema);\n      case 'radio':\n        return this.toCheckBoxQuestion(schema);\n      case 'checkbox':\n        return this.toCheckBoxQuestion(schema);\n        case 'encounterProvider':\n        return this.toEncounterProviderQuestion(schema);\n      default:\n        console.warn('New Schema Question Type found.........' + renderType);\n        return this.toTextQuestion(schema);\n    }\n\n  }\n\n  convertOldVersionComplexObsQuestionToNewVersion(schemaQuestion: any) {\n    const converted: any = {};\n    converted.type = 'complex-obs';\n    converted.label = schemaQuestion.label;\n    converted.id = 'complex_' + schemaQuestion.id;\n    converted.questionOptions = {};\n    converted.questionOptions.concept = schemaQuestion.questionOptions.concept;\n    converted.questionOptions.rendering = 'field-set';\n    converted.questions = [];\n    converted.validators = [];\n\n    const mainField: any = JSON.parse(JSON.stringify(schemaQuestion));\n    mainField.type = 'complex-obs-child';\n    delete mainField.questionOptions.showDate;\n    delete mainField.questionOptions.shownDateOptions;\n    mainField.questionOptions.obsField = 'value';\n\n    const dateField: any = {};\n    dateField.type = 'complex-obs-child';\n    dateField.label = 'Date of ' + mainField.label;\n    dateField.id = 'date_' + mainField.id;\n    dateField.questionOptions = {};\n    dateField.questionOptions.concept = schemaQuestion.questionOptions.concept;\n    dateField.questionOptions.rendering = 'date';\n    dateField.questionOptions.obsField = 'obsDatetime';\n    const dateOptions: any = (Object as any).assign({},\n    schemaQuestion.questionOptions.shownDateOptions);\n    dateField.validators = dateOptions.validators;\n    dateField.hide = dateOptions.hide;\n\n\n    converted.questions.push(mainField);\n    converted.questions.push(dateField);\n\n    return converted;\n  }\n\n  copyProperties(mappings: any, source: any, destination: QuestionBase) {\n\n    for (const property in source) {\n      if (mappings.hasOwnProperty(property) && destination.hasOwnProperty(mappings[property])) {\n        destination[mappings[property]] = source[property];\n      }\n    }\n  }\n\n  addValidators(schemaQuestion: any): Array<ValidationModel> {\n\n    const validators: Array<ValidationModel> = [];\n\n    if (schemaQuestion.validators) {\n\n      // TODO - add more validator types\n      _.forEach(schemaQuestion.validators, (validator: any) => {\n        switch (validator.type) {\n          case 'date':\n            validators.push(new DateValidationModel(validator));\n            break;\n          case 'js_expression':\n            validators.push(new JsExpressionValidationModel(validator));\n            break;\n          case 'conditionalAnswered':\n            validators.push(new ConditionalValidationModel(validator));\n            break;\n          default:\n            validators.push(new ValidationModel(validator));\n            break;\n        }\n      });\n    }\n\n    const questionOptions = schemaQuestion.questionOptions;\n    const renderingType = questionOptions ? questionOptions.rendering : '';\n    switch (renderingType) {\n      case 'number':\n\n        if (questionOptions.max && questionOptions.min) {\n          validators.push(new MaxValidationModel({\n            type: 'max',\n            max: questionOptions.max\n          }));\n          validators.push(new MinValidationModel({\n            type: 'min',\n            min: questionOptions.min\n          }));\n        }\n\n        break;\n      default:\n        break;\n    }\n\n    // add conditional required validators\n    if (typeof schemaQuestion.required === 'object') {\n\n      const required: any = schemaQuestion.required;\n\n      if (required.type === 'conditionalRequired') {\n\n        validators.push(new ConditionalValidationModel({\n          referenceQuestionId: required.referenceQuestionId,\n          referenceQuestionAnswers: required.referenceQuestionAnswers,\n          type: required.type,\n          message: required.message,\n        }));\n      }\n    }\n\n    return validators;\n  }\n\n  addHistoricalExpressions(schemaQuestion: any, question: QuestionBase): any {\n    if (schemaQuestion.historicalExpression && schemaQuestion.historicalExpression.length > 0) {\n      question.setHistoricalValue(true);\n      if (schemaQuestion.showHistoricalEncounterDate !== undefined) {\n        question.showHistoricalEncounterDate(\n          (schemaQuestion.showHistoricalEncounterDate === 'true'));\n      } else {\n        question.showHistoricalEncounterDate();\n      }\n      const origValue = this.historicalHelperService.evaluate(schemaQuestion.historicalExpression,\n        this.dataSources);\n      question.historicalDataValue = origValue;\n      if (schemaQuestion.historicalPrepopulate) {\n        question.defaultValue = origValue;\n      }\n    }\n  }\n\n  addCalculatorProperty(schemaQuestion: any, question: QuestionBase): any {\n\n    if (schemaQuestion.questionOptions &&\n      typeof schemaQuestion.questionOptions.calculate === 'object') {\n      question.calculateExpression = schemaQuestion.questionOptions.calculate.calculateExpression;\n    }\n\n  }\n\n  addAlertProperty(schemaQuestion: any, question: QuestionBase): any {\n    if (schemaQuestion.alert) {\n      question.alert = schemaQuestion.alert;\n    }\n    // if (typeof schemaQuestion.message === 'object') {\n    //   if (schemaQuestion.message.alertWhenExpression) {\n    //     question.message = schemaQuestion.message.alertWhenExpression;\n    //   }\n    // }\n  }\n\n  addDisableOrHideProperty(schemaQuestion: any, question: QuestionBase): any {\n\n    if (!!schemaQuestion.disable) {\n      question.disable = schemaQuestion.disable;\n    }\n\n    if (typeof schemaQuestion.disable === 'object') {\n      question.disable = schemaQuestion.disable.disableWhenExpression;\n    }\n\n    if (!!schemaQuestion.hide) {\n      question.hide = schemaQuestion.hide;\n    }\n    if (typeof schemaQuestion.hide === 'object') {\n\n      if (schemaQuestion.hide.hideWhenExpression) {\n        question.hide = schemaQuestion.hide.hideWhenExpression;\n      }\n    }\n  }\n  private generateId(x) {\n    let s = '_';\n    while (s.length < x && x > 0) {\n      const r = Math.random();\n      s += (r < 0.1 ? Math.floor(r * 100) :\n        String.fromCharCode(Math.floor(r * 26) + (r > 0.5 ? 97 : 65)));\n    }\n    return '_' + s;\n  }\n}\n","import * as _ from 'lodash';\n\nimport { FormFactory } from './form.factory';\nimport { QuestionFactory } from './question.factory';\nimport { DataSources } from '../data-sources/data-sources';\nimport { NodeBase, GroupNode, LeafNode, ArrayNode } from './form-node';\nimport { QuestionBase } from '../question-models/question-base';\nimport { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { AfeFormArray } from '../../abstract-controls-extension/afe-form-array';\n\nexport class Form {\n  public rootNode: GroupNode;\n  public valueProcessingInfo: any = {};\n    public existingOrders: any = {};\n  private _dataSourcesContainer: DataSources;\n  private _showErrors = false;\n  constructor(public schema: any, public formFactory: FormFactory, public questionFactory: QuestionFactory) {\n    this._dataSourcesContainer = new DataSources();\n  }\n\n  get dataSourcesContainer(): DataSources {\n    return this._dataSourcesContainer;\n  }\n\n  searchNodeByPath(node: GroupNode, path, found: Array<NodeBase>) {\n\n    const children: NodeBase = node.children;\n\n    for (const key in children) {\n\n      if (children.hasOwnProperty(key)) {\n\n        const child: NodeBase = children[key];\n\n        if (child instanceof GroupNode) {\n\n          if (path === child.path) {\n            found.push(child);\n            return found;\n          }\n\n          this.searchNodeByPath(child, path, found);\n        } else if (child instanceof LeafNode) {\n\n          if (path === child.path) {\n            found.push(child);\n            return found;\n          }\n        } else if (child instanceof ArrayNode) {\n\n          if (path === child.path) {\n            found.push(child);\n            return found;\n          }\n\n          const aChild: ArrayNode = child as ArrayNode;\n\n          aChild.children.forEach(aChildNode => {\n            this.searchNodeByPath(aChildNode, path, found);\n          });\n        }\n      }\n    }\n\n    return found;\n  }\n\n  searchNodeByQuestionId(questionId: string, questionType?: string): Array<NodeBase> {\n    const found = [];\n    if (questionType) {\n      this.searchNodeByQuestionType(this.rootNode, questionType, found);\n    } else {\n      this.findNodesByQuestionId(this.rootNode, questionId, found);\n    }\n    return found;\n  }\n\n  searchNodeByQuestionType(rootNode: any, questionType: string , found: Array<NodeBase>) {\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this.searchNodeByQuestionType(nodeAsGroup.children[o], questionType, found);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this.searchNodeByQuestionType(node, questionType, found);\n      });\n    }\n\n    if (rootNode instanceof LeafNode) {\n      const questionBase: QuestionBase = rootNode.question;\n\n      if (questionBase.extras && questionBase.extras.type && questionBase.extras.type === questionType) {\n        found.push(rootNode);\n      }\n    }\n  }\n\n  private findNodesByQuestionId(rootNode: NodeBase, questionId: string,\n    results: Array<NodeBase>) {\n    if (rootNode.question.key === questionId) {\n      results.push(rootNode);\n    }\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this.findNodesByQuestionId(nodeAsGroup.children[o], questionId, results);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this.findNodesByQuestionId(node, questionId, results);\n      });\n    }\n  }\n\n\n\n  get valid() {\n\n    return this.rootNode.control.valid;\n  }\n\n  set showErrors(show: boolean) {\n    this._showErrors = show;\n  }\n\n  get showErrors() {\n    return this._showErrors;\n  }\n\n  markInvalidControls(node: GroupNode, invalidControlNodes?: any) {\n\n\n    const children: NodeBase = node.children;\n\n    for (const key in children) {\n\n      if (children.hasOwnProperty(key)) {\n\n        const child: NodeBase = children[key];\n\n        if (child instanceof GroupNode) {\n\n          this.markInvalidControls(child, invalidControlNodes);\n        } else if (child instanceof LeafNode) {\n\n          const questionBase: QuestionBase = (child as LeafNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n\n            const c: AfeFormControl | AfeFormArray = child.control as AfeFormControl | AfeFormArray;\n\n            if (!c.valid && !c.disabled) {\n              if (invalidControlNodes) {\n                invalidControlNodes.push(child);\n              }\n\n              c.markAsTouched();\n            }\n          }\n        } else if (child instanceof ArrayNode) {\n          const arrayNode: ArrayNode = child as ArrayNode;\n\n          if (arrayNode && arrayNode.children && arrayNode.children.length > 0) {\n\n            _.forEach(arrayNode.children, (groupNode: any) => {\n              this.markInvalidControls(groupNode, invalidControlNodes);\n            });\n          }\n        }\n      }\n    }\n\n    return invalidControlNodes;\n  }\n\n  updateHiddenDisabledStateForAllControls() {\n    this._updateHiddenDisabledStateForAllControls(this.rootNode);\n  }\n\n\n  updateAlertsForAllControls() {\n    this._updateAlertsForAllControls(this.rootNode);\n  }\n\n  private _updateAlertsForAllControls(rootNode: NodeBase) {\n    if (rootNode.control) {\n      if ((rootNode.control as any).updateAlert) {\n        (rootNode.control as any).updateAlert();\n      }\n    }\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this._updateAlertsForAllControls(nodeAsGroup.children[o]);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this._updateAlertsForAllControls(node);\n      });\n    }\n\n  }\n  private _updateHiddenDisabledStateForAllControls(rootNode: NodeBase) {\n    if (rootNode.control) {\n      if ((rootNode.control as any).updateDisabledState) {\n        (rootNode.control as any).updateDisabledState();\n      }\n\n      if ((rootNode.control as any).updateHiddenState) {\n        (rootNode.control as any).updateHiddenState();\n      }\n    }\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this._updateHiddenDisabledStateForAllControls(nodeAsGroup.children[o]);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this._updateHiddenDisabledStateForAllControls(node);\n      });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n// import { AbstractControl } from '@angular/forms';\n\nimport { LeafNode, GroupNode, ArrayNode, NodeBase } from './form-node';\nimport { QuestionBase, NestedQuestion, RepeatingQuestion, QuestionGroup\n} from '../question-models/models';\nimport { FormControlService } from './form-control.service';\nimport { QuestionFactory } from './question.factory';\nimport { AfeFormGroup, AfeControlType, AfeFormArray\n} from '../../abstract-controls-extension';\nimport { ControlRelationsFactory } from './control-relations.factory';\nimport { Validations } from '../validators/validations';\n\nimport { Form } from './form';\n\n@Injectable()\nexport class FormFactory {\n    public hd: any = {\n        getValue: () => {\n            return 20;\n        }\n    };\n\n    constructor(public controlService: FormControlService,\n        public questionFactroy: QuestionFactory, public controlRelationsFactory: ControlRelationsFactory) {\n    }\n\n    createForm(schema: any, dataSource?: any): Form {\n        const form: Form = new Form(schema, this, this.questionFactroy);\n        if (dataSource) {\n            for (const key in dataSource) {\n                if (dataSource.hasOwnProperty(key)) {\n                    form.dataSourcesContainer.registerDataSource(key, dataSource[key], false);\n                }\n            }\n        }\n        const question = this.questionFactroy.createQuestionModel(schema, form);\n        form.rootNode = this.createNode(question, null, null, form) as GroupNode;\n\n        this.buildRelations(form.rootNode);\n        form.updateHiddenDisabledStateForAllControls();\n        form.updateAlertsForAllControls();\n        return form;\n    }\n\n    buildRelations(rootNode: GroupNode) {\n\n        Validations.JSExpressionValidatorsEnabled = false;\n        this.controlRelationsFactory.buildRelations(rootNode);\n\n        // enable js expression validations\n        Validations.JSExpressionValidatorsEnabled = true;\n    }\n\n    createNode(question: QuestionBase | NestedQuestion,\n        parentNode?: GroupNode, parentControl?: AfeFormGroup, form?: Form): NodeBase {\n        let node: NodeBase = null;\n        if (question instanceof NestedQuestion) {\n            if (question instanceof RepeatingQuestion) {\n                node = this.createArrayNode(question, parentNode, parentControl, form);\n            } else {\n                node = this.createGroupNode(question, parentNode, parentControl, form);\n            }\n        } else {\n            node = this.createLeafNode(question, parentNode, parentControl, form);\n        }\n        return node;\n    }\n\n    createLeafNode(question: QuestionBase,\n        parentNode: GroupNode, parentControl?: AfeFormGroup, form?: Form): LeafNode {\n        const controlModel = this.controlService.generateControlModel(question, parentControl, false, form);\n        return new LeafNode(question, controlModel, null, form,\n            parentNode ? parentNode.path : undefined);\n    }\n\n    createGroupNode(question: NestedQuestion, parentNode?: GroupNode,\n        parentControl?: AfeFormGroup, form?: Form): GroupNode {\n        const controlModel = this.controlService.generateControlModel(question, parentControl, false, form) as AfeFormGroup;\n        const groupNode = new GroupNode(question, controlModel, null,\n            form, parentNode ? parentNode.path : undefined);\n        this.createNodeChildren(question, groupNode, (controlModel || parentControl), form);\n        return groupNode;\n    }\n\n    createArrayNode(question: NestedQuestion, parentNode?: GroupNode,\n        parentControl?: AfeFormGroup, form?: Form): ArrayNode {\n        const controlModel = this.controlService.generateControlModel(question, parentControl, false, form) as AfeFormGroup;\n        const arrayNode = new ArrayNode(question, controlModel, parentControl,\n            this, form, parentNode ? parentNode.path : undefined);\n        arrayNode.createChildFunc = this.createArrayNodeChild;\n        arrayNode.removeChildFunc = this.removeArrayNodeChild;\n\n        arrayNode.addChildNodeCreatedListener((node: GroupNode) => {\n\n            Validations.JSExpressionValidatorsEnabled = false;\n            this.controlRelationsFactory.buildArrayNodeRelations(node);\n            Validations.JSExpressionValidatorsEnabled = true;\n        });\n        return arrayNode;\n    }\n\n    createNodeChildren(question: NestedQuestion, node: GroupNode,\n        parentControl?: AfeFormGroup, form?: Form): any {\n        question.questions.forEach(element => {\n            const child = this.createNode(element, node, parentControl, form);\n            node.setChild(element.key, child);\n        });\n        return node.children;\n    }\n\n\n    createArrayNodeChild(question: RepeatingQuestion,\n        node: ArrayNode, factory?: FormFactory): GroupNode {\n\n        if (factory === null || factory === undefined) {\n            factory = this;\n        }\n        const groupQuestion: QuestionGroup =\n            new QuestionGroup({\n                key: node.path + '.' + node.children.length + '',\n                type: 'group', extras: question.extras, label: '', questions: question.questions\n            });\n\n        if (question.controlType === AfeControlType.None) {\n            groupQuestion.controlType = question.controlType;\n        }\n\n        const group = factory.createGroupNode(groupQuestion, null, null, node.form);\n        node.children.push(group);\n\n        if (node.control instanceof AfeFormArray) {\n            const nodeControl = node.control as AfeFormArray;\n            nodeControl.setControl(nodeControl.controls.length, group.control);\n        }\n\n        return group;\n    }\n\n    removeArrayNodeChild(index: number, node: ArrayNode) {\n        const nodeToRemove = node.children[index];\n\n        node.children.splice(index, 1);\n        if (node.control !== null || node.control !== undefined) {\n            if (node.control instanceof AfeFormArray) {\n                const control = node.control as AfeFormArray;\n                const controlIndexToRemove = control.controls.indexOf(nodeToRemove.control);\n                if (controlIndexToRemove >= 0) {\n                    control.removeAt(controlIndexToRemove);\n                }\n            }\n        }\n    }\n}\n","import * as _ from 'lodash';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\nimport { NodeBase, ArrayNode, GroupNode, LeafNode } from '../form-factory/form-node';\n\nexport class ObsAdapterHelper {\n    constructor() {\n\n    }\n\n    findObsAnswerToQuestion(node: NodeBase, obsArray: Array<any>): Array<any> {\n        const found = [];\n\n        if (!this.isObsNode(node)) {\n            return found;\n        }\n\n        if (node instanceof LeafNode ||\n            (node instanceof GroupNode &&\n                node.question.extras.type === 'complex-obs')) {\n            _.each(obsArray, (item) => {\n                if (item.concept &&\n                    item.concept.uuid === node.question.extras.questionOptions.concept) {\n                    found.push(item);\n                }\n            });\n\n            return found;\n        }\n\n        // At this point the node is either a group or a repeating node\n\n        const childQuestionsUuids = this.getChildQuestionsConceptUuids(node);\n        if (childQuestionsUuids.length > 0) {\n            _.each(obsArray, (obs) => {\n                if (obs.concept &&\n                    obs.concept.uuid === node.question.extras.questionOptions.concept &&\n                    Array.isArray(obs.groupMembers) &&\n                    this.isSubsetOf(childQuestionsUuids,\n                        this.getGroupMembersConceptUuids(obs))) {\n                    found.push(obs);\n                }\n            });\n        }\n\n        return found;\n    }\n\n    getChildQuestionsConceptUuids(node: NodeBase): Array<string> {\n        const found = [];\n\n        if (node.question.extras && node.question.extras.questions) {\n            _.each(node.question.extras.questions, (question) => {\n                if (question.questionOptions &&\n                    question.questionOptions.concept) {\n                    found.push(question.questionOptions.concept);\n                }\n            });\n        }\n\n        return found;\n    }\n\n    getGroupMembersConceptUuids(obsWithGroupMembers): Array<string> {\n        const found = [];\n\n        if (Array.isArray(obsWithGroupMembers.groupMembers)) {\n            _.each(obsWithGroupMembers.groupMembers,\n                (member) => {\n                    found.push(member.concept.uuid);\n                });\n        }\n\n        return found;\n    }\n\n    isObsNode(node: NodeBase): boolean {\n        return node.question.extras &&\n            (node.question.extras.type === 'obs' ||\n                node.question.extras.type === 'obsGroup' ||\n                node.question.extras.type === 'complex-obs' ||\n                node.question.extras.type === 'complex-obs-child');\n    }\n\n    isSubsetOf(supersetArray: Array<any>, subsetArray: Array<any>): boolean {\n        if (subsetArray.length === 0 && supersetArray.length === 0) {\n            return true;\n        }\n        return subsetArray.every((element): boolean => {\n            return supersetArray.indexOf(element) >= 0;\n        });\n    }\n\n    setSimpleObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            const obsToUse = obs[0];\n\n            // set initial value\n            node.initialValue = obsToUse;\n\n            if (!this.isEmpty(obsToUse.value) && obsToUse.value.uuid) {\n                // answer to the obs is a concept, use uuid value\n                this.setNodeFormControlValue(node, obsToUse.value.uuid);\n            } else if (!this.isEmpty(obsToUse.value)) {\n                this.setNodeFormControlValue(node, obsToUse.value);\n            }\n        }\n    }\n\n    setMultiselectObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            node.initialValue = obs;\n\n            const obsUuids = [];\n            for (const m of obs) {\n                obsUuids.push(m.value.uuid);\n            }\n\n            this.setNodeFormControlValue(node, obsUuids);\n        }\n    }\n\n    setComplexObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            let valueField: LeafNode; // essential memmber\n            let dateField: LeafNode; // other member to be manipulated by user\n\n            const nodeAsGroup = (node as GroupNode);\n            // tslint:disable-next-line:forin\n            for (const o in nodeAsGroup.children) {\n                if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                    valueField = nodeAsGroup.children[o];\n                }\n\n                if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                    dateField = nodeAsGroup.children[o];\n                }\n            }\n\n            // set the obs value here\n            this.setNodeValue(valueField, obs);\n            node.initialValue = valueField.initialValue;\n\n            // set the date value here\n            dateField.initialValue = valueField.initialValue;\n            this.setNodeFormControlValue(dateField, valueField.initialValue.obsDatetime);\n        }\n    }\n\n    setGroupObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            const groupNode = node as GroupNode;\n            groupNode.initialValue = obs[0];\n            // tslint:disable-next-line:forin\n            for (const o in groupNode.children) {\n                this.setNodeValue(groupNode.children[o], obs[0].groupMembers);\n            }\n        }\n    }\n\n    setRepeatingGroupObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            const arrayNode = node as ArrayNode;\n            arrayNode.initialValue = obs;\n\n            for (let i = 0; i < obs.length; i++) {\n                const createdNode = arrayNode.createChildNode();\n                this.setGroupObsNodeValue(createdNode, [obs[i]]);\n            }\n        }\n    }\n\n    setNodeValue(node: NodeBase, obs: Array<any>) {\n        switch (this.getObsNodeType(node)) {\n            case 'unknown':\n                if (node instanceof GroupNode) {\n                    const groupNode = node as GroupNode;\n                    // tslint:disable-next-line:forin\n                    for (const o in groupNode.children) {\n                        this.setNodeValue(groupNode.children[o], obs);\n                    }\n                    break;\n                }\n                if (node instanceof ArrayNode) {\n                    const arrayNode = node as ArrayNode;\n                    for (let i = 0; i < arrayNode.children.length; i++) {\n                        this.setNodeValue(arrayNode.children[i], obs);\n                    }\n                    break;\n                }\n                break;\n            case 'simple':\n                // search asnwering obs at this point\n                const answeringObs = this.findObsAnswerToQuestion(node, obs);\n\n                // set answer here\n                this.setSimpleObsNodeValue(node, answeringObs);\n                break;\n\n            case 'multiselect':\n                // search asnwering obs at this point\n                const multiselectObs = this.findObsAnswerToQuestion(node, obs);\n\n                // set answer here\n                this.setMultiselectObsNodeValue(node, multiselectObs);\n                break;\n\n\n            case 'complex':\n                // search asnwering obs at this point\n                const complexObs = this.findObsAnswerToQuestion(node, obs);\n\n                // set answer here\n                this.setComplexObsNodeValue(node, complexObs);\n                break;\n\n            case 'group':\n                const groupObs = this.findObsAnswerToQuestion(node, obs);\n\n                if (groupObs.length > 0) {\n                    this.setGroupObsNodeValue(node, groupObs);\n                }\n\n                break;\n            case 'repeatingGroup':\n                const repeatingGroupObs = this.findObsAnswerToQuestion(node, obs);\n\n                if (repeatingGroupObs.length > 0) {\n                    this.setRepeatingGroupObsNodeValue(node, repeatingGroupObs);\n                }\n\n                break;\n            default:\n                console.error('Unknown obs node', node);\n                break;\n        }\n    }\n\n    setNodeFormControlValue(node: NodeBase, value) {\n        node.control.setValue(value);\n        // TODO: Determine if we need this call\n        // node.control.updateValueAndValidity();\n\n        // TODO: Remove this hack and put it in appropriate place\n        if (node.question.enableHistoricalValue && node.initialValue !== undefined) {\n            node.question.setHistoricalValue(false);\n        }\n    }\n\n    getObsNodeType(node: NodeBase): string {\n        if (this.isObsNode(node)) {\n            if (node instanceof LeafNode &&\n                ( node.question.extras.questionOptions.rendering === 'multiCheckbox' ||\n                node.question.extras.questionOptions.rendering === 'checkbox') ) {\n                return 'multiselect';\n            }\n\n            if (node instanceof LeafNode) {\n                return 'simple';\n            }\n\n            if (node instanceof GroupNode &&\n                node.question.extras.type === 'complex-obs') {\n                return 'complex';\n            }\n\n            if (node instanceof ArrayNode &&\n                node.question.extras.type === 'obsGroup' &&\n                node.question.extras.questionOptions.rendering === 'repeating') {\n                return 'repeatingGroup';\n            }\n\n            if (node instanceof GroupNode &&\n                node.question.extras.type === 'obsGroup') {\n                return 'group';\n            }\n\n            return 'unknownObs';\n        }\n        return 'unknown';\n    }\n\n    // PAYLOAD GENERATION FUNCTIONS\n    getSimpleObsPayload(node: NodeBase): any {\n        // check for empty values first\n        if (this.isEmpty(node.control.value)) {\n            if (node.initialValue) {\n                // Handle case for existing voided obs\n                return {\n                    uuid: node.initialValue.uuid,\n                    voided: true\n                };\n            }\n            return null;\n        }\n\n        // check for exisiting, unchanged values\n        if (node.initialValue && !this.simpleNodeValueChanged(node)) {\n            return null;\n        }\n\n        // all numbers, text, concepts answers are handled in the same way\n        // no need for further formatting in this case\n        const obs: any = {\n            concept: node.question.extras.questionOptions.concept,\n            value: node.control.value\n        };\n\n        // handle date fields\n        if (node.question.extras.questionOptions.rendering === 'date') {\n            obs.value = this.toOpenMrsDateTimeString(node.control.value);\n        }\n\n        if (node.initialValue) {\n            // for existing cases, delete concept property, and add uuid\n            delete obs.concept;\n            obs.uuid = node.initialValue.uuid;\n        }\n\n        return obs;\n    }\n\n    getComplexObsPayload(node: NodeBase) {\n        let valueField: LeafNode; // essential memmber\n        let dateField: LeafNode; // other member to be manipulated by user\n\n        const nodeAsGroup = (node as GroupNode);\n        // tslint:disable-next-line:forin\n        for (const o in nodeAsGroup.children) {\n            if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                valueField = nodeAsGroup.children[o];\n            }\n\n            if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                dateField = nodeAsGroup.children[o];\n            }\n        }\n\n        const valuePayload = this.getObsNodePayload(valueField);\n\n        // set obs datetime for the generated payload\n        if (valuePayload.length > 0) {\n            valuePayload[0].obsDatetime = this.toOpenMrsDateTimeString(dateField.control.value);\n            return valuePayload[0];\n        } else if (valuePayload.length === 0 && node.initialValue) {\n            // determine if date changed\n            if (!this.areDatesEqual(node.initialValue.obsDatetime, dateField.control.value)) {\n                const payload: any = {\n                    uuid: node.initialValue.uuid,\n                };\n                payload.obsDatetime = this.toOpenMrsDateTimeString(dateField.control.value);\n                return payload;\n            }\n        }\n        return null;\n    }\n\n    getMultiselectObsPayload(node: NodeBase): Array<any> {\n        const payload: Array<any> = [];\n\n        const existingUuids = [];\n\n        // add voided obs i.e. deleted options\n        if (Array.isArray(node.initialValue)) {\n            _.each(node.initialValue, (item) => {\n                existingUuids.push(item.value.uuid);\n                if (Array.isArray(node.control.value)) {\n                    if (node.control.value.indexOf(item.value.uuid) < 0) {\n                        payload.push({\n                            uuid: item.uuid,\n                            voided: true\n                        });\n                    }\n                } else {\n                    // every value was deleted\n                    payload.push({\n                        uuid: item.uuid,\n                        voided: true\n                    });\n                }\n            });\n        }\n\n        // add new obs i.e they didn't exisit originally\n        if (Array.isArray(node.control.value)) {\n            _.each(node.control.value, (item) => {\n                if (existingUuids.indexOf(item) < 0) {\n                    payload.push({\n                        concept: node.question.extras.questionOptions.concept,\n                        value: item\n                    });\n                }\n            });\n        }\n\n        return payload;\n    }\n\n    getGroupPayload(node: NodeBase) {\n        const nodeAsGroup: GroupNode = node as GroupNode;\n\n        let childrenPayload = [];\n        _.each(nodeAsGroup.children, (child) => {\n            const payload = this.getObsNodePayload(child);\n            if (payload.length > 0) {\n                childrenPayload = childrenPayload.concat(payload);\n            }\n        });\n\n        if (childrenPayload.length === 0) {\n            return null;\n        }\n\n        const groupPayload: any = {\n            groupMembers: childrenPayload\n        };\n\n        if (nodeAsGroup.initialValue) {\n            groupPayload.uuid = nodeAsGroup.initialValue.uuid;\n\n        } else {\n            groupPayload.concept = nodeAsGroup.question.extras.questionOptions.concept;\n        }\n\n        return groupPayload;\n    }\n\n    getRepeatingGroupPayload(node: NodeBase) {\n        const nodeAsArray: ArrayNode = node as ArrayNode;\n\n        let childrenPayload = [];\n\n        const groupsUuidsAfterEditting = [];\n        _.each(nodeAsArray.children, (child) => {\n            const payload = this.getObsNodePayload(child);\n            if (payload.length > 0) {\n                childrenPayload = childrenPayload.concat(payload);\n            }\n            if (child.initialValue && child.initialValue.uuid) {\n                groupsUuidsAfterEditting.push(child.initialValue.uuid);\n            }\n        });\n\n        // void deleted groups\n        // console.log('groupsUuidsAfterEditting', groupsUuidsAfterEditting);\n        if (nodeAsArray.initialValue && Array.isArray(nodeAsArray.initialValue)) {\n            _.each(nodeAsArray.initialValue, (obs) => {\n                if (groupsUuidsAfterEditting.indexOf(obs.uuid) < 0) {\n                    const voidedGroup = {\n                        uuid: obs.uuid,\n                        voided: true\n                    };\n                    childrenPayload.push(voidedGroup);\n                }\n            });\n        }\n\n        if (childrenPayload.length <= 0) {\n            return null;\n        }\n        return childrenPayload;\n\n    }\n\n    getObsNodePayload(node: NodeBase): Array<any> {\n        let payload = [];\n\n        switch (this.getObsNodeType(node)) {\n            case 'unknown':\n                if (node instanceof GroupNode) {\n                    const groupNode = node as GroupNode;\n                    // tslint:disable-next-line:forin\n                    for (const o in groupNode.children) {\n                        const groupNodePayoad = this.getObsNodePayload(groupNode.children[o]);\n                        if (Array.isArray(groupNodePayoad) && groupNodePayoad.length > 0) {\n                            payload = payload.concat(groupNodePayoad);\n                        }\n                    }\n                    break;\n                }\n                if (node instanceof ArrayNode) {\n                    const arrayNode = node as ArrayNode;\n                    for (let i = 0; i < arrayNode.children.length; i++) {\n                        const arrayNodePayload = this.getObsNodePayload(arrayNode.children[i]);\n                        if (Array.isArray(arrayNodePayload) && arrayNodePayload.length > 0) {\n                            payload = payload.concat(arrayNodePayload);\n                        }\n                    }\n                    break;\n                }\n                break;\n            case 'simple':\n                const simpleObs = this.getSimpleObsPayload(node);\n                if (simpleObs !== null) {\n                    payload.push(simpleObs);\n                }\n                break;\n\n            case 'multiselect':\n                const multiselectObs = this.getMultiselectObsPayload(node);\n\n                if (Array.isArray(multiselectObs) && multiselectObs.length > 0) {\n                    payload = payload.concat(multiselectObs);\n                }\n                break;\n\n            case 'complex':\n                const complexObs = this.getComplexObsPayload(node);\n                if (complexObs !== null) {\n                    payload.push(complexObs);\n                }\n                break;\n\n            case 'group':\n                const groupedObs = this.getGroupPayload(node);\n                if (groupedObs && groupedObs !== null) {\n                    payload.push(groupedObs);\n                }\n                break;\n            case 'repeatingGroup':\n                const repeatingGroupedObs = this.getRepeatingGroupPayload(node);\n                if (Array.isArray(repeatingGroupedObs) && repeatingGroupedObs.length > 0) {\n                    payload = payload.concat(repeatingGroupedObs);\n                }\n                break;\n            default:\n                break;\n        }\n\n        return payload;\n    }\n\n    simpleNodeValueChanged(node: NodeBase): boolean {\n        if (node.initialValue) {\n            if (node.initialValue.value && node.initialValue.value.uuid) {\n                // question whose answer is a concept\n                return node.control.value !== node.initialValue.value.uuid;\n            }\n\n            if (node.question.extras.questionOptions.rendering === 'date') {\n                return !this.areDatesEqual(node.control.value, node.initialValue.value);\n            }\n            return node.control.value !== node.initialValue.value;\n        }\n        return false;\n    }\n\n    areDatesEqual(date1, date2) {\n        return moment(date1).isSame(date2);\n    }\n\n    isEmpty(value): boolean {\n        if (value === '' ||\n            value === null ||\n            value === undefined\n            // || value === [] ||\n            // value === {}\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    toOpenMrsDateTimeString(datetime: string): string {\n        if (this.isEmpty(datetime)) {\n            return undefined;\n        }\n        const val = datetime.substring(0, 19).replace('T', ' ');\n        return this.isEmpty(val) ? undefined : val;\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport 'rxjs';\n\nimport * as _ from 'lodash';\n\nimport { LeafNode, GroupNode } from '../form-factory/form-node';\nimport { Form } from '../form-factory/form';\nimport { ValueAdapter } from './value.adapter';\nimport { ObsAdapterHelper } from './obs-adapter-helper';\n\n@Injectable()\nexport class ObsValueAdapter implements ValueAdapter {\n\n    constructor(private helper: ObsAdapterHelper) { }\n\n    generateFormPayload(form: Form) {\n        return this.helper.getObsNodePayload(form.rootNode);\n        // TODO: Get rid of the section below when the helper is stable.\n        // // Traverse  to get all nodes\n        // let pages = this.traverse(form.rootNode);\n        // // Extract actual question nodes\n        // let questionNodes = this.getQuestionNodes(pages);\n        // // Get obs Payload\n        // return this.getObsPayload(questionNodes);\n    }\n\n    populateForm(form: Form, payload) {\n        this.helper.setNodeValue(form.rootNode, payload);\n\n        // TODO: Get rid of the section below when the helper is stable.\n        // // Traverse  to get all nodes\n        // let pages = this.traverse(form.rootNode);\n        // // Extract actual question nodes\n        // let questionNodes = this.getQuestionNodes(pages);\n        // // Extract set obs\n        // this.setValues(questionNodes, payload);\n    }\n\n    // TODO: Get rid of all the functions below as they will not be needed\n    // once the helper is stable\n\n    setValues(nodes, payload?, forcegroup?) {\n        if (nodes) {\n            for (const node of nodes) {\n                if (node instanceof LeafNode) {\n                    this.setObsValue(node, payload);\n                    if (node.question.enableHistoricalValue && node.initialValue !== undefined) {\n                        node.question.setHistoricalValue(false);\n                    }\n\n                } else if (node.question && node.question.extras && node.question.renderingType === 'group' || forcegroup) {\n                    const groupObs = _.find(payload, (o: any) => {\n                        return o.concept.uuid === node.question.extras.questionOptions.concept && o.groupMembers;\n                    });\n                    if (groupObs) {\n                        if (node.node) {\n                            node.node['initialValue'] = groupObs;\n                        }\n\n                        this.setValues(node.groupMembers, groupObs.groupMembers);\n                    }\n                    if (forcegroup && node.payload) {\n                        this.setValues(node.groupMembers, node.payload.groupMembers);\n                    }\n\n\n                } else if (node instanceof GroupNode && node.question.extras.type === 'complex-obs') {\n                    this.setComplexObsValue(node, payload);\n                } else if (node.question && node.question.extras && node.question.renderingType === 'repeating' && !forcegroup) {\n                    this.setRepeatingGroupValues(node, payload);\n                    node.node.control.updateValueAndValidity();\n                } else {\n                    throw new Error('not implemented');\n                }\n            }\n        }\n    }\n\n    setObsValue(node, payload) {\n        if (node.question && node.question.extras &&\n            (node.question.extras.type === 'obs' ||\n            (node.question.extras.type === 'complex-obs-child' &&\n            node.question.extras.questionOptions.obsField === 'value')) &&\n            node.question.extras.questionOptions.rendering !== 'multiCheckbox' ||\n            node.question.extras.questionOptions.rendering !== 'checkbox') {\n            const obs = _.find(payload, (o: any) => {\n                return o.concept.uuid === node.question.extras.questionOptions.concept;\n            });\n            if (obs) {\n                if (obs.value instanceof Object) {\n                    node.control.setValue(obs.value.uuid);\n                    node.control.updateValueAndValidity();\n                } else {\n                    node.control.setValue(obs.value);\n                    node.control.updateValueAndValidity();\n                }\n                node['initialValue'] = { obsUuid: obs.uuid, value: obs.value };\n            }\n        } else {\n            const multiObs = _.filter(payload, (o: any) => {\n                return o.concept.uuid === node.question.extras.questionOptions.concept;\n            });\n            if (multiObs && multiObs.length > 0) {\n                node.control.setValue(this.getMultiselectValues(multiObs));\n                node.control.updateValueAndValidity();\n                node['initialValue'] = multiObs;\n            }\n        }\n    }\n\n    setComplexObsValue(node, payload) {\n        let valueField: any;\n        let dateField: any;\n\n        // tslint:disable-next-line:forin\n        for (const o in node.children) {\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                valueField = node.children[o];\n            }\n\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                dateField = node.children[o];\n            }\n        }\n        // set the usual obs value\n        this.setObsValue(valueField, payload);\n\n        // set the obs date\n        const obs = _.find(payload, (o: any) => {\n            return o.concept.uuid === node.question.extras.questionOptions.concept;\n        });\n\n        if (obs) {\n            dateField['initialValue'] = { obsUuid: obs.uuid, value: obs.obsDatetime };\n            (dateField as LeafNode).control.setValue(obs.obsDatetime);\n            (dateField as LeafNode).control.updateValueAndValidity();\n        }\n    }\n\n    getMultiselectValues(multiObs) {\n        const values = [];\n        for (const m of multiObs) {\n            values.push(m.value.uuid);\n        }\n        return values;\n    }\n\n    setRepeatingGroupValues(node, payload) {\n        const groupRepeatingObs = _.filter(payload, (o: any) => {\n            const found = o.concept.uuid === node.question.extras.questionOptions.concept;\n            let intersect = false;\n            if (found && o.groupMembers) {\n                const obs = o.groupMembers.map((a) => {\n                    return a.concept.uuid;\n                });\n\n                const schemaQuestions = node.question.questions.map((a) => {\n                    return a.extras.questionOptions.concept;\n                });\n\n                intersect = (_.intersection(obs, schemaQuestions).length > 0);\n            }\n            return found && intersect;\n        });\n        if (groupRepeatingObs.length > 0) {\n            node.node['initialValue'] = groupRepeatingObs;\n            for (let i = 0; i < groupRepeatingObs.length; i++) {\n                node.node.createChildNode();\n            }\n        }\n        const groups = [];\n        let index = 0;\n        for (const child of node.node.children) {\n            const children = Object.keys(child.children).map(function (key) { return child.children[key]; });\n            const groupPayload = groupRepeatingObs[index];\n            groups.push({ question: node.question, groupMembers: children, payload: groupPayload });\n            index++;\n        }\n        this.setValues(groups, groupRepeatingObs, true);\n    }\n\n    getQuestionNodes(pages) {\n        const merged = [];\n        const arrays = [];\n        for (const page of pages) {\n            for (const section of page.page) {\n                arrays.push(section.section);\n            }\n        }\n        return merged.concat.apply([], arrays);\n    }\n\n    repeatingGroup(nodes) {\n        const toReturn = [];\n        for (const node of nodes) {\n            toReturn.push({ question: node.question, groupMembers: this.traverse(node) });\n        }\n        return toReturn;\n    }\n\n    processGroup(obs, obsPayload) {\n        if (obs.question && obs.question.extras && obs.question.extras.questionOptions.rendering === 'group') {\n            const members = _.filter(this.getObsPayload(obs.groupMembers), (o: any) => {\n                return o.value !== '';\n            });\n\n            const mappedMembers = members.map((a) => {\n                return a.voided;\n            });\n            if (members.length > 0 && mappedMembers.every(Boolean)) {\n                obsPayload.push({\n                    uuid: obs.node.initialValue.uuid,\n                    voided: true\n                });\n            } else if (members.length > 0) {\n                if (obs.node.initialValue) {\n                    obsPayload.push({\n                        uuid: obs.node.initialValue.uuid,\n                        groupMembers: members\n                    });\n                } else {\n                    obsPayload.push({\n                        concept: obs.question.extras.questionOptions.concept,\n                        groupMembers: members\n                    });\n                }\n            }\n        }\n    }\n\n    mapInitialGroup(group) {\n        let current = {};\n        for (const member of group.groupMembers) {\n            let value: any = '';\n            if (member.value instanceof Object) {\n                value = member.value.uuid;\n            } else if (member.value) {\n                value = member.value;\n            } else if (member.groupMembers && member.groupMembers.length > 0) {\n                current = this.mapInitialGroup(group);\n            }\n            current[member.concept.uuid + ':' + value] = value;\n        }\n        return current;\n    }\n\n    mapModelGroup(node, value) {\n        const current = {};\n        for (const key in value) {\n            if (value.hasOwnProperty(key)) {\n                const groupQuestion: any = _.find(node.question.questions, { key: key });\n                const modelValue = value[key];\n                if (modelValue instanceof Object) {\n                } else if (modelValue !== '') {\n                    current[groupQuestion.extras.questionOptions.concept + ':'\n                        + modelValue] = modelValue;\n                }\n            }\n\n        }\n        return current;\n    }\n\n    processRepeatingGroups(node, obsPayload) {\n        const initialValues = [];\n        if (node.node.initialValue) {\n            for (const group of node.node.initialValue) {\n                initialValues.push({ uuid: group.uuid, value: this.mapInitialGroup(group) });\n            }\n        }\n        const repeatingModel = [];\n        for (const value of node.node.control.value) {\n            repeatingModel.push({ value: this.mapModelGroup(node, value) });\n        }\n        const deleted = this.leftOuterJoinArrays(initialValues, repeatingModel);\n        const newObs = this.leftOuterJoinArrays(repeatingModel, initialValues);\n        const groupConcept = node.question.extras.questionOptions.concept;\n        let newObsPayload = [];\n        if (deleted.length > 0) {\n            const deletedObs = this.createGroupDeletedObs(deleted);\n            for (const d of deletedObs) {\n                obsPayload.push(d);\n            }\n            if (newObs.length > 0) {\n                newObsPayload = this.createGroupNewObs(newObs, groupConcept);\n            }\n        } else {\n            newObsPayload = this.createGroupNewObs(newObs, groupConcept);\n        }\n\n        if (newObsPayload.length > 0) {\n            for (const p of newObsPayload) {\n                obsPayload.push(p);\n            }\n        }\n    }\n\n    leftOuterJoinArrays(first, second) {\n        const unique = first.filter(function (obj) {\n            return !second.some(function (obj2) {\n                return _.isEqual(obj.value, obj2.value);\n            });\n        });\n        return unique;\n    }\n\n    createGroupNewObs(payload, groupConcept) {\n        const newPayload = [];\n        for (const obs of payload) {\n            const groupPayload = [];\n            /* tslint:disable */\n            for (let key in obs.value) {\n                let concept = key.split(':')[0];\n                let value = key.split(':')[1];\n                groupPayload.push({ concept: concept, value: value });\n            }\n            newPayload.push({ concept: groupConcept, groupMembers: groupPayload })\n            /* tslint:enable */\n        }\n        return newPayload;\n    }\n\n    createGroupDeletedObs(payload) {\n        const deletedObs = [];\n        for (const d of payload) {\n            deletedObs.push({ uuid: d.uuid, voided: true });\n        }\n        return deletedObs;\n    }\n\n    getExactTime(datetime: string) {\n        return datetime.substring(0, 19).replace('T', ' ');\n    }\n\n    processObs(obs, obsPayload) {\n        if (obs.control && obs.question.extras) {\n            const obsValue = {\n                concept: obs.question.extras.questionOptions.concept,\n                value: (obs.question.extras.questionOptions.rendering === 'date' && !this.isEmpty(obs.control.value)) ?\n                    this.getExactTime(obs.control.value) : obs.control.value\n            };\n\n            if (obs.question.extras.questionOptions.rendering === 'multiCheckbox' ||\n            obs.question.extras.questionOptions.rendering === 'checkbox') {\n                const multis = this.processMultiSelect(obs.question.extras.questionOptions.concept, obs.control.value);\n                if (obs.initialValue) {\n                    const mappedInitial = obs.initialValue.map((a) => {\n                        return { uuid: a.uuid, value: { concept: a.concept.uuid, value: a.value.uuid } };\n                    });\n                    const mappedCurrent = multis.map((a) => {\n                        return { value: a };\n                    });\n                    const deletedObs = this.leftOuterJoinArrays(mappedInitial, mappedCurrent);\n                    const newObs = this.leftOuterJoinArrays(mappedCurrent, mappedInitial);\n                    this.processDeletedMultiSelectObs(deletedObs, obsPayload);\n                    this.processNewMultiSelectObs(newObs, obsPayload);\n                } else {\n                    this.processNewMultiSelectObs(multis, obsPayload);\n                }\n            } else {\n                if (obs.initialValue && obs.initialValue.value && obsValue) {\n                    this.updateOrVoidObs(obsValue, obs.initialValue, obsPayload);\n                } else if (obsValue.value !== '' && obsValue.value !== null) {\n                    obsPayload.push(obsValue);\n                }\n            }\n        }\n    }\n\n    processComplexObs(node, obsPayload) {\n        let valueField: any;\n        let dateField: any;\n\n        // tslint:disable-next-line:forin\n        for (const o in node.children) {\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                valueField = node.children[o];\n            }\n\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                dateField = node.children[o];\n            }\n        }\n\n        if (valueField) {\n            // process obs as usual\n            this.processObs(valueField, obsPayload);\n\n            // obtain the last inserted obs and set the obsDatetime\n            const createdPayload = obsPayload.length > 0 ? obsPayload[obsPayload.length - 1] : undefined;\n            if (createdPayload &&\n                ((createdPayload.concept && createdPayload.concept === node.question.extras.questionOptions.concept) ||\n                    (valueField.initialValue && createdPayload.uuid === valueField.initialValue.obsUuid))) {\n                if (dateField.initialValue && dateField.control.value !== dateField.initialValue.value) {\n                    createdPayload.obsDatetime = dateField.control.value;\n                }\n            }\n        }\n    }\n\n    processDeletedMultiSelectObs(values, obsPayload) {\n        for (const value of values) {\n            obsPayload.push({ uuid: value.uuid, voided: true });\n        }\n    }\n\n    processNewMultiSelectObs(values, obsPayload) {\n        for (const multi of values) {\n            if (multi.value instanceof Object) {\n                obsPayload.push(multi.value);\n            } else {\n                obsPayload.push(multi);\n            }\n        }\n    }\n\n    updateOrVoidObs(obsValue, initialValue, obsPayload) {\n        if (this.isEmpty(obsValue.value) && initialValue.value) {\n            obsPayload.push({ uuid: initialValue.obsUuid, voided: true });\n        } else if (!this.isEmpty(obsValue.value) && initialValue.value) {\n            obsPayload.push({ uuid: initialValue.obsUuid, value: obsValue.value });\n        }\n    }\n\n    isEmpty(value): boolean {\n        if (value === '' ||\n            value === null ||\n            value === undefined\n            // || value === [] ||\n            // value === {}\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    traverse(o, type?) {\n        const questions = [];\n        if (o.children) {\n            if (o.children instanceof Array) {\n                const returned = this.repeatingGroup(o.children);\n                return returned;\n            }\n            if (o.children instanceof Object) {\n                for (const key in o.children) {\n                    if (o.children.hasOwnProperty(key)) {\n                        switch (o.children[key].question.renderingType) {\n                            case 'page':\n                                const page = this.traverse(o.children[key]);\n                                questions.push({ page: page });\n                                break;\n                            case 'section':\n                                const section = this.traverse(o.children[key]);\n                                questions.push({ section: section });\n                                break;\n                            case 'group':\n                                const qs = this.traverse(o.children[key]);\n                                questions.push({ node: o.children[key], question: o.children[key].question, groupMembers: qs });\n                                break;\n                            case 'repeating':\n                                const rep = this.repeatingGroup(o.children[key].children);\n                                questions.push({ node: o.children[key], question: o.children[key].question, groupMembers: rep });\n                                break;\n                            default:\n                                questions.push(o.children[key]);\n                                break;\n\n                        }\n                    }\n                }\n            }\n\n        }\n        return questions;\n    }\n\n    processMultiSelect(concept, values) {\n        const multiSelectObs = [];\n        if (values && values !== null) {\n            for (const value of values) {\n                const obs = {\n                    concept: concept,\n                    value: value\n                };\n                multiSelectObs.push(obs);\n            }\n        }\n        return multiSelectObs;\n    }\n\n\n    isObs(node) {\n        return (node.question.extras.type === 'obs' ||\n            node.question.extras.type === 'obsGroup' ||\n            node.question.extras.type === 'complex-obs');\n    }\n\n    getObsPayload(nodes) {\n        const obsPayload = [];\n        for (const node of nodes) {\n            if (this.isObs(node)) {\n                if (node.groupMembers, node.question.extras.questionOptions.rendering === 'group') {\n\n                    this.processGroup(node, obsPayload);\n\n                } else if (node.groupMembers, node.question.extras.questionOptions.rendering === 'repeating') {\n                    this.processRepeatingGroups(node, obsPayload);\n                } else if (node instanceof GroupNode && (node as GroupNode).question.extras.type === 'complex-obs') {\n                    this.processComplexObs(node, obsPayload);\n                } else {\n                    this.processObs(node, obsPayload);\n                }\n            }\n        }\n        return obsPayload;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Form } from '../form-factory/form';\nimport { ValueAdapter } from './value.adapter';\nimport * as _ from 'lodash';\n@Injectable()\nexport class OrderValueAdapter implements ValueAdapter {\n    formOrderNodes = [];\n    private provider = '';\n\n    generateFormPayload(form: Form) {\n        this.formOrderNodes = [];\n        this._setOrderProvider(form);\n        this._findTestOrderQuestionNodes(form.rootNode);\n        return this._createOrdersPayload(this.formOrderNodes, form);\n    }\n\n    populateForm(form: Form, payload) {\n        form.existingOrders = payload;\n        this.formOrderNodes = [];\n        this._findTestOrderQuestionNodes(form.rootNode);\n        const existingOrders = this._getExistingOrders(form);\n        this._setOrderValues(this.formOrderNodes, existingOrders);\n    }\n\n    private _setOrderProvider(form: Form) {\n        if (form.valueProcessingInfo.providerUuid) {\n            this.provider = form.valueProcessingInfo.providerUuid;\n        }\n    }\n\n    private _createOrdersPayload(orderNodes, form: Form) {\n        const payload = [];\n        const selectedOrders = [];\n        let deletedOrders = [];\n        const existingOrders = this._getExistingOrders(form);\n        for (const orderNode of orderNodes) {\n            const orderNodeValues = orderNode.control.value;\n            const orders = [];\n            if (existingOrders) {\n                existingOrders.map(function (obj) {\n                    orders[obj.concept] = obj.concept;\n                });\n            }\n\n\n            for (const order in orderNodeValues) {\n                if (orderNodeValues.hasOwnProperty(order)) {\n\n                    const orderValue = orderNodeValues[order][orderNode.question.key];\n\n                    const payloadOrder = this._createPayloadOrder(orderValue, orderNode.question.extras);\n\n                    if (orders[orderValue] !== orderValue && payloadOrder.concept !== '') {\n\n                        payload.push(payloadOrder);\n                    }\n                    selectedOrders[orderValue] = orderValue;\n                    if (payloadOrder.orderNumber === '') {\n                        delete payloadOrder.orderNumber;\n                    }\n                    if (payloadOrder.uuid === '') {\n                        delete payloadOrder.uuid;\n                    }\n                }\n            }\n\n        }\n\n        deletedOrders = this._getDeletedOrders(selectedOrders, existingOrders);\n        return this._addDeletedOrdersToPayload(deletedOrders, payload);\n\n    }\n\n    private _getExistingOrders(form: Form) {\n        if (form.existingOrders && form.existingOrders.orders) {\n            let existingOrders = form.existingOrders.orders.map((o) => {\n                return {\n                    concept: o.concept.uuid,\n                    orderNumber: o.orderNumber,\n                    orderUuid: o.uuid,\n                    voided: o.voided,\n                    dateVoided: o.auditInfo.dateVoided\n                };\n            });\n\n            return existingOrders = _.filter(existingOrders, (order: any) => {\n                if (order.voided === true || order.dateVoided) {\n                    return false;\n                } else {\n                    return true;\n                }\n            });\n        } else {\n            return;\n        }\n\n    }\n\n    private _setOrderValues(node, existingOrders) {\n        this._findTestOrderQuestionNodes(node);\n\n        const orderNodes = this.formOrderNodes;\n        for (const orderNode of orderNodes) {\n            this._setOrderNodeValues(orderNode, existingOrders);\n        }\n    }\n\n    private _addDeletedOrdersToPayload(deletedOrders, payload): any {\n        for (const order in deletedOrders) {\n            if (deletedOrders.hasOwnProperty(order)) {\n                payload.push({ uuid: deletedOrders[order], voided: true });\n            }\n        }\n        return payload;\n    }\n\n    private _createPayloadOrder(orderConcept, quesitonExtras): any {\n        const order = {\n            concept: '',\n            type: '',\n            orderer: '',\n            careSetting: ''\n        };\n        order.concept = orderConcept;\n        order.type = quesitonExtras.questionOptions.orderType;\n        order.orderer = this.provider;\n        order.careSetting = quesitonExtras.questionOptions.orderSettingUuid;\n\n        // delete orderer if provider not provided\n        if (order.orderer === '') {\n            delete order.orderer;\n        }\n\n        return order;\n    }\n\n    private _getDeletedOrders(selectedOrders, existingOrders): any {\n        const deleteOrders = [];\n        if (selectedOrders) {\n            for (const order in existingOrders) {\n                if (existingOrders.hasOwnProperty(order)) {\n                    const existingOrderConcept = existingOrders[order].concept;\n                    const selectedOrder = selectedOrders[existingOrderConcept];\n                    if (selectedOrder !== existingOrderConcept) {\n                        deleteOrders.push(existingOrders[order].orderUuid);\n                    }\n                }\n            }\n        }\n        // console.log('Deleted Orders ', deleteOrders);\n        return deleteOrders;\n    }\n\n    private _setOrderNodeValues(node, orders) {\n        let index = 0;\n        node['initialValue'] = orders;\n        for (const order of orders) {\n            node.createChildNode();\n            const value = {};\n            value[node.question.key] = order.concept;\n            const childNode = node.children[index];\n            childNode.control.setValue(value);\n            childNode['initialValue'] = value;\n            childNode['orderNumber'] = order.orderNumber;\n            // console.log('Set Value', node.children[index].control.value, node, childNode);\n            index++;\n        }\n    }\n\n    private _findTestOrderQuestionNodes(formNode) {\n\n        if (formNode.children) {\n            if (formNode.children instanceof Object) {\n                for (const key in formNode.children) {\n                    if (formNode.children.hasOwnProperty(key)) {\n                        switch (formNode.children[key].question.renderingType) {\n                            case 'page':\n                                this._findTestOrderQuestionNodes(formNode.children[key]);\n                                break;\n                            case 'section':\n                                this._findTestOrderQuestionNodes(formNode.children[key]);\n                                break;\n                            case 'group':\n                                this._findTestOrderQuestionNodes(formNode.children[key]);\n\n                                break;\n                            case 'repeating':\n                                if (formNode.children) {\n                                    // tslint:disable-next-line:forin\n                                    for (const node in formNode.children) {\n                                        const question = formNode.children[node].question;\n                                        if (question.extras && question.extras.type === 'testOrder') {\n                                            this.formOrderNodes.push(formNode.children[node]);\n                                        }\n                                    }\n\n                                }\n                                break;\n                            default:\n                                break;\n\n                        }\n                    }\n                }\n            }\n\n        }\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { NodeBase, GroupNode, ArrayNode } from '../form-factory/form-node';\nimport { Form } from '../form-factory/form';\n\nimport { ValueAdapter } from './value.adapter';\nimport { ObsValueAdapter } from './obs.adapter';\nimport { OrderValueAdapter } from './order.adapter';\n\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Injectable()\nexport class EncounterAdapter implements ValueAdapter {\n\n    constructor(public ordersAdapter: OrderValueAdapter, public obsAdapter: ObsValueAdapter) { }\n\n    populateForm(form: Form, payload) {\n        this.populateNode(form.rootNode, payload);\n\n        if (Array.isArray(payload.orders)) {\n            this.ordersAdapter.populateForm(form, payload);\n        }\n        if (Array.isArray(payload.obs)) {\n            this.obsAdapter.populateForm(form, payload.obs);\n        }\n    }\n\n    populateNode(rootNode: NodeBase, payload) {\n\n        if (payload === undefined || payload === null) {\n            throw new Error('Expected payload');\n        }\n\n        const nodes = this.getEncounterNodes(rootNode);\n\n        nodes.forEach(node => {\n            switch (node.question.extras.type) {\n                case 'encounterDatetime':\n                    if (payload['encounterDatetime']) {\n                        // console.log('date', payload['encounterDatetime']);\n                        node.control.setValue(moment(payload['encounterDatetime']).toDate());\n                        node.initialValue = moment(payload['encounterDatetime']).toDate();\n                    }\n                    break;\n                case 'encounterProvider':\n                    if (Array.isArray(payload['encounterProviders']) && payload['encounterProviders'].length > 0) {\n                        const firstProvider: any = payload['encounterProviders'][0].provider;\n                        if (firstProvider && firstProvider.uuid) {\n                            node.control.setValue(firstProvider.uuid);\n                            node.initialValue = firstProvider.uuid;\n                        }\n                    }\n                    break;\n                case 'encounterLocation':\n                    if (payload['location'] && payload['location'].uuid) {\n                        node.control.setValue(payload['location'].uuid);\n                        node.initialValue = payload['location'].uuid;\n                    }\n                    break;\n                default:\n                    break;\n            }\n        });\n    }\n\n    generateFormPayload(form: Form) {\n        const payload = this.generateNodePayload(form.rootNode);\n\n        this.setNonFilledPayloadMembers(form, payload);\n\n        payload['obs'] = this.obsAdapter.generateFormPayload(form) || [];\n\n        payload['orders'] = this.ordersAdapter.generateFormPayload(form) || [];\n\n        return payload;\n    }\n\n    generateNodePayload(rootNode: NodeBase) {\n        const nodes = this.getEncounterNodes(rootNode);\n        const payload = {};\n\n        nodes.forEach(node => {\n            if (node.control.value !== null &&\n                node.control.value !== undefined &&\n                node.control.value !== '') {\n                switch (node.question.extras.type) {\n                    case 'encounterDatetime':\n                        const dateValue = moment(node.control.value)\n                            .utcOffset(rootNode.form.valueProcessingInfo.utcOffset || '+0300');\n                        payload['encounterDatetime'] = dateValue.format('YYYY-MM-DD HH:mm:ss');\n                        break;\n                    case 'encounterProvider':\n                        if (node.control.value && node.control.value !== '') {\n                            const providers = [];\n                            providers.push({\n                                provider: node.control.value,\n                                encounterRole: 'a0b03050-c99b-11e0-9572-0800200c9a66' // unknown provider role in the encounter as default\n                            });\n                            payload['encounterProviders'] = providers;\n                        }\n                        break;\n                    case 'encounterLocation':\n                        payload['location'] = node.control.value;\n                        break;\n                    default:\n                        break;\n                }\n            }\n        });\n\n        return payload;\n    }\n\n    getEncounterNodes(rootNode: NodeBase): Array<NodeBase> {\n        const results: Array<NodeBase> = [];\n        this._getEncounterNodes(rootNode, results);\n        return results;\n    }\n\n    setNonFilledPayloadMembers(form: Form, payload) {\n        if (form.valueProcessingInfo.patientUuid) {\n            this.setPayloadPatientUuid(payload, form.valueProcessingInfo.patientUuid);\n        }\n\n        if (form.valueProcessingInfo.visitUuid) {\n            this.setPayloadVisitUuid(payload, form.valueProcessingInfo.visitUuid);\n        }\n\n        if (form.valueProcessingInfo.encounterTypeUuid) {\n            this.setPayloadEncounterTypeUuid(payload, form.valueProcessingInfo.encounterTypeUuid);\n        }\n\n        if (form.valueProcessingInfo.formUuid) {\n            this.setPayloadFormUuid(payload, form.valueProcessingInfo.formUuid);\n        }\n\n        if (form.valueProcessingInfo.encounterUuid) {\n            this.setPayloadEncounterUuid(payload, form.valueProcessingInfo.encounterUuid);\n        }\n    }\n\n    setPayloadPatientUuid(payload, patientUuid: string) {\n        payload['patient'] = patientUuid;\n    }\n\n    setPayloadVisitUuid(payload, visitUuid: string) {\n        payload['visit'] = visitUuid;\n    }\n\n    setPayloadEncounterTypeUuid(payload, encounterTypeUuid: string) {\n        payload['encounterType'] = encounterTypeUuid;\n    }\n\n    setPayloadFormUuid(payload, formUuid: string) {\n        payload['form'] = formUuid;\n    }\n\n    setPayloadEncounterUuid(payload, encounterUuid: string) {\n        payload['uuid'] = encounterUuid;\n    }\n\n    private _getEncounterNodes(rootNode: NodeBase, array: Array<NodeBase>) {\n        if (this._isEncounterNode(rootNode)) {\n            array.push(rootNode);\n        }\n\n        if (rootNode instanceof GroupNode) {\n            const node = rootNode as GroupNode;\n            // tslint:disable-next-line:forin\n            for (const o in node.children) {\n                if (node.children[o] instanceof NodeBase) {\n                    this._getEncounterNodes(node.children[o], array);\n                }\n            }\n        }\n\n        if (rootNode instanceof ArrayNode) {\n            const node = rootNode as ArrayNode;\n            node.children.forEach(child => {\n                this._getEncounterNodes(child, array);\n            });\n        }\n    }\n\n    private _isEncounterNode(node: NodeBase): boolean {\n        if (node.question.extras &&\n            (node.question.extras.type === 'encounterDatetime' ||\n                node.question.extras.type === 'encounterProvider' ||\n                node.question.extras.type === 'encounterLocation')) {\n            return true;\n        }\n        return false;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { NodeBase, GroupNode, ArrayNode } from '../form-factory/form-node';\nimport { Form } from '../form-factory/form';\nimport { ValueAdapter } from './value.adapter';\n\n@Injectable()\nexport class PersonAttribuAdapter implements ValueAdapter {\n    constructor() { }\n\n    generateFormPayload(form: Form) {\n        return this.generateNodePayload(form.rootNode);\n    }\n\n    generateNodePayload(rootNode: NodeBase) {\n        const nodes = this.getPersonAttributeNodes(rootNode);\n        const payload = [];\n        nodes.forEach(node => {\n            if (node.control.value !== null &&\n                node.control.value !== undefined &&\n                node.control.value !== '' &&\n                node.initialValue !== node.control.value) {\n\n                if (node.question.extras.questionOptions.isSimpleValue === true) {\n                    payload.push({\n                        attributeType: node.question.extras.questionOptions.attributeType,\n                        value: node.control.value\n                    });\n                } else {\n                    payload.push({\n                        attributeType: node.question.extras.questionOptions.attributeType,\n                        hydratedObject: node.control.value\n                    });\n                }\n\n            }\n        });\n        return payload;\n    }\n\n    populateForm(form: Form, payload) {\n        this.populateNode(form.rootNode, payload);\n    }\n\n    populateNode(rootNode: NodeBase, payload) {\n        if (!Array.isArray(payload)) {\n            throw new Error('Expected an array of attributes');\n        }\n\n        const nodes = this.getPersonAttributeNodes(rootNode);\n\n        nodes.forEach(node => {\n            payload.forEach(element => {\n                if (element.attributeType.uuid\n                    === node.question.extras.questionOptions.attributeType) {\n                    if (element.value.uuid) {\n                        node.control.setValue(element.value.uuid);\n                        node.initialValue = element.value.uuid;\n                    } else {\n                        node.control.setValue(element.value);\n                        node.initialValue = element.value;\n                    }\n                }\n            });\n        });\n    }\n\n    getPersonAttributeNodes(rootNode: NodeBase): Array<NodeBase> {\n        const results: Array<NodeBase> = [];\n        this._getPersonAttributesNodes(rootNode, results);\n        return results;\n    }\n\n    private _getPersonAttributesNodes(rootNode: NodeBase, array: Array<NodeBase>) {\n        if (rootNode.question.extras &&\n            rootNode.question.extras.type === 'personAttribute') {\n            array.push(rootNode);\n        }\n\n        if (rootNode instanceof GroupNode) {\n            const node = rootNode as GroupNode;\n            // tslint:disable-next-line:forin\n            for (const o in node.children) {\n                if (node.children[o] instanceof NodeBase) {\n                    this._getPersonAttributesNodes(node.children[o], array);\n                }\n            }\n        }\n\n        if (rootNode instanceof ArrayNode) {\n            const node = rootNode as ArrayNode;\n            node.children.forEach(child => {\n                this._getPersonAttributesNodes(child, array);\n            });\n        }\n    }\n}\n","import { Component, OnInit, Input, forwardRef, ViewChild, Output, EventEmitter, Renderer2 } from '@angular/core';\nimport { SelectComponent } from '../../components/select/select.component';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nimport * as _ from 'lodash';\n@Component({\n    selector: 'remote-select',\n    template: `<div>\n    <ng-select [id]=\"componentID\" [noFilter]=\"0\" (selected)=\"selected($event)\" (deselected)=\"removed($event)\" [options]=\"items\" [allowClear]=\"true\"\n        [placeholder]=\"placeholder\" [notFoundMsg]=\"notFoundMsg\" (typed)=\"typed($event)\" tabindex=\"0\">\n    </ng-select>\n    <div *ngIf=\"loading\">\n        resolving....\n    </div>\n</div>\n`,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => RemoteSelectComponent),\n            multi: true,\n        }]\n})\nexport class RemoteSelectComponent implements OnInit, ControlValueAccessor {\n    // @Input() dataSource: DataSource;\n    @Input() placeholder = 'Search...';\n    @Input() componentID: string;\n    items = [];\n    value = [];\n    loading = false;\n    searchText = '';\n    notFoundMsg = 'match no found';\n    @Output() done: EventEmitter<any> = new EventEmitter<any>();\n\n    characters = [];\n    @ViewChild(SelectComponent) private selectC: SelectComponent;\n\n\n    private _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n        if (this._dataSource && this._dataSource.dataFromSourceChanged) {\n            this.subscribeToDataSourceDataChanges();\n        }\n    }\n\n\n    constructor(private renderer: Renderer2) { }\n\n    ngOnInit() {\n\n    }\n\n    subscribeToDataSourceDataChanges() {\n        this._dataSource.dataFromSourceChanged.subscribe((results) => {\n            if (results.length > 0) {\n                this.items = results;\n                this.notFoundMsg = '';\n                // console.log('updating items', results, this.selectC.value);\n                this.restoreSelectedValue(this.selectC.value, results);\n            } else {\n                this.notFoundMsg = 'Not found';\n                this.items = [];\n            }\n        });\n    }\n\n    public typed(value: any): void {\n        this.search(value);\n    }\n    search(value: string) {\n        if (this.dataSource) {\n            this.searchText = value;\n            this.notFoundMsg = 'Loading.........';\n            this.dataSource.searchOptions(value)\n                .subscribe((result) => {\n                    if (result.length > 0) {\n                        const existing = _.map(this.value, _.clone);\n                        const concat = existing.concat(result);\n                        this.items = _.uniqBy(concat, 'value');\n                    }\n                    this.notFoundMsg = '';\n                }, (error) => {\n                    this.notFoundMsg = 'Errored';\n                });\n        }\n    }\n\n    restoreSelectedValue(value, results) {\n        let found = false;\n        _.each(results, (item) => {\n            if (item.value === value) {\n                setTimeout(() => {\n                    this.selectC.select(value);\n                    this.selectC.value = value;\n                });\n                found = true;\n            }\n        });\n        if (!found) {\n            // console.log('not found after loading items', value, results);\n            setTimeout(() => {\n                this.selectC.select('');\n                this.selectC.value = '';\n            });\n        }\n    }\n\n    canSearch(searchText: string) {\n        return (searchText.length - this.searchText.length >= 2 ||\n            (searchText.length - this.searchText.length <= 2 && searchText !== '')) && this.loading === false;\n    }\n\n    // this is the initial value set to the component\n    public writeValue(value: any) {\n        if (value && value !== '') {\n            if (this.dataSource) {\n                this.loading = true;\n                this.dataSource.resolveSelectedValue(value).subscribe((result: any) => {\n                    this.items = [result];\n                    setTimeout(() => {\n                        this.selectC.select(result.value);\n                        this.selectC.value = result.value;\n                    });\n                    this.loading = false;\n                }, (error) => {\n                    this.loading = false;\n                });\n            }\n        }\n    }\n    // registers 'fn' that will be fired when changes are made\n    // this is how we emit the changes back to the form\n    public registerOnChange(fn: any) {\n        this.propagateChange = fn;\n    }\n\n    // not used, used for touch input\n    public registerOnTouched() { }\n    // change events from the textarea\n    onChange(event) {\n        this.propagateChange(event.id);\n        // .....\n        // update the form\n        // this.propagateChange(this.data);\n    }\n    removed(event) {\n        console.log('Removed');\n        this.propagateChange('');\n    }\n    selected(event) {\n        this.propagateChange(event.value);\n    }\n\n    // the method set in registerOnChange, it is just\n    // a placeholder for a method that takes one parameter,\n    // we use it to emit changes back to the form\n    private propagateChange = (change: any) => { };\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\n// import { SelectModule } from 'ng2-select/ng2-select';\nimport { SelectModule } from '../../components/select/select.module';\nimport { RemoteSelectComponent } from './remote-select.component';\n\n@NgModule({\n    imports: [CommonModule, SelectModule, FormsModule],\n    exports: [RemoteSelectComponent],\n    declarations: [RemoteSelectComponent],\n    providers: [],\n})\nexport class RemoteSelectModule { }\n","import { Component, OnInit, OnChanges, Input } from '@angular/core';\n\nimport { LeafNode } from '../../form-entry/form-factory/form-node';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Component({\n  selector: 'appointments-overview',\n  template: `<div *ngIf=\"showAppointments\" class=\"appointments\">\n  <p *ngIf=\"loadingAppointments\">\n    <span *ngIf=\"!appointmentsLoaded && errorLoadingAppointments\">Error checking appointments</span>\n    <span *ngIf=\"loadingAppointments\"><span\n      class=\"fa fa-spinner fa-spin\"></span>Checking appointments...</span>\n  </p>\n  <div *ngIf=\"appointmentsLoaded && !errorLoadingAppointments\">\n    <table *ngIf=\"appointments.length>0\" class=\"table table-stripped table-bordered\">\n      <thead>\n      <tr>\n        <th *ngFor=\"let appointment of appointments\" [ngClass]=\"{'active': appointment.date === today}\">\n          <span>{{appointment.date}}</span>\n        </th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr>\n        <td *ngFor=\"let appointment of appointments\"\n            [ngClass]=\"{'active': appointment.date === today}\">\n          <span><strong><em>{{appointment.count}}</em></strong></span>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n`,\n  styles: [`.appointments{margin-top:12px;font-size:12px;color:#999}.appointments p{padding-top:12px}.appointments th{border-bottom:0!important;color:#333}.appointments td span,.appointments th span{display:block}.appointments td.active,.appointments th.active{background-color:#3c8dbc;color:#fff!important;padding:0}.appointments td.active span,.appointments th.active span{padding:4px}.appointments span.fa{display:inline-block;margin-right:7px}`]\n})\nexport class AppointmentsOverviewComponent implements OnInit, OnChanges {\n  @Input() node: LeafNode;\n  showAppointments = false;\n  loadingAppointments = false;\n  errorLoadingAppointments = false;\n  appointmentsLoaded = false;\n  appointments: Array<any> = [];\n  today = '';\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges() {\n    this.node.control.valueChanges.subscribe((v) => {\n      this.resetProperties();\n      const node = this.node;\n      if (node.question.extras.questionOptions.concept\n        && (node.question.extras.questionOptions.concept === 'a8a666ba-1350-11df-a1f1-0026b9348838'\n        || node.question.extras.questionOptions.concept === 'a89d2398-1350-11df-a1f1-0026b9348838')) {\n        // console.log('what change is here', this.showAppointments);\n        if (!this.showAppointments) {\n          this.loadingAppointments = true;\n          this.showAppointments = true;\n          let dataSource;\n          if (node.form && node.form.dataSourcesContainer.dataSources) {\n            dataSource = node.form.dataSourcesContainer.dataSources.monthlyScheduleResourceService;\n          }\n          const locationUuid = node.form.dataSourcesContainer.dataSources.userLocation.uuid;\n          if (dataSource && locationUuid) {\n            const startDate = moment(v).startOf('week').add(1, 'day').format('YYYY-MM-DD');\n            const endDate = moment(v).endOf('week').subtract(1, 'day').format('YYYY-MM-DD');\n            this.today = moment(v).format('DD-MM-YYYY');\n            // create 5 week days\n            const _data = [];\n            const params = {\n              'programType': ['781d85b0-1359-11df-a1f1-0026b9348838', '781d897a-1359-11df-a1f1-0026b9348838',\n              '96047aaf-7ab3-45e9-be6a-b61810fe617d', 'c19aec66-1a40-4588-9b03-b6be55a8dd1d', 'f7793d42-11ac-4cfd-9b35-e0a21a7a7c31',\n              '334c9e98-173f-4454-a8ce-f80b20b7fdf0', '96ba279b-b23b-4e78-aba9-dcbd46a96b7b', '781d8880-1359-11df-a1f1-0026b9348838']\n            };\n            const urlParams = encodeURI(JSON.stringify(params));\n            for (let i = 1; i <= 5; i++) {\n              _data.push({\n                date: moment(v).startOf('week').add(i, 'day').format('DD-MM-YYYY'),\n                count: 0\n              });\n            }\n            dataSource.getMonthlySchedule({\n              startDate: startDate,\n              endDate: endDate,\n              limit: 5,\n              locationUuids: locationUuid,\n              programVisitEncounter: urlParams\n            }).subscribe((data) => {\n              this.appointmentsLoaded = true;\n              this.loadingAppointments = false;\n              _data.map((appointment, index) => {\n                appointment.count = data[index] !== undefined ? data[index].count.scheduled : 0;\n              });\n              this.appointments = _data;\n            }, (error) => {\n              this.loadingAppointments = false;\n              this.errorLoadingAppointments = true;\n              this.showAppointments = false;\n              console.error(error);\n            });\n          } else {\n            this.showAppointments = false;\n            this.errorLoadingAppointments = true;\n          }\n        }\n      }\n    });\n  }\n\n  resetProperties() {\n    this.loadingAppointments = false;\n    this.appointmentsLoaded = false;\n    this.errorLoadingAppointments = false;\n    this.showAppointments = false;\n    this.appointments = [];\n    this.today = '';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { GroupNode, LeafNode, ArrayNode, NodeBase } from '../form-entry/form-factory/form-node';\nimport * as _ from 'lodash';\nimport { DataSource } from '../form-entry/question-models/interfaces/data-source';\nimport { Observable } from 'rxjs';\nimport { SelectOption } from '../form-entry/question-models/interfaces/select-option';\nconst comma = ', ';\nconst newLine = '\\n';\n\n@Injectable()\nexport class EncounterViewerService implements DataSource {\n\n    constructor() {}\n    public resolveSelectedValue(value: any): Observable<SelectOption> {\n        return;\n    }\n    public searchOptions(searchText: any): Observable<SelectOption[]> {\n        return;\n    }\n    public fileUpload(data: any): Observable<any> {\n        return;\n    }\n    public fetchFile(url: any): Observable<any> {\n        return;\n    }\n\n    public resolveSelectedValueFromSchema( answerUuid: string, schema: any): string {\n        let label;\n        if (schema.pages) {\n            _.forEach(schema.pages, (page) => {\n              const l = this.resolveSelectedValueFromSchema(answerUuid, page);\n              if (l) { label = l; }\n            }); }\n\n        if (schema.sections) {\n            _.forEach(schema.sections, (section) => {\n                const l = this.resolveSelectedValueFromSchema(answerUuid, section);\n                if (l) { label = l; }\n            });\n        }\n\n        if (schema.questions) {\n            _.forEach(schema.questions, (question) => {\n                 if (question.questions) {\n                    const l = this.resolveSelectedValueFromSchema(answerUuid, question);\n                    if (l) { label = l; }\n                } else {\n                    if (question.questionOptions.answers) {\n                    _.forEach(question.questionOptions.answers, (answer) => {\n                        if (answer.concept === answerUuid) {\n                            label = answer.label;\n                        }\n                    });\n                } else if (question.questionOptions.selectableOrders) {\n                    _.forEach(question.questionOptions.selectableOrders, (order) => {\n                        if (order.concept === answerUuid) { label = order.label; }\n                    });\n                }\n\n                }\n            });\n        }\n        return label;\n\n\n    }\n\n    public hasAnswer(node: NodeBase) {\n        let answered = false;\n        if (node.initialValue) {\n            answered = true;\n        }\n        return answered;\n    }\n\n    public questionsAnswered(node: any, answered?: boolean[]) {\n        const $answered = answered || [];\n        if (node.question.renderingType === 'page') {\n            _.forEach(node.children, (childNode: any) => {\n                this.questionsAnswered(childNode, $answered); });\n\n        } else if (node.question.renderingType === 'section') {\n            _.forEach(node.children, (childNode) => {\n                if (childNode.question.renderingType === 'group') {\n                   _.forEach(childNode.children, (child) => {\n                       const ans = this.questionsAnswered(child, $answered);\n                       if (ans) { $answered.push(ans); }\n                   });\n                } else if (this.hasAnswer(childNode)) { $answered.push(true); }\n            });\n        } else { return this.hasAnswer(node); }\n\n        if ($answered.length > 0) {return true; } else { return false; }\n    }\n\n\n    public isDate(val: any) {\n        if (Date.parse(val)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public convertTime(unixTimestamp: number) {\n        const a = new Date(unixTimestamp);\n        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May',\n                        'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        const year = a.getFullYear();\n        const month = months[a.getMonth()];\n        const date = a.getDate();\n        const hour = a.getHours();\n        const min = a.getMinutes();\n        const sec = a.getSeconds();\n        const suffix = hour < 12 ? 'AM' : 'PM';\n        let time;\n        if (hour === 0 && min === 0) {\n            time = date + ' ' + month + ' ' + year;\n        } else {\n            time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + suffix + ' (EAT)';\n        }\n        return time;\n\n    }\n}\n","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { NodeBase, GroupNode, LeafNode } from '../../form-entry/form-factory/form-node';\nimport { QuestionBase } from '../../form-entry/question-models/question-base';\nimport * as _ from 'lodash';\nimport { EncounterViewerService } from '../encounter-viewer.service';\nimport { AfeFormGroup } from '../../abstract-controls-extension/afe-form-group';\nimport { DataSources } from '../../form-entry/data-sources/data-sources';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\n\n@Component({\n    selector: 'encounter-viewer',\n    template: `<div class=\"viewer\">\n\n\n  <div *ngIf=\"rootNode.question.renderingType === 'form'\" class=\"form\">\n    <div *ngFor=\"let question of rootNode.question.questions; let i = index;\">\n      <div *ngIf=\"questionsAnswered(rootNode.children[question.key])\">\n        <div [attr.id]=\"'page'+i\" class=\"panel panel-default\">\n          <p class=\"page-label panel-heading text-primary\">{{question.label}}</p>\n          <div class=\"panel-body\">\n            <encounter-viewer [node]=\"rootNode.children[question.key]\" [schema]=\"_schema\" [parentComponent]=\"this\" [parentGroup]=\"rootNode.control\"></encounter-viewer>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div *ngIf=\"rootNode.question.renderingType === 'page'\" class=\"page\">\n    <encounter-viewer *ngFor=\"let question of rootNode.question.questions\" [parentComponent]=\"this\" [node]=\"rootNode.children[question.key]\"\n      [schema]=\"_schema\" [parentGroup]=\"parentGroup\"></encounter-viewer>\n  </div>\n\n\n  <div *ngIf=\"rootNode.question.renderingType === 'section'&& questionsAnswered(rootNode)\"\n    class=\"section\">\n    <div class=\"panel panel-primary\">\n      <p class=\"panel-heading section-label\">{{ rootNode.question.label }}</p>\n    </div>\n    <div *ngFor=\"let question of rootNode.question.questions\">\n      <encounter-viewer [node]=\"rootNode.children[question.key]\" [parentComponent]=\"this\" [schema]=\"_schema\" [parentGroup]=\"parentGroup\"></encounter-viewer>\n    </div>\n  </div>\n\n  <!--Leaf Controls-->\n  <div style=\"margin-left:10px;\">\n  <form *ngIf=\"rootNode.question.controlType === 0\" [formGroup]=\"parentGroup\">\n    <div *ngIf=\"rootNode.control.value\">\n    <div class=\"question-answer\">\n      <label *ngIf=\"rootNode.question.label\" [attr.for]=\"rootNode.question.key\" style=\"font-weight:400;\">\n          {{ rootNode.question.label }}\n      </label>\n      <span *ngIf=\"checkForColon(rootNode.question.label)\">:</span>\n      <div [ngSwitch]=\"rootNode.question.renderingType\" style=\"display:inline-block; font-weight:bold;\">\n          <div *ngSwitchCase=\" 'file' \">\n            <file-preview [formControlName]=\"rootNode.question.key\" [id]=\"rootNode.question.key + 'id'\" [dataSource]=\"fileDataSource\"></file-preview>\n          </div>\n          <div *ngSwitchCase=\"'remote-select'\">\n            <remote-answer [formControlName]=\"rootNode.question.key\" [id]=\"rootNode.question.key + 'id'\" [dataSource]=\"remoteDataSource\"></remote-answer>\n          </div>\n          <div *ngSwitchDefault style=\"display:inline-block\">\n              <question-control [schema]=\"_schema\" [value]=\"rootNode.control.value\" [dataSource]=\"customDataSource\"></question-control>\n            </div>\n      </div>\n     \n    </div>\n    </div>\n  </form>\n</div>\n\n  <!--Array Controls-->\n  <div *ngIf=\"rootNode.question.controlType === 1 && questionsAnswered(rootNode)\">\n    <div [ngSwitch]=\"rootNode.question.renderingType\">\n      <div *ngSwitchCase=\" 'repeating' \">\n        <div [ngSwitch]=\"rootNode.question.extras.type\">\n          <div *ngSwitchCase=\"'testOrder'\">\n            <label>{{rootNode.question.label}}:</label>\n            <div *ngFor=\"let child of rootNode.children; let i=index \">\n              <encounter-viewer *ngFor=\"let question of child.question.questions \" [parentComponent]=\"this\" [node]=\"child.children[question.key]\n                \" [parentGroup]=\"child.control \" [schema]=\"_schema\"></encounter-viewer>\n            </div>\n          </div>\n          \n          <div *ngSwitchCase=\"'obsGroup'\">\n            <div *ngFor=\"let child of rootNode.children; let i=index \">\n              <encounter-viewer *ngFor=\"let question of child.question.questions \" [parentComponent]=\"this\" [node]=\"child.children[question.key]\n                \" [parentGroup]=\"child.control \" [schema]=\"_schema\"></encounter-viewer>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div *ngIf=\"rootNode.question.controlType === 2\">\n\n    <!--GROUP-->\n    <div [ngSwitch]=\"rootNode.question.renderingType \">\n      <div *ngSwitchCase=\" 'group' \">\n        <encounter-viewer *ngFor=\"let question of rootNode.question.questions \" [parentComponent]=\"this\" [node]=\"rootNode.children[question.key]\n                  \" [parentGroup]=\"rootNode.control \" [schema]=\"_schema\"></encounter-viewer>\n      </div>\n      <div *ngSwitchCase=\" 'field-set' \">\n        <encounter-viewer *ngFor=\"let question of rootNode.question.questions \" [parentComponent]=\"this\" [node]=\"rootNode.children[question.key]\n                  \" [parentGroup]=\"rootNode.control \" [schema]=\"_schema\"></encounter-viewer>\n      </div>\n    </div>\n  </div>\n\n\n\n  </div>\n`,\n    styles: [`.page-label{font-size:20px;font-weight:700}.section-label{font-size:18px;font-weight:500}.panel-primary{border:none!important}.question-answer{font-size:16px}.panel{margin-bottom:5px}div.section{margin-bottom:15px!important}.line-breaker{white-space:pre-line}hr{margin:10px}`],\n})\nexport class EncounterViewerComponent implements OnInit {\n    public rootNode: NodeBase;\n    public enc: any;\n    public fileDataSource: DataSource;\n    public remoteDataSource: DataSource;\n    public customDataSource: DataSource;\n    public _schema;\n    @Input() public parentGroup: AfeFormGroup;\n    @Input() public parentComponent: EncounterViewerComponent;\n    @Input() set node(rootNode: NodeBase) {\n        this.rootNode = rootNode;\n    }\n\n    @Input() public set schema(schema: any) {\n        this._schema = schema;\n    }\n\n    @Input() public set encounter(enc: any) {\n        this.enc = enc;\n    }\n     @Input() set form(form: any) {\n         this.rootNode = form.rootNode;\n         this._schema = form.schema;\n         console.log(this.rootNode);\n    }\n\n    constructor(private encounterViewerService: EncounterViewerService,\n               private dataSources: DataSources) {\n    }\n\n    public ngOnInit() {\n        if (this.rootNode && this.rootNode.question.extras\n            && this.rootNode.question.renderingType === 'file') {\n                this.fileDataSource =\n                this.dataSources.dataSources[this.rootNode.question.dataSource];\n        } else if (this.rootNode && this.rootNode.question.extras\n            && this.rootNode.question.renderingType === 'remote-select') {\n                this.remoteDataSource =\n                this.dataSources.dataSources[this.rootNode.question.dataSource];\n            } else {\n                this.customDataSource = this.encounterViewerService;\n            }\n    }\n\n    public questionsAnswered(node: any) {\n        const $answered = this.encounterViewerService.questionsAnswered(node);\n        return $answered;\n    }\n\n    public questionAnswered(node: NodeBase) {\n        const answered = this.encounterViewerService.hasAnswer(node);\n        return answered;\n    }\n\n    public checkForColon(questionLabel: string) {\n        if (questionLabel.indexOf(':') === -1) { return true; } else { return false; }\n    }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Form } from '../../form-entry/form-factory/form';\nimport { NodeBase } from '../../form-entry/form-factory/form-node';\nimport { EncounterAdapter } from '../../form-entry/value-adapters/encounter.adapter';\n@Component({\n    selector: 'encounter-renderer',\n    template: `<encounter-viewer class=\"card\" [form]=\"$form\" [encounter]=\"$enc\"></encounter-viewer>\n\n\n`,\n    styles: [`.card{box-shadow:0 2px 5px 0 rgba(0,0,0,.16),0 2px 10px 0 rgba(0,0,0,.12)}`]\n})\nexport class EncounterContainerComponent implements OnInit {\n    public $form: Form;\n    public $enc: any;\n\n    @Input() public set form(form) {\n        this.$form = form;\n    }\n    @Input() public set encounter(enc) {\n        this.$enc = enc;\n    }\n\n    constructor(private encAdapter: EncounterAdapter) { }\n\n    ngOnInit() {\n    }\n}\n","import {Component, OnInit, Input} from '@angular/core';\nimport { EncounterViewerService } from '../encounter-viewer.service';\nimport * as _ from 'lodash';\n\n@Component({\n    selector: 'question-control',\n    styles: [`input{border:none;box-shadow:none;color:#000;background:#fff!important;padding-top:23px;display:block;position:relative}`],\n    template: `<div>\n    {{innerValue}}\n</div>`,\n  })\nexport class QuestionControlComponent implements OnInit {\n    @Input() public set schema(schema: any) {\n      this._schema = schema;\n    }\n    @Input() public set value(value) {\n      this._value = value;\n    }\n    @Input() public set dataSource(dataSource: any) {\n      this._dataSource = dataSource;\n    }\n    // The internal data model\n    public innerValue: any = '';\n    private _value: any;\n    private _schema: any;\n    private _dataSource: EncounterViewerService;\n    constructor() {}\n\n    ngOnInit() {\n      this.writeValue(this._value);\n    }\n    public isUuid(value: string) {\n      if (value.length === 36 && value.indexOf(' ') === -1 && value.indexOf('.') === -1) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    // Current time string.\n\n    public writeValue(v: any, arrayElement?: boolean) {\n      if (v !== this.innerValue) {\n          if (this.isUuid(v)) {\n            if (!arrayElement) {\n              const val =\n              this._dataSource.resolveSelectedValueFromSchema(v, this._schema);\n              if (val) { this.innerValue = val.toUpperCase(); } else { this.innerValue = v; }\n            } else { return this._dataSource.resolveSelectedValueFromSchema(v, this._schema); }\n          } else if (_.isArray(v)) {\n            const arr = [];\n            _.forEach(v, (el) => {\n              arr.push(this.writeValue(el, true));\n            });\n            this.innerValue = arr;\n          } else if (this.isDate(v)) {\n              if (!arrayElement) { this.innerValue = this._dataSource.convertTime(v); } else {\n                  return  this._dataSource.convertTime(v);\n              }\n          } else {\n              if (!arrayElement) { this.innerValue = v; } else {\n                return v;\n              }\n          }\n\n      }\n    }\n\n    public isDate(str: string) {\n      return this._dataSource.isDate(str) && !_.isNumber(str);\n    }\n\n  }\n","import {\n    Component, OnInit, Input, forwardRef,\n    OnChanges, Output, EventEmitter\n  } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { EncounterViewerService } from '../encounter-viewer.service';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nconst noop = () => {};\n\n@Component({\n    selector: 'file-preview',\n    styles: [``],\n    template: `<div *ngIf=\"innerValue\">\n              <img class=\"img-responsive\"\n                [src]=\"innerValue | secure:this._dataSource.fetchFile\" alt=\"image\" />\n                </div>`,\n    providers: [\n      {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => FilePreviewComponent),\n        multi: true\n      }\n    ]\n  })\nexport class FilePreviewComponent implements ControlValueAccessor {\n    @Input() public source: any;\n    public innerValue = null;\n    public _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n    }\n    // Placeholders for the callbacks which are later providesd\n    // by the Control Value Accessor\n    private onTouchedCallback: () => void = noop;\n    private onChangeCallback: (_: any) => void = noop;\n    constructor(private encounterService: EncounterViewerService) {}\n    // get accessor\n    get value(): any {\n      return this.innerValue;\n    }\n\n    // set accessor including call the onchange callback\n    set value(v: any) {\n      if (v !== this.innerValue) {\n        this.innerValue = v;\n      }\n    }\n    // Current time string.\n\n    public writeValue(v: any) {\n      if (v !== this.innerValue) {\n          this.innerValue = v;\n      }\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnChange(fn: any) {\n      this.onChangeCallback = fn;\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnTouched(fn: any) {\n      this.onTouchedCallback = fn;\n    }\n\n    public onBlur() {\n      this.onTouchedCallback();\n    }\n\n    public onChange(event: any) {\n      // const files = event.srcElement.files;\n      // const fileToLoad = files[0];\n\n      // const fileReader = new FileReader();\n\n      // fileReader.onload = (fileLoadedEvent) => {\n      //   const data = fileReader.result;\n      //   const fileType = data.substring('data:image/'.length, data.indexOf(';base64'));\n      //   const payload = {\n      //     data,\n      //     extension: fileType\n      //   };\n      // };\n\n      // fileReader.readAsDataURL(fileToLoad);\n    }\n  }\n","import {\n    Component, OnInit, Input, forwardRef,\n    OnChanges, Output, EventEmitter\n  } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nconst noop = () => {};\n\n@Component({\n    selector: 'remote-answer',\n    styles: [],\n    template: `\n    <div *ngIf=\"innerValue\">\n      {{innerValue}}\n      </div>\n`,\n    providers: [\n      {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => RemoteAnswerComponent),\n        multi: true\n      }\n    ]\n  })\nexport class RemoteAnswerComponent implements ControlValueAccessor {\n    @Input() public source: any;\n    public innerValue = null;\n    private _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n    }\n    // Placeholders for the callbacks which are later providesd\n    // by the Control Value Accessor\n    private onTouchedCallback: () => void = noop;\n    private onChangeCallback: (_: any) => void = noop;\n    constructor() {}\n    // get accessor\n    get value(): any {\n      return this.innerValue;\n    }\n\n    // set accessor including call the onchange callback\n    set value(v: any) {\n      if (v !== this.innerValue) {\n        this.innerValue = v;\n      }\n    }\n    // Current time string.\n\n    public writeValue(v: any) {\n      if (v !== this.innerValue) {\n        if (this._dataSource) {\n          this._dataSource.resolveSelectedValue(v).subscribe((ans) => {\n            this.innerValue = ans.label;\n        });\n        } else {\n          this.innerValue = v;\n        }\n      }\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnChange(fn: any) {\n      this.onChangeCallback = fn;\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnTouched(fn: any) {\n      this.onTouchedCallback = fn;\n    }\n\n    public onBlur() {\n      this.onTouchedCallback();\n    }\n\n    public onChange(event: any) {\n    }\n  }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EncounterViewerComponent } from './encounter-view/encounter-viewer.component';\nimport { EncounterContainerComponent } from './encounter-container/encounter-container.component';\nimport { EncounterViewerService } from './encounter-viewer.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { QuestionControlComponent } from './display-controls/question-control.component';\nimport { FilePreviewComponent } from './display-controls/file-preview.component';\nimport { RemoteAnswerComponent } from './display-controls/remote-answer.component';\nimport { HttpModule } from '@angular/http';\nimport { SharedModule } from '../shared.module';\n@NgModule({\n    declarations: [\n        EncounterViewerComponent,\n        EncounterContainerComponent,\n        QuestionControlComponent,\n        FilePreviewComponent,\n        RemoteAnswerComponent\n    ],\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        CommonModule,\n        HttpModule,\n        SharedModule\n    ],\n    providers: [\n        EncounterViewerService,\n    ],\n    exports: [\n        EncounterContainerComponent,\n        HttpModule\n    ],\n})\nexport class EncounterViewerModule {}\n","import { Component, Input, forwardRef, OnInit, AfterViewInit } from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'checkbox',\n  template: `<div *ngFor=\"let option of options; let i = index;\">\n    <label class=\"form-control no-border\">\n        <input type=\"checkbox\" id=\"i + 'id'\" (change)=\"selectOpt(option, $event)\" value=\"option.value\">\n        {{ option.label }}\n    </label>\n</div>`,\n  providers: [\n    {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => CheckboxControlComponent),\n        multi: true,\n    }],\n  styles: [`\n  .no-border {\n    border: 0;\n    box-shadow: none;\n  }`]\n})\nexport class CheckboxControlComponent implements OnInit, AfterViewInit {\n\n  @Input() public options;\n\n  public _value: Array<any> = [];\n\n  public ngOnInit() {}\n\n  public ngAfterViewInit() {}\n\n  public writeValue(value: any) {\n    this.value = value;\n  }\n\n  public registerOnChange(fn: (_: any) => void) {\n    this.onChange = fn;\n  }\n\n  public registerOnTouched(fn: () => void) {\n    this.onTouched = fn;\n  }\n\n  get value(): any {\n    if (this._value.length === 0) {\n        return '';\n    } else {\n        return this._value || this._value[0];\n    }\n  }\n\n  set value(v: any) {\n    if (typeof v === 'undefined' || v === null || v === '') {\n        v = [];\n    } else if (typeof v === 'string') {\n        v = [v];\n    } else if (!Array.isArray(v)) {\n        throw new TypeError('Value must be a string or an array.');\n    }\n  }\n\n  public selectOpt(option, event) {\n    if (event.target.checked) {\n      this._value.push(option.value);\n    } else {\n      this.options.forEach((o) => {\n        if (o.value === option.value) {\n          this._value.splice(o, 1);\n        }\n      });\n    }\n\n    this.onChange(this.value);\n  }\n\n  private onChange = ( change: any) => { };\n  private onTouched = () => { };\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\nimport { CheckboxControlComponent } from './checkbox.component';\n\n@NgModule({\n    declarations: [\n        CheckboxControlComponent\n    ],\n    exports: [\n        CheckboxControlComponent\n    ],\n    imports: [CommonModule, FormsModule]\n})\nexport class CheckboxModule { }\n","import { NgModule } from '@angular/core';\nimport { MatTabsModule , MatIconModule , MatCardModule} from '@angular/material';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormBuilder } from '@angular/forms';\nimport { DebugModeService } from '../form-entry/services/debug-mode.service';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { FormErrorsService } from './services/form-errors.service';\nimport { FormControlService } from './form-factory/form-control.service';\nimport { ValidationFactory } from './form-factory/validation.factory';\nimport { FormRendererComponent } from './form-renderer/form-renderer.component';\nimport { ErrorRendererComponent } from './error-renderer/error-renderer.component';\nimport { HistoricalValueDirective } from './directives/historical-value-directive';\nimport { HistoricalFieldHelperService } from './helpers/historical-field-helper-service';\nimport { SelectModule } from '../components/select/select.module';\nimport { RemoteFileUploadModule } from '../components/file-upload/file-upload.module';\nimport { DateTimePickerModule } from '../components/date-time-picker/date-time-picker.module';\nimport { NgxDateTimePickerModule } from '../components/ngx-date-time-picker/ngx-date-time-picker.module';\nimport { AfeNgSelectComponent } from '../components/afe-ng-select.component';\nimport { HidersDisablersFactory } from './form-factory/hiders-disablers.factory';\nimport { AlertsFactory } from './form-factory/show-messages.factory';\nimport { ExpressionRunner } from './expression-runner/expression-runner';\nimport { JsExpressionHelper } from './helpers/js-expression-helper';\nimport { FormSchemaCompiler } from './services/form-schema-compiler.service';\nimport { FormFactory } from './form-factory/form.factory';\nimport { QuestionFactory } from './form-factory/question.factory';\nimport { ControlRelationsFactory } from './form-factory/control-relations.factory';\nimport { EncounterAdapter } from './value-adapters/encounter.adapter';\nimport { PersonAttribuAdapter } from './value-adapters/person-attribute.adapter';\nimport { OrderValueAdapter } from './value-adapters/order.adapter';\nimport { ObsAdapterHelper } from './value-adapters/obs-adapter-helper';\nimport { ObsValueAdapter } from './value-adapters/obs.adapter';\nimport { RemoteSelectModule } from '../components/remote-select/remote-select.module';\nimport { AppointmentsOverviewComponent} from '../components/appointments-overview/appointments-overview.component';\nimport { EncounterViewerModule } from '../encounter-viewer/encounter-viewer.module';\nimport { CheckboxModule } from '../components/check-box/checkbox.module';\nimport { SharedModule } from '../shared.module';\n\n\n@NgModule({\n    imports: [CommonModule,\n        ReactiveFormsModule,\n        CollapseModule,\n        SelectModule,\n        DateTimePickerModule,\n        RemoteSelectModule,\n        RemoteFileUploadModule,\n        EncounterViewerModule,\n        CheckboxModule,\n        MatIconModule,\n        MatTabsModule,\n        MatCardModule,\n        NgxDateTimePickerModule,\n        SharedModule\n    ],\n    declarations: [\n        FormRendererComponent,\n        AfeNgSelectComponent,\n        AppointmentsOverviewComponent,\n        HistoricalValueDirective,\n        ErrorRendererComponent\n    ],\n    providers: [\n        FormBuilder,\n        FormControlService,\n        FormErrorsService,\n        ValidationFactory,\n        HidersDisablersFactory,\n        AlertsFactory,\n        ExpressionRunner,\n        JsExpressionHelper,\n        HistoricalFieldHelperService,\n        FormSchemaCompiler,\n        FormFactory,\n        QuestionFactory,\n        ValidationFactory,\n        ControlRelationsFactory,\n        ObsAdapterHelper,\n        ObsValueAdapter,\n        EncounterAdapter,\n        PersonAttribuAdapter,\n        OrderValueAdapter,\n        DebugModeService\n    ],\n    exports: [FormRendererComponent, AfeNgSelectComponent,\n        ErrorRendererComponent, DateTimePickerModule, EncounterViewerModule , NgxDateTimePickerModule]\n})\nexport class FormEntryModule {\n\n}\n","\nexport class Pair {\n\n  key: string;\n\n  value: any;\n\n  constructor(key: string, value: any) {\n    this.key = key;\n    this.value = value;\n  }\n}\n"]}